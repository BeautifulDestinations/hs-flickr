
==================== FINAL INTERFACE ====================
2016-03-01 11:43:06.433497 UTC

interface flickr-0.3.3:Flickr.Types.Import 7084
  interface hash: f79527937c6ad832fc13995d9354e3c3
  ABI hash: da2c9786faefb0407bdc4730d0d4b181
  export-list hash: 85b5f3b03fa235dd576ef02c774e9eab
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 690a23c9cb04442b1cf1909a7fda8580
  used TH splices: False
  where
exports:
  Flickr.Types.Import.eltActivity
  Flickr.Types.Import.eltAuthFrob
  Flickr.Types.Import.eltAuthToken
  Flickr.Types.Import.eltBandwidth
  Flickr.Types.Import.eltBlog
  Flickr.Types.Import.eltBlogsList
  Flickr.Types.Import.eltBool
  Flickr.Types.Import.eltCategory
  Flickr.Types.Import.eltCluster
  Flickr.Types.Import.eltClusterList
  Flickr.Types.Import.eltComment
  Flickr.Types.Import.eltCommentID
  Flickr.Types.Import.eltCommentList
  Flickr.Types.Import.eltContact
  Flickr.Types.Import.eltContactList
  Flickr.Types.Import.eltContentType
  Flickr.Types.Import.eltEXIF
  Flickr.Types.Import.eltEXIFList
  Flickr.Types.Import.eltEvent
  Flickr.Types.Import.eltFileSize
  Flickr.Types.Import.eltGeoLocation
  Flickr.Types.Import.eltGroup
  Flickr.Types.Import.eltGroupCat
  Flickr.Types.Import.eltGroupList
  Flickr.Types.Import.eltIntAttr
  Flickr.Types.Import.eltItem
  Flickr.Types.Import.eltItems
  Flickr.Types.Import.eltLicense
  Flickr.Types.Import.eltLicenseList
  Flickr.Types.Import.eltLocationPlace
  Flickr.Types.Import.eltMTPair
  Flickr.Types.Import.eltMTPred
  Flickr.Types.Import.eltMTag
  Flickr.Types.Import.eltMachinePairList
  Flickr.Types.Import.eltMachinePredList
  Flickr.Types.Import.eltMachineTagList
  Flickr.Types.Import.eltNamespace
  Flickr.Types.Import.eltNamespaceList
  Flickr.Types.Import.eltNote
  Flickr.Types.Import.eltNoteID
  Flickr.Types.Import.eltPermissions
  Flickr.Types.Import.eltPhoto
  Flickr.Types.Import.eltPhotoContext
  Flickr.Types.Import.eltPhotoCount
  Flickr.Types.Import.eltPhotoCountList
  Flickr.Types.Import.eltPhotoDate
  Flickr.Types.Import.eltPhotoDetails
  Flickr.Types.Import.eltPhotoID
  Flickr.Types.Import.eltPhotoList
  Flickr.Types.Import.eltPhotoPair
  Flickr.Types.Import.eltPhotoPool
  Flickr.Types.Import.eltPhotoset
  Flickr.Types.Import.eltPhotosetQuota
  Flickr.Types.Import.eltPlace
  Flickr.Types.Import.eltPlaceQuery
  Flickr.Types.Import.eltPlaceType
  Flickr.Types.Import.eltPlaceTypeList
  Flickr.Types.Import.eltPlaces
  Flickr.Types.Import.eltPlacesList
  Flickr.Types.Import.eltPrivacy
  Flickr.Types.Import.eltResContext
  Flickr.Types.Import.eltSize
  Flickr.Types.Import.eltSizeList
  Flickr.Types.Import.eltStringAttr
  Flickr.Types.Import.eltSubCategory
  Flickr.Types.Import.eltTagDetails
  Flickr.Types.Import.eltTagDetailsList
  Flickr.Types.Import.eltTagInfo
  Flickr.Types.Import.eltTagInfoList
  Flickr.Types.Import.eltTicket
  Flickr.Types.Import.eltTicketList
  Flickr.Types.Import.eltURLDetails
  Flickr.Types.Import.eltUser
  Flickr.Types.Import.toAuthFrob
  Flickr.Types.Import.toAuthToken
  Flickr.Types.Import.toBlogs
  Flickr.Types.Import.toBool
  Flickr.Types.Import.toCategory
  Flickr.Types.Import.toClusterList
  Flickr.Types.Import.toCommentID
  Flickr.Types.Import.toCommentList
  Flickr.Types.Import.toContactList
  Flickr.Types.Import.toContentType
  Flickr.Types.Import.toEXIFList
  Flickr.Types.Import.toGeoLocation
  Flickr.Types.Import.toGroup
  Flickr.Types.Import.toGroupList
  Flickr.Types.Import.toItems
  Flickr.Types.Import.toLicenseList
  Flickr.Types.Import.toLocationPlace
  Flickr.Types.Import.toMachineTagList
  Flickr.Types.Import.toNamespaceList
  Flickr.Types.Import.toNoteID
  Flickr.Types.Import.toPairList
  Flickr.Types.Import.toPermissions
  Flickr.Types.Import.toPhotoCountList
  Flickr.Types.Import.toPhotoDetails
  Flickr.Types.Import.toPhotoID
  Flickr.Types.Import.toPhotoList
  Flickr.Types.Import.toPhotoPair
  Flickr.Types.Import.toPhotoPool
  Flickr.Types.Import.toPhotoset
  Flickr.Types.Import.toPlaceTypes
  Flickr.Types.Import.toPlaces
  Flickr.Types.Import.toPlacesList
  Flickr.Types.Import.toPredList
  Flickr.Types.Import.toPrivacy
  Flickr.Types.Import.toSafetyLevel
  Flickr.Types.Import.toSizeList
  Flickr.Types.Import.toString
  Flickr.Types.Import.toTagDetailsList
  Flickr.Types.Import.toTagInfoList
  Flickr.Types.Import.toTicketList
  Flickr.Types.Import.toUser
module dependencies: Codec.Percent Codec.URLEncoder Flickr.Monad
                     Flickr.Types Flickr.Utils Util.Fetch Util.Keys Util.MD5 Util.MIME
                     Util.Post
package dependencies: HTTP-4000.2.20 array-0.5.0.0 base
                      bytestring-0.10.4.0 deepseq-1.3.0.2 filepath-1.3.0.2 ghc-prim
                      integer-gmp mime-0.3.4 mtl-2.1.3.1 network-2.6.2.1
                      network-uri-2.6.0.3 old-locale-1.0.0.6 old-time-1.1.0.2
                      parsec-3.1.9 random-1.1 text-1.2.0.6 time-1.4.2
                      transformers-0.3.0.0 utf8-string-1 xml-1.3.14
orphans: base:GHC.Base base:GHC.Float base:GHC.Real
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
family instance modules: base:Control.Applicative base:Data.Either
                         base:Data.Monoid base:Data.Type.Equality base:GHC.Exts
                         base:GHC.Generics network-uri-2.6.0.3:Network.URI
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
import  -/  base:Control.Monad 483e787e07c2e49f1fb1c1b88665cb92
import  -/  base:Data.Char 1ace810ea04187cd227c9ed982bb7d15
import  -/  base:Data.List 8b77870d02d66076337587b759b7ee19
import  -/  base:Data.Maybe 5034d40e23c3a7110309f188001df4ca
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:GHC.Num 5e7786970581cacc802bf850d458a30b
import  -/  base:GHC.Real 35345ccdfd774068d1f4418df87bd3c9
import  -/  base:GHC.Unicode 328b8e1d86fa0b0f8b798c018561e9b0
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  base:Text.Read 6fe10a0a6d0a38c215de3b09e72ca556
import  -/  Flickr.Monad 674fd2fea86aa2605cc91229a555ec49
  exports: d889671f2b278e4b47117b8a29fd3d51
  ErrM fbd054e20863a8c2359e31df87f4e08e
  parseDoc ebc82270611937ab5ebfce244f09c14d
import  -/  Flickr.Types 7f9bcf8be6aa7e347e0e2da5c74c6e45
  exports: 7c44d1c58d100ffa2b43ca34db9b517a
  AGroup 050fdabb7bb81d636d37131319f1f8d5
  Activity 6449a888e3bccc83ef1fd44c1e6e1ab6
  Activity 5717823e1dec5f3b208eb808a6e7f13a
  AuthFrob fce1cdc6d2c655736113434581db6fc3
  AuthFrob 78f1849e1e4cd62d7d433afb898d55d5
  AuthToken 5743e33517beea2dd269c274305f55fa
  AuthToken a2e2a7b700cf766eb756920590f94ec0
  Bandwidth bce2d6af6ef763e649d95b192b4eedb0
  Bandwidth 52f02f20b5238b5d22bf6119fd16c065
  Blog 2af265ce2a41822cfd5c04a3c67341ee
  Blog d28c5a0b437dee5798740ae6da10534f
  Category 0a05004cc767b2c7a35990814928cfdd
  Category 16bc1d94d00982af0df627f78e760db2
  Cluster e8b11b8d5761c87e47f1a2f5396788b4
  Cluster 6909cb1a0baddad0a0508e4e75c9638d
  Comment 5ed9025917c23b75a0520fb54caf42e3
  Comment 494983341f44d73e6ff4b0810cd80eb0
  CommentID e664f0f9f82650f48337e7eae3f3838b
  Contact 2ab037818e1dfec8a5b1e1252df9fd08
  Contact 79e50a5980414b947f9c4aaa63961cf2
  ContentOther 2f7ba34af71b7fe53623c5c0b81eaef4
  ContentPhoto 72eafc23cb44c9ebc2a4d57e112dbd5e
  ContentScreenshot 3a3ab6fd861b7323bd38edbbc97793cc
  ContentType c95f74205cfdcf8a8a1f92c75fbaaa57
  EXIF dbfbac29e1df2711ddbf888152a1ebfe
  EXIF a580ac20bd7586db9196cb2dd15f8216
  EXIFTag 998bc8086fc2d41b1048b95a152cbd13
  FileSize 346769bff601b172535f3a5f7380c642
  FileSize e65c6b7b881286adc105dfb734774a3d
  GeoLocation 4700cf4cc29149d83f21d2d0920c036f
  Group 48fa92d57c8ca6b1d3c726ae3493dcf2
  Group af878999f035a0a349d907549a644796
  GroupCat 3b648eef8ab4d5fe617c723cc1eb5f8e
  Item 421643bc4ae998064d832748c59178bb
  Item 7a51b1069005a863a9af09d417e3d2bd
  License 7bcf2720b67b0d1959396b4860ffc0da
  License 8fe61a0bf33cb78246e7c9bcb70e444d
  LocationPlace e4bc3b4360f928d87dc594fe073cb530
  LocationPlace 8560d01a391eb1b4d2101fe4f700fd77
  MachineTag 7444e90d34b8502447bdec204d726417
  MachineTag cda52e3744bc7815cec29ad295f847f3
  MachineTagPair f70c88c972f4755a2623dbc4c8a68fc6
  MachineTagPair 3112886918507c757c431a3d0b4f4eaa
  MachineTagPred cc16837ff8d088c26f90bb9ead390436
  MachineTagPred 8df02b831e247f6d244e665c89e0c01d
  NameContext 1fa1d4cd071d20c96481e0c0b4b7290b
  Namespace a271991e611fb30f1d11ba27512e4895
  Namespace 0a5955fd7772102063ddce34db87fa8e
  Note f580d1f7b98334a4555b62d5698bcb9d
  Note f5acb7f3eae2db69ae3e7930d5fd7ff7
  NoteID 1d079b1d8fe7d722063eba7f2cd4f14e
  Permissions b55132743ec59b7943e86e471ace1586
  Permissions a4059c629f69c00c0f9f59f337a7865a
  Photo e9ffc9b985529f4bdba6a9127996386d
  Photo 2deca11afc0a961b40b35bcb8cfdb204
  PhotoContext 1012f98f7ccf09eff166d1496fb4c4fc
  PhotoContext b13240513008c5723d6a1a8824274a9d
  PhotoCount 3a0b41dfc13cac4fa6571edea85e3594
  PhotoCount b670f83ec9ce63fe824032084554eebd
  PhotoDate c21d7cb6c9b097d868ac0b8ff8f3d28b
  PhotoDate 1bba3b96bd10d3a0ee49efa0ee2d348c
  PhotoDetails 71a54ebef3d7272d2a2e2c5949d5c0db
  PhotoDetails 341128c749a7d878c444c56c8e108dc3
  PhotoID afad6d42cded8baa9088f416d88f77bf
  PhotoPool b1d3e737874360efd01dd0e98a2b60ac
  PhotoPool 9d3b50b2ab2da6ab4a0fcda2964d57e7
  Photoset bc6d53a351a48e6048fd8c843ece754d
  Photoset ded0f4fbb84c8010c83e3ae825aa5eda
  PhotosetQuota d7ce42c20b6fffb83b0eba135062fd7d
  PhotosetQuota f64dd8c26447a298587ff65042da11c3
  Place bbf7a4bb7463b3cf8d5f4ab1b962d4ab
  Place 487fd5d3fe26f7defabfd4eaed9f914d
  PlaceQuery 4d4440840102a69c0ce47c220c819b05
  PlaceQuery 8d2db3468022fccd907797cf82b30411
  PlaceType 1347800f71c4e177b105708c71472892
  PlaceType cb991de727e2e32de7f263bd335e4e9a
  Point 028190780d926584f89bf3cfbcc2481c
  Privacy fd81207a7f196a1180a47b91a275a3b7
  Private f8b8f9a86b797fcbaf5b40c7a7a47982
  Public 534f6e5f78f60843de197a6bf8fef47a
  ResContext b6bdacc50f3546f492b5c4e23b2e99d6
  ResContext 28de0b11cd439f5cd05840267825cde8
  Size 3582b19afe4e47dba6c7f45b81aca382
  SizeDetails 2bdbe53310f27dbd8756c4866f346689
  SizeDetails 033cc30024d8161e2c60d3ce93617d70
  SubCat 9e006b265fa2789b9309c6c290017d0e
  SubCategory 21a7eeb6aaa30062bdd66ad02d5affb9
  SubCategory f0e8ddd79cc57c3bf8904ea9f60e3e7c
  TagDetails 26902dc79d87081d45e3caeee48717e4
  TagDetails de3681f66d620aa5246baa9d81bdee18
  TagInfo bcd029d169fe4faa6328fd5ead465dd2
  TagInfo ef574df3355038850de619c1b9a8f352
  Ticket 48d3bac6523179ddc7f2bed877a29c07
  Ticket b07ccf0889396d437def517fab179617
  URLDetails 85428ef4f2a0b84177cb1d8c502baed6
  URLDetails 8e73e005b91cbf013af7830615987d63
  User 5f85fd7c8b4696b56ab0c1231a6049c3
  aFrob a21827715d62bb9e13fbb90ac15e0363
  actContent 503e3e66d8030a33a52c26cb28e2fd72
  actDate 3d55a719da29ee232d63ebe8991a58f4
  actType 4af6760a272669a62ddeb792c4c89a6b
  actUser 70f3e55efa37eb543d7480fa19fabc88
  authPerms d6249e0b9292dbb730eb218f51c08b28
  authToken 60aebdb100488540728dab8984cb5242
  authUser 75650d3c5a1d9f8f8cdf14b0441cbbba
  bandWidthBytes e7c96c4939d7a3a57c5af23a27f1b09a
  bandWidthKB 1d12aafc57128172ba10e2fb2ec5b447
  bandWidthRemainingBytes b5e8ed33b2bca10a9373c3f05889cecd
  bandWidthRemainingKB 5ad5a8c20f679b329ae2ff0b66f90e69
  bandWidthUsedBytes 0443a7fd5239688be60833c0f5b9a4b0
  bandWidthUsedKB d1941dd2b3ee2df1764f081a2b6b9c1d
  blogId 0486445f80550679a98a3e0c5694c681
  blogName eee5c5647f456e0b028f95c71ff6d14b
  blogNeedsPW 455512bd68df21c745cae25caf9b3d50
  blogURL c76a7648546da922c4d3e26d28ad6d2a
  catId ef8c604719e5d2616b459ce619d04f1a
  catName 9bed3efcdca1113ce12a5661939366f6
  catPath 5822e8dca30526a07f61700b5f57e190
  catPaths 9c1093c4d00cd7865f257480c4412bbb
  catSubs 594209ff7e746c2131d2d62b66ba1162
  clusterCount a96a2ad1c7a0b78c2cb09ffd73ed2f6f
  clusterTags 2ca263002e9fdb350a754604518f22ef
  commentAuthor 8baeb29ca9a7d01ee5e33e0ca5bd689d
  commentDate 5315beb27d47c409313c282d112b2ee4
  commentId cddc46ece4cff17bbae74d9a32253200
  commentText d78dd765dc677b8868bfd207723e5174
  commentURL 998576e8254b78116c7511faff03bdeb
  conIcon 0def890d1a3d71a27bfcc362298bc08d
  conId a817fd6282c8a92207b8d4519629bc85
  conIgnored ec15dbea6672dc933f8ce06ca4f9a2dd
  conIsFamily d301fa31a04894ec3c734521c0f7335b
  conIsFriend 19ea967cd11f2a31383fd7051fe2c6db
  conUser 72e04ae83a62c98daf13185c78a2e19a
  exifClean a293dd5c775bf54ba42fe142f524ab19
  exifLabel ecc316793946240f979f3b38ae3e0489
  exifRaw 47d42b1534c77d5e1be9d4b4bbc5038e
  exifTag e9294c9e7528c8134f7afce7a69b08dc
  exifTagId 878b387279a3c7cf4bf52fff8ee0c83e
  exifTagspace 5398e008e856bb39a55941bff17db4a0
  exifTagspaceId 342154da186463397171866572834d3a
  fileSizeBytes fe823b7184195efe4644f859427cf109
  fileSizeKB 498fa9c4b4bc584955173e0078c534b4
  groupChatId 2985f9aa80387fca6ba398568eb9c83c
  groupId 706c712e5f2d96d1c6335a588466398b
  groupInChat 173615fa54211fdee1efd9e6e4f4b858
  groupIsOnline 791bf1a9fbd83f8d098ddd7190db6333
  groupMembers b65e4378603b3679d48ae5279aed79bc
  groupName 3ed3cbc74ceb1059ab764709a8643c2d
  itActivity 62be34090cd7b6d893c3cfb740f85dc9
  itComments f0f088aa3561eb080473c0991d5eb6e1
  itId a5274641adb2fdc20e6d4fd057c1ad72
  itMore 0d6c4b98a57582830cea6e309fcdbe66
  itOwner 2de862bb4cfd9eb1f3fd0c04f268fb35
  itPhotos aa4834b7c5efe9b0ca2852cfdee0c4f4
  itPrimary 487ff0085887e5ee0d6f987f0c4f65f4
  itSecret 823bfc845c49fc1e2f9e23b3d8f44d0c
  itServer 12bc1a331f7024d3045178452b041e35
  itTitle 2ae97cb5a9ce251cf6fc4040268631a9
  itType a3bb6c344e4bf248ec74a37632bbd313
  itViews cf96439d209383162f24e792ff033973
  licenseId 389c3be1c011ee9b92a20eb3950e4fa9
  licenseLink 65c37ff9e7facc917df02f06b7714ab0
  licenseName 54dd62b16b640b3575c8d3573eea23fe
  locationPlaceDesc dae1fe51e014aa3b98d516ff20b28c09
  locationPlaceDetails ff408468fb2a70ccb8ecaef11b276bf3
  locationPlaceId 396ae739d98575d5821effa903caab5f
  locationPlaceLat 2311fa11981618cee97134fc82ba362a
  locationPlaceLong f8e7a83a41ee35f8f90aa5251d126b23
  locationPlaceType 8bd0e205d4f6f58011dc76426b3bd2f0
  locationPlaceURL 17c7889f7944f0e6d120f00cff4ed00c
  locationPlaceWOEId b5be9b3899b9b9b21d6d297026b79e63
  mTagNamespace 2c29bf8f0bdd8f4d8e5eb62aa513271e
  mTagPredicate efd61913debe85ed31ca88f005f13f62
  mTagUsage f5307ee35933f07be0e284bdbb23386f
  mTagValue 504231ccd1fee0ffdaacdc57f00d6707
  mtPairName b7c8035753a759d147c0b26244531e76
  mtPairNamespace f7921b7841f245a1f27658868cc7d7ac
  mtPairPredicate c37bb830698f90adf0b628ee2f0a4c9a
  mtPairUsage f9fe8cc405004f7dbb6075705d9fa4ae
  mtPredName 9241d10acc97d43cd7aeb0e4d39a5401
  mtPredNamespaces 5da43eecc9c1130ce19c7641bc1bcb87
  mtPredUsage 34e671398917c6046c4e69fb300b654b
  namespaceName 68a9e473a304d5c1cb80931691dc9772
  namespacePreds 2c93a8f9d680dc753ac2fe6db9a25477
  namespaceUsage e88ebd821a030a4bf8419b443d62a566
  noteAuthor e8465fd02348230f8bfeccc7e941f122
  noteAuthorName 3bcd70b059b341a90e2c31ac1649306e
  noteId fa2e726745cf071669f5170ca042fc4a
  notePoint 9890d28a70c4f5d1030363a522807e68
  noteSize ca9a57ca400b6fa80823806c0d6789e9
  noteText 7cb72aff379d218620d2d1ad007190c1
  nullUser 27e5508db85ccb8135286181f9b8cf9e
  permAddMetaLevel 6a3cd08bba38117ce9526503de0ac13e
  permCommentLevel 4169c918c87b707df7af79db86d202ea
  permId 4e108211540e4474160bfa961be26b17
  permIsFamily 52849efba9643dd0a6f0cc073d917aba
  permIsFriend c7efff80d8215a30c5f90b403c3f9983
  permIsPublic bd7646914c2052191473085312967bfd
  photoCount 8d73e8676519aafa41da87d62a94f02b
  photoCountFrom e71699d2014e56cc09cb9fa69ef9d4c6
  photoCountTo 7fad73c2df012f8e9a10042fd0b0b51f
  photoCtxtPage 67bcb2fec4f36c8c980b4d46395f4983
  photoCtxtPages d10f34e28987c5a4098c1dc1dec316c7
  photoCtxtPerPage 738c6401616d9fa8c597c9314b05c2a4
  photoCtxtTotal cf87fffa1b45dc8d8edc31395443bb62
  photoDateGranularity 78a7fc8d3c03c660841e7e020b8c97b7
  photoDateLastUpdate 94a390fdd73738c4dcd244b25565d13e
  photoDatePosted 0773c8c76ccd521a867e2874c771cb6c
  photoDateTaken 129a1d532947477b40df2ef473609175
  photoDetailsComments 31759f873d3340cf07c5ba1a6e771513
  photoDetailsDates 7436caebf40158f67fcc8a4c64f39295
  photoDetailsDesc c80b3e8d3dc59577d7243c1ce734aa58
  photoDetailsEdits 19f645c41eec9fb2c81a647841e78be3
  photoDetailsIsFamily ae3c783a2adbf02fee802e58a43de041
  photoDetailsIsFavorite 9c214fbd5abf3bb012cb174958c47165
  photoDetailsIsFriend 9a81228c6b0b6cb9daac58a81b36fb39
  photoDetailsIsPublic 275b9156615460781f2535aba5141746
  photoDetailsLicense cc9814dfbb7a4f0a91e56fc463e55b05
  photoDetailsNotes f72f70bd4f1e7ab351a6ef7aabdf79c0
  photoDetailsOrigFormat 0d46173fdf6bcf774251b6546f8a79cc
  photoDetailsOrigSecret 51b397c2e03c78c64b5d5a3d465d80e2
  photoDetailsPerms 2ccbb40f21473f9e85389eb4c495c66a
  photoDetailsPhoto fe4e1ada259a8aa3a070261791dd0339
  photoDetailsRotation 55fc342d77865def3f04ef0ccd147100
  photoDetailsTags d68d649758d3fa85ba6bdb7f75571304
  photoDetailsTitle 3c15d7d2cec38d58327b860f4bbfea98
  photoDetailsURLs e6803c1dbe789f2d66bad76fc61dc5e8
  photoFamily 86ece6e7f191a0b74993982c46fdbd33
  photoFarm d2a8cdc9ddbb3b3c50c9286266083f5f
  photoFriend 04f1304c15494429bb4ddcda35ccde6e
  photoId db6a3c62f2e356e67d78283f88f1d940
  photoLicense 6309b1bad7ee028523047c0614a375ce
  photoOwner f1a43c7ffce515a8aed5a67a595f9700
  photoPoolId 5a9dcbdfd8b3599112375f93a64492a2
  photoPoolTitle 4fccb0cfa6ad1f469b5cbe7df80e5f22
  photoPublic 6e61227de4997ac788acd3713ca109c5
  photoSecret 9d80ff4b9acc198adfb178c1c3012391
  photoServer eb574fcee4716504a0c76ad597e7b9d6
  photoTitle 9e7da6a2dfef7165e02b2d6c4771a01a
  photoURL ed75bc9caf9f7fcf5fee0ca2b842fe74
  photosetCreated 31a8aa506cc37688b30da9d54f138413
  photosetDescription fdfff07390db4164793d83a61e79dcba
  photosetId 76ec8e20316dd32df28cdb96e11830ed
  photosetOwner 512a6fba348a643aefe33cee38b25a77
  photosetPhotos 6b5b7a248d8567acc2023c955c154a72
  photosetPrimaryPhoto fbc0e21a95f0991aeae2a5eef1fa0ec8
  photosetRemaining c571b46c0164ac6b6f24f8a82e8be7ef
  photosetTitle 28a1faff3104bdf0f01ceadcffd93a55
  placeDesc 75969c0292262f25b6965ba2099bcd69
  placeId c2cb8e9019fe7193687a4e85202fb120
  placeLat b5a9d49f31e1d0715e6165d48abe7bed
  placeLong 6eaf954e92da48e289c2eee3d2fee332
  placeQuery 9e21c28b5f75ade7aeefc6f5ff79aa1a
  placeQueryAccuracy bbb6ebf0601408c931ade375afecce92
  placeQueryLatitude d8198e8698e9962aecc621d57cf0d8c2
  placeQueryLongitude 8a9d6f639c2e7c2203b15e198965bdf4
  placeTotal 0c15340e02b8fab9f57ef036cdb4352c
  placeType 539e01e105dc6ace449e92d599d74808
  placeTypeId 6dfde94c14c4b5c1397b8fba12cf0391
  placeTypeName 2d44e0166c749672f3d9b023f9412661
  placeURL d20ff30cf0915665f914fc7169501d5a
  placeWOEId 4ce04c27f0d0f8f489af580c46d36772
  resCtxtPage b7d4d9bdbe6c81bb999ff629e2e9b27e
  resCtxtPages ee77b54e6cb1ad756689dc3aad6802ed
  resCtxtPerPage d6596714999dbe559028816f3e369755
  resCtxtTotal f9f240b8d45f2161e1b579c7e80a5bd9
  sizeDetailsHeight cdead52efbefc65ced0237da9aad9cac
  sizeDetailsLabel 4083d6fab23628f09f53b8bccb1da4e0
  sizeDetailsSource c1235918648700fa4340dcd5f9b1c4bd
  sizeDetailsURL 4b8a208447b61e30492daf320fab8a80
  sizeDetailsWidth 7797afc99294f8bc832b2535975dcf55
  subCatId 111b9fdcda12e15d4a5ae9221be67663
  subCount b272cade76bc1fa0c21a730125f23210
  subName 51d5c84998fe57810edeb6abd5cb297e
  tagCount c1b7d5f6d2a3b25d99a71f668c511a40
  tagDetailsAuthor 7f2030a0cf550dc0cf30221715a3ad37
  tagDetailsCount 74c2f142035d7769b1b01b1422c47db5
  tagDetailsId efb08fd2af7f6c5fbeb8ad758727887e
  tagDetailsName 251dd53caf9112802dedd849687846e4
  tagDetailsRaw 02c08acf50965c040cef86b3e4c8c5a2
  tagDetailsScore 4f86a3560305dd17d8c761c8288202e7
  tagName 2de5067abb4f9c3aaa5f23bf69677136
  ticketComplete adfd90d5645f3fc8086e04d86e165e32
  ticketId fbcc72375ce6fb32b9566406a18f9ab4
  ticketInvalid 510b8bd09d23acd7ee8d6c4a4d020252
  ticketPhoto b1cec79395df71620bab5f5c328fccaf
  urlDetailsType c715515982af2b427235493939f9cc8b
  urlDetailsURL 997761881484a16487f2e567f32d6497
  userFullName 0362b098ec286e1b746efae211585806
  userId f17112ed6033ad18aef978985a6bea57
  userIsAdmin 3a15be801d183e7856dcbd4c1743dfa0
  userIsPro 38470aade491f39008fa504986c7fecd
  userName b0e473b5c7921d4759744894ff1c46e4
import  -/  Flickr.Utils 68facf93de1ef1e4c93b470398fe5414
  exports: 7ebed314ffe0fcb0fea5a3de318e595b
  children 32b0abd5039eb2c78e3f88f6d5997003
  ifNamed e6c698d338917636d6feeda41915e355
  intContent 8738c452cf8634c7a3a55ca867a26f23
  nsName 13a53574b6a1b9c1497f6aa27508e98b
  pAttr 6e01f0483c8f6392578f85f66019745f
  pLeaf 744e42533c3ef5b746636224cfb02753
  pNode 6ca435ffbbbd2c996cefd9c978ff7753
  pNodes 075d34eaa8a5578e199f794c4caf5afe
  readMb 85c1fe5d75803189de365d2274791547
import  -/  ghc-prim:GHC.Classes 3e6cbe1e7e80480408cfa8d5450726a0
import  -/  xml-1.3.14:Text.XML.Light.Proc 277b74c044fa89f0db17455b56117130
import  -/  xml-1.3.14:Text.XML.Light.Types 4483de4cddeaa14654667ed2520d029e
503813690f3b8896734624036b50730b
  $weltActivity :: [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe [Flickr.Types.Activity]
    {- Arity: 1, Strictness: <S,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Content] ->
                   Flickr.Types.Import.eltActivity_go
                     (Flickr.Utils.pNodes
                        Flickr.Types.Import.eltActivity1
                        (Text.XML.Light.Proc.onlyElems_go ww))) -}
b6131b1f198d8dd77f1c1bafffd4c674
  $weltAuthFrob :: GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe Flickr.Types.AuthFrob
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltAuthFrob1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.AuthFrob
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.AuthFrob
                                    (Flickr.Types.AuthFrob (Text.XML.Light.Proc.$wstrContent ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.AuthFrob }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.AuthFrob } }) -}
230ad7aa6ce4f4fb049fb33b22e3a1f1
  $weltAuthToken :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe Flickr.Types.AuthToken
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltAuthToken20 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> let {
                                    es :: [Text.XML.Light.Types.Element]
                                    = Text.XML.Light.Proc.onlyElems_go ww3
                                  } in
                                  case Flickr.Utils.pNodes
                                         Flickr.Types.Import.eltAuthToken19
                                         es of wild2 {
                                    [] -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                    : a1 ds1
                                    -> case Flickr.Utils.pNodes
                                              Flickr.Types.Import.eltAuthToken18
                                              es of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                         : a2 ds2
                                         -> case Flickr.Utils.pNodes
                                                   Flickr.Types.Import.eltAuthToken17
                                                   es of wild5 {
                                              [] -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                              : a3 ds3
                                              -> case a3 of ww4 { Text.XML.Light.Types.Element ww5 ww6 ww7 ww8 ->
                                                 case Flickr.Types.Import.$weltUser
                                                        ww6
                                                        ww7 of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                                   Data.Maybe.Just x
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.AuthToken
                                                        (Flickr.Types.AuthToken
                                                           (Text.XML.Light.Proc.strContent a1)
                                                           (Data.List.words
                                                              (Text.XML.Light.Proc.strContent a2))
                                                           x) } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.AuthToken }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.AuthToken } }) -}
1de31bb06e688134b90aa9d86157ea62
  $weltBandwidth :: [Text.XML.Light.Types.Attr]
                    -> Data.Maybe.Maybe Flickr.Types.Bandwidth
    {- Arity: 1, Strictness: <S,U> -}
5411c15500486e12f67a7d2f44332e83
  $weltBlog :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> Data.Maybe.Maybe Flickr.Types.Blog
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltBlog7 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Blog
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltBlog5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltBlog3
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                              Data.Maybe.Just x2
                                              -> case Flickr.Types.Import.eltAuthToken9
                                                        x2 of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                                   Data.Maybe.Just x3
                                                   -> case GHC.List.lookup
                                                             @ Text.XML.Light.Types.QName
                                                             @ GHC.Base.String
                                                             Text.XML.Light.Types.$fEqQName
                                                             Flickr.Types.Import.eltBlog1
                                                             (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                        Data.Maybe.Nothing
                                                        -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                                        Data.Maybe.Just x4
                                                        -> Data.Maybe.Just
                                                             @ Flickr.Types.Blog
                                                             (Flickr.Types.Blog
                                                                x
                                                                x1
                                                                x3
                                                                x4) } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Blog }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Blog } }) -}
ba1d0727a4d6a603a16b91f7366d5bc6
  $weltBlogsList :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe [Flickr.Types.Blog]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltBlogsList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Blog]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltBlogsList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltBlog7
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Blog] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Blog] } }) -}
f363493e32ec9336bbdc58ca83f1f7e5
  $weltBool :: GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> Data.Maybe.Maybe GHC.Types.Bool
    {- Arity: 2, Strictness: <L,U><S,1*U>,
       Unfolding: (\ w :: GHC.Base.String
                     ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          (Text.XML.Light.Types.QName
                             w
                             (Data.Maybe.Nothing @ GHC.Base.String)
                             (Data.Maybe.Nothing @ GHC.Base.String))
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                     Data.Maybe.Just x -> Flickr.Types.Import.eltAuthToken9 x }) -}
83da4e74f76e0c02f47247d6c8e9680c
  $weltCategory :: [Text.XML.Light.Types.Attr]
                   -> [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe Flickr.Types.Category
    {- Arity: 2, Strictness: <S,U><L,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltBlog5
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Category
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltCategory3
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Category
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltCategory1
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Category
                               Data.Maybe.Just x2
                               -> Data.Maybe.Just
                                    @ Flickr.Types.Category
                                    (Flickr.Types.Category
                                       x
                                       (Flickr.Utils.$wpAttr Flickr.Types.Import.eltAuthToken2 ww)
                                       x1
                                       x2
                                       (Data.Maybe.mapMaybe
                                          @ Text.XML.Light.Types.Element
                                          @ Flickr.Types.GroupCat
                                          Flickr.Types.Import.eltGroupCat
                                          (Text.XML.Light.Proc.onlyElems_go ww1))) } } }) -}
497903a9aa693ef49df96b5d50fc142d
  $weltCluster :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe Flickr.Types.Cluster
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltCluster4 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Cluster
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltCluster2
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Cluster
                                    Data.Maybe.Just x
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.Cluster
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            Data.Maybe.Just
                                              @ Flickr.Types.Cluster
                                              (Flickr.Types.Cluster
                                                 (GHC.Base.map
                                                    @ Text.XML.Light.Types.Element
                                                    @ [GHC.Types.Char]
                                                    Text.XML.Light.Proc.strContent
                                                    (Flickr.Utils.pNodes
                                                       Flickr.Types.Import.eltCluster1
                                                       (Text.XML.Light.Proc.onlyElems_go ww4)))
                                                 v) } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Cluster }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Cluster } }) -}
96b7ba70b8b2f04dd40300241f4b67ec
  $weltComment :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe Flickr.Types.Comment
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltComment5 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Comment
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Comment
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltUser ww3 ww4 of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Comment
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltComment3
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Comment
                                              Data.Maybe.Just x2
                                              -> Data.Maybe.Just
                                                   @ Flickr.Types.Comment
                                                   (Flickr.Types.Comment
                                                      x
                                                      x1
                                                      x2
                                                      (case GHC.List.lookup
                                                              @ Text.XML.Light.Types.QName
                                                              @ GHC.Base.String
                                                              Text.XML.Light.Types.$fEqQName
                                                              Flickr.Types.Import.eltComment1
                                                              (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                         Data.Maybe.Nothing
                                                         -> Flickr.Utils.$wpAttr
                                                              Flickr.Types.Import.eltBlog2
                                                              ww3
                                                         Data.Maybe.Just ipv -> wild6 })
                                                      (Text.XML.Light.Proc.$wstrContent ww4)) } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Comment }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Comment } }) -}
88bc5793956ac6fca383aca4c8761b5a
  $weltContact :: [Text.XML.Light.Types.Attr]
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe Flickr.Types.Contact
    {- Arity: 2, Strictness: <S,U><L,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Contact
                     Data.Maybe.Just x
                     -> case Flickr.Types.Import.$weltUser ww ww1 of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Contact
                          Data.Maybe.Just x1
                          -> Data.Maybe.Just
                               @ Flickr.Types.Contact
                               (Flickr.Types.Contact
                                  x
                                  x1
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact7
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2 -> Flickr.Types.Import.eltAuthToken9 x2 })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact5
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2 -> Flickr.Types.Import.eltAuthToken9 x2 })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact3
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2 -> Flickr.Types.Import.eltAuthToken9 x2 })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact1
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2
                                     -> Flickr.Types.Import.eltAuthToken9 x2 })) } }) -}
68a1b0e1550b2581be058e882513c030
  $weltContactList :: GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> [Text.XML.Light.Types.Content]
                      -> Data.Maybe.Maybe [Flickr.Types.Contact]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltContactList2 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Contact]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltContactList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltContactList1
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Contact] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Contact] } }) -}
141c6e9352fbd4344d32c237a3efe015
  $weltContentType :: [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe Flickr.Types.ContentType
    {- Arity: 1, Strictness: <S,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltContentType4
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.ContentType
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Flickr.Types.Import.eltContentType3
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             case v of wild3 { GHC.Types.I# ds3 ->
                             case ds3 of ds4 {
                               DEFAULT -> Flickr.Types.Import.eltContentType3
                               1 -> Flickr.Types.Import.eltContentType2
                               2 -> Flickr.Types.Import.eltContentType1 } } } } }) -}
c0cd5f3f4cc95faa55fc613b152ff687
  $weltEXIF :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.EXIF
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltEXIF12 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltEXIF10
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltEXIF8
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltEXIF7
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                              Data.Maybe.Just x2
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltEXIF5
                                                        (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                                   Data.Maybe.Just x3
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.EXIF
                                                        (Flickr.Types.EXIF
                                                           (Flickr.Types.EXIFTag x2 x x1)
                                                           x3
                                                           (case Text.XML.Light.Proc.$wfindChildren
                                                                   Flickr.Types.Import.eltEXIF3
                                                                   ww4 of wild7 {
                                                              []
                                                              -> Data.Maybe.Nothing
                                                                   @ GHC.Base.String
                                                              : a1 ds1
                                                              -> Data.Maybe.Just
                                                                   @ GHC.Base.String
                                                                   (Text.XML.Light.Proc.strContent
                                                                      a1) })
                                                           (case Text.XML.Light.Proc.$wfindChildren
                                                                   Flickr.Types.Import.eltEXIF1
                                                                   ww4 of wild7 {
                                                              []
                                                              -> Data.Maybe.Nothing
                                                                   @ GHC.Base.String
                                                              : a1 ds1
                                                              -> Data.Maybe.Just
                                                                   @ GHC.Base.String
                                                                   (Text.XML.Light.Proc.strContent
                                                                      a1) })) } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.EXIF }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.EXIF } }) -}
f25250525814e4696b0628caf79563e6
  $weltEvent :: [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Activity
    {- Arity: 2, Strictness: <S,U><L,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltEvent4
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltEvent3
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltAuthToken5
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                               Data.Maybe.Just x2
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltEvent1
                                         (Flickr.Utils.pAttr_go ww) of wild3 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                                    Data.Maybe.Just x3
                                    -> Data.Maybe.Just
                                         @ Flickr.Types.Activity
                                         (Flickr.Types.Activity
                                            x
                                            (Flickr.Types.User
                                               x2
                                               x1
                                               (Data.Maybe.Nothing @ GHC.Base.String)
                                               (Data.Maybe.Nothing @ GHC.Types.Bool)
                                               (Data.Maybe.Nothing @ GHC.Types.Bool)
                                               (Data.Maybe.Nothing @ GHC.Base.String)
                                               (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                               (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                               (Data.Maybe.Nothing @ Flickr.Types.UserPhotoStat)
                                               (GHC.Types.[] @ Text.XML.Light.Types.Attr))
                                            x3
                                            (Text.XML.Light.Proc.$wstrContent ww1)) } } } }) -}
cc1438e417ed41c9c8cb009435048f8d
  $weltFileSize :: [Text.XML.Light.Types.Attr]
                   -> Data.Maybe.Maybe Flickr.Types.FileSize
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltFileSize3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.FileSize
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ Flickr.Types.FileSize
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             Data.Maybe.Just
                               @ Flickr.Types.FileSize
                               (Flickr.Types.FileSize
                                  (case v of wild3 { GHC.Types.I# i ->
                                   GHC.Integer.Type.smallInteger i })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltFileSize1
                                          (Flickr.Utils.pAttr_go ww) of wild3 {
                                     Data.Maybe.Nothing
                                     -> Data.Maybe.Nothing @ GHC.Integer.Type.Integer
                                     Data.Maybe.Just x1
                                     -> case Text.ParserCombinators.ReadP.run
                                               @ GHC.Types.Int
                                               Flickr.Types.Import.eltAuthToken10
                                               x1 of wild4 {
                                          [] -> Data.Maybe.Nothing @ GHC.Integer.Type.Integer
                                          : ds3 ds4
                                          -> case ds3 of wild5 { (,) v1 ds5 ->
                                             Data.Maybe.Just
                                               @ GHC.Integer.Type.Integer
                                               (case v1 of wild6 { GHC.Types.I# i ->
                                                GHC.Integer.Type.smallInteger i }) } } })) } } }) -}
b8a9aa92c1b7a86a3c528f9fc56499a4
  $weltGeoLocation :: GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe
                             (GHC.Base.String, GHC.Base.String, Data.Maybe.Maybe GHC.Types.Int)
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltGeoLocation6 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (GHC.Base.String,
                             GHC.Base.String,
                             Data.Maybe.Maybe GHC.Types.Int)
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltGeoLocation4
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (GHC.Base.String,
                                            GHC.Base.String,
                                            Data.Maybe.Maybe GHC.Types.Int)
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltGeoLocation2
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing
                                              @ (GHC.Base.String,
                                                 GHC.Base.String,
                                                 Data.Maybe.Maybe GHC.Types.Int)
                                         Data.Maybe.Just x1
                                         -> Data.Maybe.Just
                                              @ (GHC.Base.String,
                                                 GHC.Base.String,
                                                 Data.Maybe.Maybe GHC.Types.Int)
                                              (x,
                                               x1,
                                               Flickr.Types.Import.$weltIntAttr
                                                 Flickr.Types.Import.eltGeoLocation1
                                                 ww3) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (GHC.Base.String,
                                       GHC.Base.String,
                                       Data.Maybe.Maybe GHC.Types.Int) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (GHC.Base.String,
                                  GHC.Base.String,
                                  Data.Maybe.Maybe GHC.Types.Int) } }) -}
01e1d6c196277d5347c84712705e80e3
  $weltGroup :: GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Group
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U> -}
e9b145dfa11defd54c5bbc89f0ffe90a
  $weltGroupCat :: GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> [Text.XML.Light.Types.Attr]
                   -> [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe Flickr.Types.GroupCat
    {- Arity: 5, Strictness: <S,U><L,U><L,U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   let {
                     $j :: GHC.Prim.Void# -> Data.Maybe.Maybe Flickr.Types.GroupCat
                       {- Arity: 1, Strictness: <L,A> -}
                     = \ w :: GHC.Prim.Void# ->
                       case GHC.Classes.$fOrd[]_$s$ccompare
                              ww
                              Flickr.Types.Import.eltGroupCat4 of wild {
                         DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.GroupCat
                         GHC.Types.EQ
                         -> case ww1 of wild1 {
                              Data.Maybe.Nothing
                              -> case ww2 of wild3 {
                                   Data.Maybe.Nothing
                                   -> case Flickr.Types.Import.$weltGroup
                                             ww
                                             (Data.Maybe.Nothing @ GHC.Base.String)
                                             (Data.Maybe.Nothing @ GHC.Base.String)
                                             ww3
                                             ww4 of wild2 {
                                        Data.Maybe.Nothing
                                        -> Data.Maybe.Nothing @ Flickr.Types.GroupCat
                                        Data.Maybe.Just x
                                        -> Data.Maybe.Just
                                             @ Flickr.Types.GroupCat
                                             (Flickr.Types.AGroup x) }
                                   Data.Maybe.Just a2
                                   -> Data.Maybe.Nothing @ Flickr.Types.GroupCat }
                              Data.Maybe.Just ipv
                              -> Data.Maybe.Nothing @ Flickr.Types.GroupCat } }
                   } in
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltGroupCat3 of wild {
                     DEFAULT -> $j GHC.Prim.void#
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.$weltSubCategory ww3 of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.GroupCat
                                    Data.Maybe.Just x
                                    -> Data.Maybe.Just
                                         @ Flickr.Types.GroupCat
                                         (Flickr.Types.SubCat x) }
                               Data.Maybe.Just a2 -> $j GHC.Prim.void# }
                          Data.Maybe.Just ipv -> $j GHC.Prim.void# } }) -}
3f29438ccfe1bdbdb41a9095f5e29ce1
  $weltGroupList :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe [Flickr.Types.Group]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltGroupList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Group]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltGroupList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltGroupCat4
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Group] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Group] } }) -}
4e39a35678db1cd603ffc0cb0d3cc908
  $weltIntAttr :: GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> Data.Maybe.Maybe GHC.Types.Int
    {- Arity: 2, Strictness: <L,U><S,1*U>,
       Unfolding: (\ w :: GHC.Base.String
                     ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          (Text.XML.Light.Types.QName
                             w
                             (Data.Maybe.Nothing @ GHC.Base.String)
                             (Data.Maybe.Nothing @ GHC.Base.String))
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Int
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ GHC.Types.Int
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             Data.Maybe.Just @ GHC.Types.Int v } } }) -}
7b8eb9384152aab05b98bdf38e402bd0
  $weltItem :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.Item
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,U> -}
ac3c8383bf50d30df516c259e1a861d0
  $weltItems :: GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe [Flickr.Types.Item]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltItems2 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Item]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltItems_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltItems1
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Item] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Item] } }) -}
8fef2bbb413e3b5ed0bdbd2c36cb9f74
  $weltLicense :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> Data.Maybe.Maybe Flickr.Types.License
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltLicense1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.License
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.License
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltBlog5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.License
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltBlog1
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.License
                                              Data.Maybe.Just x2
                                              -> Data.Maybe.Just
                                                   @ Flickr.Types.License
                                                   (Flickr.Types.License x x1 x2) } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.License }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.License } }) -}
e6ab0599692fe7a7084b93568eb5c97b
  $weltLocationPlace :: Text.XML.Light.Types.QName
                        -> [Text.XML.Light.Types.Attr]
                        -> [Text.XML.Light.Types.Content]
                        -> Data.Maybe.Maybe Flickr.Types.LocationPlace
    {- Arity: 3, Strictness: <L,1*U(1*U,A,A)><S,U><L,U> -}
b1b6136889cbed003d87b7056370450a
  $weltMTPair :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> [Text.XML.Light.Types.Content]
                 -> Data.Maybe.Maybe Flickr.Types.MachineTagPair
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPair8 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPair
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.MachineTagPair
                                    (Flickr.Types.MachineTagPair
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair6
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                          Data.Maybe.Just v -> v })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair4
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                          Data.Maybe.Just v -> v })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPair }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPair } }) -}
cafd73e0b11896dfe734dc8a75a3ca0c
  $weltMTPred :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> [Text.XML.Light.Types.Content]
                 -> Data.Maybe.Maybe Flickr.Types.MachineTagPred
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPair5 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPred
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.MachineTagPred
                                    (Flickr.Types.MachineTagPred
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPred1
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPred }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPred } }) -}
1756f49a7959c65ff5d63b5bdf97c872
  $weltMTag :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.MachineTag
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTag1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.MachineTag
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.MachineTag
                                    (Flickr.Types.MachineTag
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.MachineTag }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.MachineTag } }) -}
eac01ee885c94056015adfdd3d934a4e
  $weltMachinePairList :: GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> [Text.XML.Light.Types.Attr]
                          -> [Text.XML.Light.Types.Content]
                          -> Data.Maybe.Maybe
                                 (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                  [Flickr.Types.MachineTagPair])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMachinePairList5 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                             [Flickr.Types.MachineTagPair])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltMachinePairList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTPair8
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                            [Flickr.Types.MachineTagPair])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.MachineTagPair
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltMachinePairList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                            [Flickr.Types.MachineTagPair])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                       [Flickr.Types.MachineTagPair]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                  [Flickr.Types.MachineTagPair]) } }) -}
a3c789ed329c89be8ca25d4504f53740
  $weltMachinePredList :: GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> [Text.XML.Light.Types.Attr]
                          -> [Text.XML.Light.Types.Content]
                          -> Data.Maybe.Maybe
                                 (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                  [Flickr.Types.MachineTagPred])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMachinePredList2 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                             [Flickr.Types.MachineTagPred])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltMachinePredList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTPair5
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                            [Flickr.Types.MachineTagPred])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.MachineTagPred
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltMachinePredList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                            [Flickr.Types.MachineTagPred])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                       [Flickr.Types.MachineTagPred]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                  [Flickr.Types.MachineTagPred]) } }) -}
a11fba60aa897a3afeff68a342f2faf7
  $weltMachineTagList :: GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> [Text.XML.Light.Types.Attr]
                         -> [Text.XML.Light.Types.Content]
                         -> Data.Maybe.Maybe
                                (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                 [Flickr.Types.MachineTag])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMachineTagList2 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                             [Flickr.Types.MachineTag])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltMachineTagList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTag1
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                            [Flickr.Types.MachineTag])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.MachineTag
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltMachineTagList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                            [Flickr.Types.MachineTag])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                       [Flickr.Types.MachineTag]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                  [Flickr.Types.MachineTag]) } }) -}
e4558235b7609e96adab3a1725bae5cd
  $weltNamespace :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Attr]
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe Flickr.Types.Namespace
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPair7 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Namespace
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.Namespace
                                    (Flickr.Types.Namespace
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltNamespace1
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Namespace }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Namespace } }) -}
3f611ca9f7fa102c01a58d670decb3b3
  $weltNamespaceList :: GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> [Text.XML.Light.Types.Attr]
                        -> [Text.XML.Light.Types.Content]
                        -> Data.Maybe.Maybe
                               (Flickr.Types.ResContext Flickr.Types.Namespace,
                                [Flickr.Types.Namespace])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPred2 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                             [Flickr.Types.Namespace])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltNamespaceList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTPair7
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                            [Flickr.Types.Namespace])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.Namespace
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltNamespaceList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                            [Flickr.Types.Namespace])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                       [Flickr.Types.Namespace]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                  [Flickr.Types.Namespace]) } }) -}
3e920bdd0080f256b5ae04510d04b2c4
  $weltNote :: [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.Note
    {- Arity: 2, Strictness: <S,U><L,1*U> -}
bdf9b89708c86a7783f441d55cc47933
  $weltPermissions :: [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe Flickr.Types.Permissions
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPermissions9
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                          Data.Maybe.Just x1
                          -> case Flickr.Types.Import.eltAuthToken9 x1 of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                               Data.Maybe.Just x2
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltPermissions7
                                         (Flickr.Utils.pAttr_go ww) of wild3 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                    Data.Maybe.Just x3
                                    -> case Flickr.Types.Import.eltAuthToken9 x3 of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                         Data.Maybe.Just x4
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltPermissions5
                                                   (Flickr.Utils.pAttr_go ww) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                              Data.Maybe.Just x5
                                              -> case Flickr.Types.Import.eltAuthToken9
                                                        x5 of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                                   Data.Maybe.Just x6
                                                   -> case GHC.List.lookup
                                                             @ Text.XML.Light.Types.QName
                                                             @ GHC.Base.String
                                                             Text.XML.Light.Types.$fEqQName
                                                             Flickr.Types.Import.eltPermissions3
                                                             (Flickr.Utils.pAttr_go ww) of wild7 {
                                                        Data.Maybe.Nothing
                                                        -> Data.Maybe.Nothing
                                                             @ Flickr.Types.Permissions
                                                        Data.Maybe.Just x7
                                                        -> case Text.ParserCombinators.ReadP.run
                                                                  @ GHC.Types.Int
                                                                  Flickr.Types.Import.eltAuthToken10
                                                                  x7 of wild8 {
                                                             []
                                                             -> Data.Maybe.Nothing
                                                                  @ Flickr.Types.Permissions
                                                             : ds ds1
                                                             -> case ds of wild9 { (,) v ds2 ->
                                                                case GHC.List.lookup
                                                                       @ Text.XML.Light.Types.QName
                                                                       @ GHC.Base.String
                                                                       Text.XML.Light.Types.$fEqQName
                                                                       Flickr.Types.Import.eltPermissions1
                                                                       (Flickr.Utils.pAttr_go
                                                                          ww) of wild10 {
                                                                  Data.Maybe.Nothing
                                                                  -> Data.Maybe.Nothing
                                                                       @ Flickr.Types.Permissions
                                                                  Data.Maybe.Just x8
                                                                  -> case Text.ParserCombinators.ReadP.run
                                                                            @ GHC.Types.Int
                                                                            Flickr.Types.Import.eltAuthToken10
                                                                            x8 of wild11 {
                                                                       []
                                                                       -> Data.Maybe.Nothing
                                                                            @ Flickr.Types.Permissions
                                                                       : ds3 ds4
                                                                       -> case ds3 of wild12 { (,) v1 ds5 ->
                                                                          Data.Maybe.Just
                                                                            @ Flickr.Types.Permissions
                                                                            (Flickr.Types.Permissions
                                                                               x
                                                                               x2
                                                                               x6
                                                                               x4
                                                                               v
                                                                               v1) } } } } } } } } } } } } }) -}
1aa37bad212c492bad3c21831b4b9e4b
  $weltPhoto :: [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Photo
    {- Arity: 2, Strictness: <S,U><L,1*U> -}
0f97c5cf1e84598ed9d649ec84b0bfc2
  $weltPhotoContext :: Text.XML.Light.Types.Element
                       -> (# Flickr.Types.PhotoContext #)
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>,
       Unfolding: (\ w :: Text.XML.Light.Types.Element ->
                   (# Flickr.Types.PhotoContext
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList4
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList3
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList2
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltCluster3
                           w) #)) -}
f94685554ae918680e2a65d88ab4708f
  $weltPhotoCount :: GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> [Text.XML.Light.Types.Attr]
                     -> Data.Maybe.Maybe Flickr.Types.PhotoCount
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoCount5 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltGroupCat1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                    Data.Maybe.Just x
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltPhotoCount3
                                                   (Flickr.Utils.pAttr_go ww3) of wild6 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                              Data.Maybe.Just x1
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltPhotoCount1
                                                        (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                                   Data.Maybe.Just x2
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.PhotoCount
                                                        (Flickr.Types.PhotoCount v x1 x2) } } } } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount } }) -}
64eded359171994aa2b0c68193f7791a
  $weltPhotoCountList :: GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> [Text.XML.Light.Types.Content]
                         -> Data.Maybe.Maybe [Flickr.Types.PhotoCount]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoCountList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.PhotoCount]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ [Flickr.Types.PhotoCount]
                                    (Data.Maybe.mapMaybe
                                       @ Text.XML.Light.Types.Element
                                       @ Flickr.Types.PhotoCount
                                       Flickr.Types.Import.eltPhotoCount
                                       (Flickr.Utils.pNodes
                                          Flickr.Types.Import.eltPhotoCount5
                                          (Text.XML.Light.Proc.onlyElems_go ww3)))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ [Flickr.Types.PhotoCount] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.PhotoCount] } }) -}
8a19ccd5c77a483c170b7dcf7c353553
  $weltPhotoDate :: [Text.XML.Light.Types.Attr]
                    -> Data.Maybe.Maybe Flickr.Types.PhotoDate
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltPhotoDate6
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoDate
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPhotoDate4
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoDate
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltPhotoDate2
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoDate
                               Data.Maybe.Just x2
                               -> Data.Maybe.Just
                                    @ Flickr.Types.PhotoDate
                                    (Flickr.Types.PhotoDate
                                       x
                                       x1
                                       x2
                                       (Flickr.Types.Import.$weltIntAttr
                                          Flickr.Types.Import.eltPhotoDate1
                                          ww)) } } }) -}
b3f23c5aecab727fcd2d26cdc9ec6618
  $weltPhotoDetails :: [Text.XML.Light.Types.Attr]
                       -> [Text.XML.Light.Types.Content]
                       -> Data.Maybe.Maybe Flickr.Types.PhotoDetails
    {- Arity: 2, Strictness: <S,U><L,U> -}
8d00711399a34c2b621e2871f812c462
  $weltPhotoID :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe GHC.Base.String
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoID1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ GHC.Base.String
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ GHC.Base.String
                                    (Text.XML.Light.Proc.$wstrContent ww3)
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ GHC.Base.String }
                          Data.Maybe.Just ipv -> Data.Maybe.Nothing @ GHC.Base.String } }) -}
592667c0a33799caaf13a106a3a05521
  $weltPhotoList :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Attr]
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe
                           (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoList3 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltPhotoList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltPhotoList2
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltPhotoContext
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltPhotoList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo]) } }) -}
f4cc16e05661f38eb80aa8531e0fc0ba
  $weltPhotoPair :: [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe (Flickr.Types.Photo, Flickr.Types.Photo)
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Content] ->
                   case Text.XML.Light.Proc.$wfindChildren
                          Flickr.Types.Import.eltPhotoPair3
                          ww of wild {
                     [] -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                     : a1 ds1
                     -> case a1 of ww1 { Text.XML.Light.Types.Element ww2 ww3 ww4 ww5 ->
                        case Flickr.Types.Import.$weltPhoto ww3 ww4 of wild1 {
                          Data.Maybe.Nothing
                          -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                          Data.Maybe.Just x
                          -> case Text.XML.Light.Proc.$wfindChildren
                                    Flickr.Types.Import.eltPhotoPair1
                                    ww of wild2 {
                               [] -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                               : a2 ds2
                               -> case a2 of ww6 { Text.XML.Light.Types.Element ww7 ww8 ww9 ww10 ->
                                  case Flickr.Types.Import.$weltPhoto ww8 ww9 of wild3 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                                    Data.Maybe.Just x1
                                    -> Data.Maybe.Just
                                         @ (Flickr.Types.Photo, Flickr.Types.Photo)
                                         (x, x1) } } } } } }) -}
f6b0914a3763d031a514a1a6a64ff002
  $weltPhotoPool :: [Text.XML.Light.Types.Attr]
                    -> Data.Maybe.Maybe Flickr.Types.PhotoPool
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoPool
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPhotoPool1
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoPool
                          Data.Maybe.Just x1
                          -> Data.Maybe.Just
                               @ Flickr.Types.PhotoPool
                               (Flickr.Types.PhotoPool x x1) } }) -}
a78a45296066c5ff8c556ed30498a8d8
  $weltPhotoset :: [Text.XML.Light.Types.Attr]
                   -> Data.Maybe.Maybe Flickr.Types.Photoset
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPhotoset6
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltPhotoset4
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                               Data.Maybe.Just x2
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltPhotoset3
                                         (Flickr.Utils.pAttr_go ww) of wild3 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                    Data.Maybe.Just x3
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x3 of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltPhotoPool1
                                                   (Flickr.Utils.pAttr_go ww) of wild6 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                              Data.Maybe.Just x4
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltPhotoset1
                                                        (Flickr.Utils.pAttr_go ww) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                                   Data.Maybe.Just x5
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.Photoset
                                                        (Flickr.Types.Photoset
                                                           x
                                                           x1
                                                           x2
                                                           v
                                                           x4
                                                           x5) } } } } } } } }) -}
67d0dfb2c3cb7b6a0ea4eef07f585872
  $weltPhotosetQuota :: [Text.XML.Light.Types.Attr]
                        -> Data.Maybe.Maybe Flickr.Types.PhotosetQuota
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltPhotosetQuota3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing
                     -> Data.Maybe.Nothing @ Flickr.Types.PhotosetQuota
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ Flickr.Types.PhotosetQuota
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltPhotosetQuota2
                                    (Flickr.Utils.pAttr_go ww) of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Nothing @ Flickr.Types.PhotosetQuota
                               Data.Maybe.Just x1
                               -> Data.Maybe.Just
                                    @ Flickr.Types.PhotosetQuota
                                    (Flickr.Types.PhotosetQuota
                                       (case v of wild4 { GHC.Types.I# i ->
                                        GHC.Integer.Type.smallInteger i })
                                       (case GHC.Base.eqString
                                               x1
                                               Flickr.Types.Import.eltPhotosetQuota1 of wild4 {
                                          GHC.Types.False
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x1 of wild5 {
                                               [] -> Data.Maybe.Nothing @ GHC.Types.Int
                                               : ds3 ds4
                                               -> case ds3 of wild6 { (,) v1 ds5 ->
                                                  Data.Maybe.Just @ GHC.Types.Int v1 } }
                                          GHC.Types.True
                                          -> Data.Maybe.Nothing @ GHC.Types.Int })) } } } }) -}
d60dcd388a36edde8f27b2d5e3d7c392
  $weltPlace :: GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Place
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlace9 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Place
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltPlace7
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Place
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltPlace5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Place
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltGeoLocation4
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Place
                                              Data.Maybe.Just x2
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltGeoLocation2
                                                        (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Place
                                                   Data.Maybe.Just x3
                                                   -> case GHC.List.lookup
                                                             @ Text.XML.Light.Types.QName
                                                             @ GHC.Base.String
                                                             Text.XML.Light.Types.$fEqQName
                                                             Flickr.Types.Import.eltPlace3
                                                             (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                        Data.Maybe.Nothing
                                                        -> Data.Maybe.Nothing @ Flickr.Types.Place
                                                        Data.Maybe.Just x4
                                                        -> case GHC.List.lookup
                                                                  @ Text.XML.Light.Types.QName
                                                                  @ GHC.Base.String
                                                                  Text.XML.Light.Types.$fEqQName
                                                                  Flickr.Types.Import.eltPlace1
                                                                  (Flickr.Utils.pAttr_go
                                                                     ww3) of wild8 {
                                                             Data.Maybe.Nothing
                                                             -> Data.Maybe.Nothing
                                                                  @ Flickr.Types.Place
                                                             Data.Maybe.Just x5
                                                             -> Data.Maybe.Just
                                                                  @ Flickr.Types.Place
                                                                  (Flickr.Types.Place
                                                                     x
                                                                     x1
                                                                     x2
                                                                     x3
                                                                     x4
                                                                     x5
                                                                     (Text.XML.Light.Proc.$wstrContent
                                                                        ww4)) } } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Place }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Place } }) -}
e077d75618233eb215428d7c11ace4aa
  $weltPlaceQuery :: GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> [Text.XML.Light.Types.Attr]
                     -> Data.Maybe.Maybe Flickr.Types.PlaceQuery
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceQuery3 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltCluster2
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery
                                    Data.Maybe.Just x
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            Data.Maybe.Just
                                              @ Flickr.Types.PlaceQuery
                                              (Flickr.Types.PlaceQuery
                                                 (Flickr.Utils.$wpAttr
                                                    Flickr.Types.Import.eltPlaceQuery2
                                                    ww3)
                                                 (Flickr.Utils.$wpAttr
                                                    Flickr.Types.Import.eltGeoLocation5
                                                    ww3)
                                                 (Flickr.Utils.$wpAttr
                                                    Flickr.Types.Import.eltGeoLocation3
                                                    ww3)
                                                 (case GHC.List.lookup
                                                         @ Text.XML.Light.Types.QName
                                                         @ GHC.Base.String
                                                         Text.XML.Light.Types.$fEqQName
                                                         Flickr.Types.Import.eltPlaceQuery1
                                                         (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                    Data.Maybe.Nothing
                                                    -> Data.Maybe.Nothing @ Flickr.Types.Accuracy
                                                    Data.Maybe.Just x1
                                                    -> case Text.ParserCombinators.ReadP.run
                                                              @ GHC.Types.Int
                                                              Flickr.Types.Import.eltAuthToken10
                                                              x1 of wild7 {
                                                         []
                                                         -> Data.Maybe.Nothing
                                                              @ Flickr.Types.Accuracy
                                                         : ds3 ds4
                                                         -> case ds3 of wild8 { (,) v1 ds5 ->
                                                            Data.Maybe.Just
                                                              @ Flickr.Types.Accuracy
                                                              v1 } } })
                                                 v) } } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery } }) -}
edf57d123a5088d420dc7ab3a7b77631
  $weltPlaceType :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Attr]
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe Flickr.Types.PlaceType
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlace2 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.PlaceType
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.PlaceType
                                    (Flickr.Types.PlaceType
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltPlaceType1
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                          Data.Maybe.Just v -> v })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.PlaceType }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.PlaceType } }) -}
bb0e37d0863177164aa2cbe8f273b4f3
  $weltPlaceTypeList :: GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> [Text.XML.Light.Types.Content]
                        -> Data.Maybe.Maybe [Flickr.Types.PlaceType]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceTypeList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.PlaceType]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltPlaceTypeList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltPlace2
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ [Flickr.Types.PlaceType] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.PlaceType] } }) -}
f567c4bd9e5dd11d01431e12616ed449
  $weltPlaces :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> [Text.XML.Light.Types.Content]
                 -> Data.Maybe.Maybe (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
    {- Arity: 5, Strictness: <S,U><L,U><L,U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceQuery3 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.$weltPlaceQuery
                                         ww
                                         (Data.Maybe.Nothing @ GHC.Base.String)
                                         (Data.Maybe.Nothing @ GHC.Base.String)
                                         ww3 of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.eltPlaces_go
                                              (Flickr.Utils.pNodes
                                                 Flickr.Types.Import.eltPlace9
                                                 (Text.XML.Light.Proc.onlyElems_go ww4)) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing
                                              @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                                         Data.Maybe.Just x1
                                         -> Data.Maybe.Just
                                              @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                                              (x, x1) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place]) } }) -}
0c410561e0d416b085cc3f9f7dbfed3e
  $weltPlacesList :: GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> [Text.XML.Light.Types.Content]
                     -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceQuery3 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Place]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltPlacesList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltPlace9
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Place] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Place] } }) -}
478b208643942d4ed39d321291e4b3dd
  $weltPrivacy :: GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> Data.Maybe.Maybe Flickr.Types.Privacy
    {- Arity: 2, Strictness: <L,U><S,1*U>,
       Unfolding: (\ w :: GHC.Base.String
                     ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          (Text.XML.Light.Types.QName
                             w
                             (Data.Maybe.Nothing @ GHC.Base.String)
                             (Data.Maybe.Nothing @ GHC.Base.String))
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Privacy
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ Flickr.Types.Privacy
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             case v of wild3 { GHC.Types.I# ds3 ->
                             case ds3 of ds4 {
                               DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Privacy
                               0 -> Flickr.Types.Import.eltPrivacy9
                               1 -> Flickr.Types.Import.eltPrivacy9
                               2 -> Flickr.Types.Import.eltPrivacy7
                               3 -> Flickr.Types.Import.eltPrivacy5
                               4 -> Flickr.Types.Import.eltPrivacy3
                               5 -> Flickr.Types.Import.eltPrivacy1
                               6 -> Flickr.Types.Import.eltPrivacy1 } } } } }) -}
1020d094bc6d9f6e4f8d4132bdc82426
  $weltResContext :: Text.XML.Light.Types.Element
                     -> (# Flickr.Types.ResContext a #)
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>,
       Unfolding: (\ @ a1 w :: Text.XML.Light.Types.Element ->
                   (# Flickr.Types.ResContext
                        @ a1
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList4
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList3
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList2
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltCluster3
                           w) #)) -}
7d9c489725555463d9f3b0a4c08c6381
  $weltSize :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> Data.Maybe.Maybe Flickr.Types.SizeDetails
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltSize7 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltEXIF5
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltSize5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                         Data.Maybe.Just x1
                                         -> case Text.ParserCombinators.ReadP.run
                                                   @ GHC.Types.Int
                                                   Flickr.Types.Import.eltAuthToken10
                                                   x1 of wild5 {
                                              [] -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                              : ds ds1
                                              -> case ds of wild6 { (,) v ds2 ->
                                                 case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltSize3
                                                        (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                                   Data.Maybe.Just x2
                                                   -> case Text.ParserCombinators.ReadP.run
                                                             @ GHC.Types.Int
                                                             Flickr.Types.Import.eltAuthToken10
                                                             x2 of wild8 {
                                                        []
                                                        -> Data.Maybe.Nothing
                                                             @ Flickr.Types.SizeDetails
                                                        : ds3 ds4
                                                        -> case ds3 of wild9 { (,) v1 ds5 ->
                                                           case GHC.List.lookup
                                                                  @ Text.XML.Light.Types.QName
                                                                  @ GHC.Base.String
                                                                  Text.XML.Light.Types.$fEqQName
                                                                  Flickr.Types.Import.eltSize1
                                                                  (Flickr.Utils.pAttr_go
                                                                     ww3) of wild10 {
                                                             Data.Maybe.Nothing
                                                             -> Data.Maybe.Nothing
                                                                  @ Flickr.Types.SizeDetails
                                                             Data.Maybe.Just x3
                                                             -> case GHC.List.lookup
                                                                       @ Text.XML.Light.Types.QName
                                                                       @ GHC.Base.String
                                                                       Text.XML.Light.Types.$fEqQName
                                                                       Flickr.Types.Import.eltBlog1
                                                                       (Flickr.Utils.pAttr_go
                                                                          ww3) of wild11 {
                                                                  Data.Maybe.Nothing
                                                                  -> Data.Maybe.Nothing
                                                                       @ Flickr.Types.SizeDetails
                                                                  Data.Maybe.Just x4
                                                                  -> Data.Maybe.Just
                                                                       @ Flickr.Types.SizeDetails
                                                                       (Flickr.Types.SizeDetails
                                                                          x
                                                                          v
                                                                          v1
                                                                          x3
                                                                          x4) } } } } } } } } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails } }) -}
d4ca43089a2795e3f7bb2a968679a4ff
  $weltSubCategory :: [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe Flickr.Types.SubCategory
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltBlog5
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltGroupCat1
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                               Data.Maybe.Just x2
                               -> case Text.ParserCombinators.ReadP.run
                                         @ GHC.Types.Int
                                         Flickr.Types.Import.eltAuthToken10
                                         x2 of wild3 {
                                    [] -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                                    : ds ds1
                                    -> case ds of wild4 { (,) v ds2 ->
                                       Data.Maybe.Just
                                         @ Flickr.Types.SubCategory
                                         (Flickr.Types.SubCategory
                                            x
                                            x1
                                            (case v of wild5 { GHC.Types.I# i ->
                                             GHC.Integer.Type.smallInteger i })) } } } } }) -}
057eeb3ffc937bef16667d9d3a252e99
  $weltTagDetails :: [Text.XML.Light.Types.Attr]
                     -> [Text.XML.Light.Types.Content]
                     -> Data.Maybe.Maybe Flickr.Types.TagDetails
    {- Arity: 2, Strictness: <S,U><L,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.TagDetails
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltTagDetails2
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.TagDetails
                          Data.Maybe.Just x1
                          -> let {
                               $j :: [GHC.Base.String] -> Data.Maybe.Maybe Flickr.Types.TagDetails
                                 {- Arity: 1, Strictness: <L,U> -}
                               = \ x2 :: [GHC.Base.String] ->
                                 Data.Maybe.Just
                                   @ Flickr.Types.TagDetails
                                   (Flickr.Types.TagDetails
                                      x
                                      x1
                                      x2
                                      (Text.XML.Light.Proc.$wstrContent ww1)
                                      (Flickr.Types.Import.$weltIntAttr
                                         Flickr.Types.Import.eltGroupCat2
                                         ww)
                                      (Flickr.Types.Import.$weltIntAttr
                                         Flickr.Types.Import.eltTagDetails1
                                         ww))
                             } in
                             case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltEXIF3
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing
                               -> $j
                                    (GHC.Base.map
                                       @ Text.XML.Light.Types.Element
                                       @ [GHC.Types.Char]
                                       Text.XML.Light.Proc.strContent
                                       (Flickr.Utils.pNodes
                                          Flickr.Types.Import.eltEXIF4
                                          (Text.XML.Light.Proc.onlyElems_go ww1)))
                               Data.Maybe.Just x2
                               -> $j
                                    (GHC.Types.:
                                       @ GHC.Base.String
                                       x2
                                       (GHC.Types.[] @ GHC.Base.String)) } } }) -}
7a1387f9d16f3d9000e82dc993de7045
  $weltTagDetailsList :: [Text.XML.Light.Types.Content]
                         -> Data.Maybe.Maybe [Flickr.Types.TagDetails]
    {- Arity: 1, Strictness: <S,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Content] ->
                   case Flickr.Utils.pNodes
                          Flickr.Types.Import.eltTagDetailsList1
                          (Text.XML.Light.Proc.onlyElems_go ww) of wild {
                     [] -> Data.Maybe.Nothing @ [Flickr.Types.TagDetails]
                     : a1 ds1
                     -> Data.Maybe.Just
                          @ [Flickr.Types.TagDetails]
                          (case a1 of wild1 { Text.XML.Light.Types.Element ds2 ds3 ds4 ds5 ->
                           Data.Maybe.mapMaybe
                             @ Text.XML.Light.Types.Element
                             @ Flickr.Types.TagDetails
                             Flickr.Types.Import.eltTagDetails
                             (Flickr.Utils.pNodes
                                Flickr.Types.Import.eltCluster1
                                (Text.XML.Light.Proc.onlyElems_go ds4)) }) }) -}
804f9d88df0c0565f9b383d06c56426b
  $weltTagInfo :: Text.XML.Light.Types.Element
                  -> (# Flickr.Types.TagInfo #)
    {- Arity: 1, Strictness: <L,U(A,1*U,1*U,A)>,
       Unfolding: (\ w :: Text.XML.Light.Types.Element ->
                   (# Flickr.Types.TagInfo
                        (Text.XML.Light.Proc.strContent w)
                        (case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                         case GHC.List.lookup
                                @ Text.XML.Light.Types.QName
                                @ GHC.Base.String
                                Text.XML.Light.Types.$fEqQName
                                Flickr.Types.Import.eltGroupCat1
                                (Flickr.Utils.pAttr_go ww2) of wild {
                           Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Int
                           Data.Maybe.Just a1
                           -> case Text.ParserCombinators.ReadP.run
                                     @ GHC.Types.Int
                                     Flickr.Types.Import.eltAuthToken10
                                     a1 of wild1 {
                                [] -> Data.Maybe.Nothing @ GHC.Types.Int
                                : ds ds1
                                -> case ds of wild2 { (,) v ds2 ->
                                   Data.Maybe.Just @ GHC.Types.Int v } } } }) #)) -}
67b189008e8151b08d246ed29dd89492
  $weltTagInfoList :: GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> [Text.XML.Light.Types.Content]
                      -> Data.Maybe.Maybe [Flickr.Types.TagInfo]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltTagDetailsList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.TagInfo]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltTagInfoList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltCluster1
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.TagInfo] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.TagInfo] } }) -}
1deeb961ac5039509e495f92e637c462
  $weltTicket :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> Data.Maybe.Maybe Flickr.Types.Ticket
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltTicket6 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltTicket4
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                         Data.Maybe.Just x1
                                         -> case Text.ParserCombinators.ReadP.run
                                                   @ GHC.Types.Int
                                                   Flickr.Types.Import.eltAuthToken10
                                                   x1 of wild5 {
                                              [] -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                              : ds ds1
                                              -> case ds of wild6 { (,) v ds2 ->
                                                 case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltTicket3
                                                        (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                                   Data.Maybe.Just x2
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.Ticket
                                                        (Flickr.Types.Ticket
                                                           x
                                                           v
                                                           (case GHC.List.lookup
                                                                   @ Text.XML.Light.Types.QName
                                                                   @ GHC.Base.String
                                                                   Text.XML.Light.Types.$fEqQName
                                                                   Flickr.Types.Import.eltTicket1
                                                                   (Flickr.Utils.pAttr_go
                                                                      ww3) of wild8 {
                                                              Data.Maybe.Nothing -> GHC.Types.False
                                                              Data.Maybe.Just x3
                                                              -> case Flickr.Types.Import.eltAuthToken9
                                                                        x3 of wild9 {
                                                                   Data.Maybe.Nothing
                                                                   -> GHC.Types.False
                                                                   Data.Maybe.Just v1 -> v1 } })
                                                           x2) } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Ticket }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Ticket } }) -}
3491f0695bedc8cedbc1b0a39327b9eb
  $weltURLDetails :: [Text.XML.Light.Types.Attr]
                     -> [Text.XML.Light.Types.Content]
                     -> Data.Maybe.Maybe Flickr.Types.URLDetails
    {- Arity: 2, Strictness: <S,1*U><L,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltEvent4
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.URLDetails
                     Data.Maybe.Just x
                     -> Data.Maybe.Just
                          @ Flickr.Types.URLDetails
                          (Flickr.Types.URLDetails
                             (Text.XML.Light.Proc.$wstrContent ww1)
                             x) }) -}
8ad91f46592c04003543e253cb71b154
  $weltUser :: [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.User
    {- Arity: 2, Strictness: <S,U><L,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   let {
                     $j :: GHC.Base.String -> Data.Maybe.Maybe Flickr.Types.User
                       {- Arity: 1, Strictness: <L,U> -}
                     = \ x :: GHC.Base.String ->
                       let {
                         $j1 :: GHC.Base.String -> Data.Maybe.Maybe Flickr.Types.User
                           {- Arity: 1, Strictness: <L,U> -}
                         = \ x1 :: GHC.Base.String ->
                           Data.Maybe.Just
                             @ Flickr.Types.User
                             (Flickr.Types.User
                                x1
                                x
                                (case GHC.List.lookup
                                        @ Text.XML.Light.Types.QName
                                        @ GHC.Base.String
                                        Text.XML.Light.Types.$fEqQName
                                        Flickr.Types.Import.eltAuthToken15
                                        (Flickr.Utils.pAttr_go ww) of wild {
                                   Data.Maybe.Nothing
                                   -> case Text.XML.Light.Proc.$wfindChildren
                                             Flickr.Types.Import.eltAuthToken13
                                             ww1 of wild1 {
                                        [] -> Data.Maybe.Nothing @ GHC.Base.String
                                        : a1 ds1
                                        -> Data.Maybe.Just
                                             @ GHC.Base.String
                                             (Text.XML.Light.Proc.strContent a1) }
                                   Data.Maybe.Just ipv -> wild })
                                (Flickr.Types.Import.$weltBool
                                   Flickr.Types.Import.eltAuthToken8
                                   ww)
                                (Flickr.Types.Import.$weltBool
                                   Flickr.Types.Import.eltAuthToken7
                                   ww)
                                (Data.Maybe.Nothing @ GHC.Base.String)
                                (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                (Data.Maybe.Nothing @ Flickr.Types.UserPhotoStat)
                                (GHC.Types.[] @ Text.XML.Light.Types.Attr))
                       } in
                       case GHC.List.lookup
                              @ Text.XML.Light.Types.QName
                              @ GHC.Base.String
                              Text.XML.Light.Types.$fEqQName
                              Flickr.Types.Import.eltAuthToken5
                              (Flickr.Utils.pAttr_go ww) of wild {
                         Data.Maybe.Nothing
                         -> case Text.XML.Light.Proc.$wfindChildren
                                   Flickr.Types.Import.eltAuthToken5
                                   ww1 of wild1 {
                              [] -> Data.Maybe.Nothing @ Flickr.Types.User
                              : a1 ds1 -> $j1 (Text.XML.Light.Proc.strContent a1) }
                         Data.Maybe.Just ipv -> $j1 ipv }
                   } in
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltAuthToken1
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.User
                          Data.Maybe.Just x -> $j x }
                     Data.Maybe.Just ipv -> $j ipv }) -}
d81b6b80be1fce3da6b2965c7ba38473
  eltActivity :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe [Flickr.Types.Activity]
    {- Arity: 1, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltActivity ww3 }) -}
7dfb105656343032731f4c6c6ea03134
  eltActivity1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "event"#) -}
244d529fe8d2e41d6cde0dfebfb92f67
  eltActivity_go :: [Text.XML.Light.Types.Element]
                    -> Data.Maybe.Maybe [Flickr.Types.Activity]
    {- Arity: 1, Strictness: <S,1*U> -}
c2b9e20da4233c11ff4214924a47b68b
  eltAuthFrob :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.AuthFrob
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltAuthFrob ww6 ww7 ww8 ww3 } }) -}
70de09c5f4a141d7557fbe176b495631
  eltAuthFrob1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "frob"#) -}
cdf2a2383b67ec1bebcd65f8124e7d4c
  eltAuthToken :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.AuthToken
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltAuthToken ww6 ww7 ww8 ww3 } }) -}
9a1c082f8d5241c20f3da272a0b2845e
  eltAuthToken1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c7be21a82c722098d63959b8d38971b7
  eltAuthToken10 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
    {- Unfolding: (GHC.Read.$fReadInt4
                     GHC.Read.$fReadInt_$sconvertInt
                     Text.ParserCombinators.ReadPrec.minPrec
                     @ GHC.Types.Int
                     (Text.ParserCombinators.ReadP.$fMonadP_$creturn
                        @ GHC.Types.Int)) -}
57676f939586ddfbea809d14f4542a91
  eltAuthToken11 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "true"#) -}
36983074e172dbcd1b9ecda928ee8e36
  eltAuthToken12 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "false"#) -}
5c5d3efd10cfd3765c28ca3c04c64331
  eltAuthToken13 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken14
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
e66b08c20d3ead307f5d80ebeaa1d2f6
  eltAuthToken14 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "realname"#) -}
dee9899f552dd1d952952885fa1b8fab
  eltAuthToken15 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken16
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
e8011358a9978f9e92fb8bc39e23dca5
  eltAuthToken16 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "fullname"#) -}
d1a533f0c110cb53fccaf8f745f73b7f
  eltAuthToken17 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "user"#) -}
2e55ef39abba92d13663235d52a9dd25
  eltAuthToken18 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "perms"#) -}
919beaa5aadb8699db137b5609d8d9bd
  eltAuthToken19 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "token"#) -}
c498846991f01f220d8da1d993b03cf3
  eltAuthToken2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "id"#) -}
8fd009b2e0fd6826f393520cf3b32aff
  eltAuthToken20 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "auth"#) -}
ad5c466fa866475e74ecd3d814b1ce0f
  eltAuthToken3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
5bd9733f54244d54597ec0a0607a78e2
  eltAuthToken4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "nsid"#) -}
ca743fb93053fcb781c8cd42f3fe03d6
  eltAuthToken5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
497d400848e3f1b62b9cc3c96d7b7f71
  eltAuthToken6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "username"#) -}
12d677880a05d4985d5ce4e0ae1a62dc
  eltAuthToken7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ispro"#) -}
061c85a763c29811b1745d5c1715fa8a
  eltAuthToken8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "isadmin"#) -}
c76ee54e5a8e3eeca32c29160ed7677f
  eltAuthToken9 :: GHC.Base.String -> Data.Maybe.Maybe GHC.Types.Bool
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ x :: GHC.Base.String ->
                   let {
                     fail :: GHC.Prim.Void# -> Data.Maybe.Maybe GHC.Types.Bool
                       {- Arity: 1, Strictness: <L,A> -}
                     = \ ds :: GHC.Prim.Void# ->
                       let {
                         ds1 :: [GHC.Types.Char]
                         = GHC.Base.map
                             @ GHC.Types.Char
                             @ GHC.Types.Char
                             GHC.Unicode.toLower
                             x
                       } in
                       case GHC.Base.eqString
                              ds1
                              Flickr.Types.Import.eltAuthToken12 of wild {
                         GHC.Types.False
                         -> case GHC.Base.eqString
                                   ds1
                                   Flickr.Types.Import.eltAuthToken11 of wild1 {
                              GHC.Types.False -> Data.Maybe.Nothing @ GHC.Types.Bool
                              GHC.Types.True -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.True }
                         GHC.Types.True
                         -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.False }
                   } in
                   case Text.ParserCombinators.ReadP.run
                          @ GHC.Types.Int
                          Flickr.Types.Import.eltAuthToken10
                          x of wild {
                     [] -> fail GHC.Prim.void#
                     : ds ds1
                     -> case ds of wild1 { (,) v ds2 ->
                        case v of wild2 { GHC.Types.I# ds3 ->
                        case ds3 of ds4 {
                          DEFAULT -> fail GHC.Prim.void#
                          0 -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.False
                          1 -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.True } } } }) -}
04d5e9e4d7bce34a7adc2ac2072d85e1
  eltBandwidth :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.Bandwidth
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltBandwidth ww2 }) -}
5c07e58fbc5c73b7efa010195d3a56e5
  eltBlog :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.Blog
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltBlog ww6 ww7 ww8 ww2 } }) -}
832cc6d5f25c8dab0457e69d78e8e1c3
  eltBlog1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltBlog2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
7fecc09082ad3dd064a299f6fdc8e6c3
  eltBlog2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "url"#) -}
0c097c5ec57bbeb693cc57f0b485db24
  eltBlog3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltBlog4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
8279c925c5e4d11a78a22ffe84f7646a
  eltBlog4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "needspassword"#) -}
0ae4204b6e884730f048058a6f929332
  eltBlog5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltBlog6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
be6b34a7b6b54ef5c617a0c54d98890a
  eltBlog6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "name"#) -}
b93457199615faaad0a6802961de1166
  eltBlog7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "blog"#) -}
b5f96ea49ec979bcafec7edb0f3bcd07
  eltBlogsList :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe [Flickr.Types.Blog]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltBlogsList ww6 ww7 ww8 ww3 } }) -}
9702ee2fc4e3a55df844204fe3bb6727
  eltBlogsList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "blogs"#) -}
fb8bc197b48e21ddd782c5b932ea32c0
  eltBlogsList_go :: [Text.XML.Light.Types.Element]
                     -> Data.Maybe.Maybe [Flickr.Types.Blog]
    {- Arity: 1, Strictness: <S,1*U> -}
87299c88773b08fe0c852e993522d9a2
  eltBool :: GHC.Base.String
             -> Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe GHC.Types.Bool
    {- Arity: 2, Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: GHC.Base.String w1 :: Text.XML.Light.Types.Element ->
                   case w1 of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltBool w ww2 }) -}
4dd5601a42948be1fc0074e819390530
  eltCategory :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.Category
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltCategory ww2 ww3 }) -}
ad8aacee627dd45cc2fa922627f7110d
  eltCategory1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCategory2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
7104cebea1d243f9cb5d0fc2d5956223
  eltCategory2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pathids"#) -}
b2e62a3c3284c2398b7c9f195213bec5
  eltCategory3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCategory4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
d04cc8a683310558603ae550248a43b9
  eltCategory4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "path"#) -}
781c00cea2dafb078834dc74fe718327
  eltCluster :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Cluster
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltCluster ww6 ww7 ww8 ww2 ww3 } }) -}
fff17388c40369b024ccf56747f62f6a
  eltCluster1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tag"#) -}
6f31870c2d8dbd187f4e0acaefebc2f1
  eltCluster2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCluster3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
8e3c37c84f1d6467d21f549a5fec8523
  eltCluster3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "total"#) -}
2e4e91f0e1f5a1d85ce877e22017cafd
  eltCluster4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "cluster"#) -}
35437b8497edba9c78874fad32eb5116
  eltClusterList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.Cluster]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.Cluster]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.Cluster
                        Flickr.Types.Import.eltCluster
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltCluster4
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
c1c7e789179840435dbaf9cf878c0dc4
  eltComment :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Comment
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltComment ww6 ww7 ww8 ww2 ww3 } }) -}
8f5ec7d887206ea8449b255915a1f944
  eltComment1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltComment2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
024a8553126d35fd11819e582b988798
  eltComment2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "permalink"#) -}
392b14cac86d4b59adb7f7083187908a
  eltComment3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltComment4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
a528efe2adfa67f5fd4b5369a2529f36
  eltComment4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "datecreate"#) -}
6bf3e64b100a283d0f7f6b7fe2782080
  eltComment5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "comment"#) -}
f1bb28fd63f84e4b4663d52559ff0e38
  eltCommentID :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.CommentID
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
       Unfolding: InlineRule (1, True, False)
                  (\ e :: Text.XML.Light.Types.Element ->
                   Flickr.Utils.pAttr Flickr.Types.Import.eltAuthToken2 e) -}
2b27105248f1ceeb682ccf7de1c68958
  eltCommentList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.Comment]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.Comment]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.Comment
                        Flickr.Types.Import.eltComment
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltComment5
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
766a8aff41814605f4c9ca95193c57b8
  eltContact :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Contact
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltContact ww2 ww3 }) -}
3d04d9064de6aa2dadea73f49fd1f5e1
  eltContact1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
b0105099bb6ae442b4fb8c15425f6bf8
  eltContact2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ignored"#) -}
f487ba1046bbe51c4ff317261c4901f7
  eltContact3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
1d10858a3bb20a09cd0d4b2643e33a18
  eltContact4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "family"#) -}
d87de6aea7d9bbe23fa467f8ec8ed6b0
  eltContact5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
5bf30a2c5d6ff39239caa906c71fb5ba
  eltContact6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "friend"#) -}
ae9511f9b760102ed0dbe652a26763a8
  eltContact7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact8
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
46124a34f7712cd6bf91a736b3041fad
  eltContact8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "iconserver"#) -}
a8b6fe445617f35bc29d8f7e53b10b23
  eltContactList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.Contact]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltContactList ww6 ww7 ww8 ww3 } }) -}
9e43af51da31ee53787424327076c87c
  eltContactList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "contact"#) -}
98e09fb1badc79283e194f714c8b9923
  eltContactList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "contacts"#) -}
7f44941d7af1122aa4f6c35f6c1e2868
  eltContactList_go :: [Text.XML.Light.Types.Element]
                       -> Data.Maybe.Maybe [Flickr.Types.Contact]
    {- Arity: 1, Strictness: <S,1*U> -}
2d5db4de5e40c50918d68e22b35d904a
  eltContentType :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.ContentType
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltContentType ww2 }) -}
ab5b54b4490f147dc3ee133033ad64c4
  eltContentType1 :: Data.Maybe.Maybe Flickr.Types.ContentType
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.ContentType
                     Flickr.Types.ContentScreenshot) -}
647b817be3e56490d25489ffb0b991d7
  eltContentType2 :: Data.Maybe.Maybe Flickr.Types.ContentType
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.ContentType
                     Flickr.Types.ContentPhoto) -}
a775f9d7b47fa662d8d9a934a7d50719
  eltContentType3 :: Data.Maybe.Maybe Flickr.Types.ContentType
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.ContentType
                     Flickr.Types.ContentOther) -}
cb20e4ee763665a2a8623c754140fdfb
  eltContentType4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContentType5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
786a36f4a057b2f009d5fdc5ec2b2e70
  eltContentType5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "content_type"#) -}
2177f9813d7597fde784cfa5364bd337
  eltEXIF :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.EXIF
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltEXIF ww6 ww7 ww8 ww2 ww3 } }) -}
b8b39266c1b25364541df8568e5fdcc7
  eltEXIF1 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
4e03c607c3be99fa5bcba209c10f11a0
  eltEXIF10 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF11
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
00094bbc449723012f19fb625c6e33f8
  eltEXIF11 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tagspace"#) -}
68f8be63eb812b9e018cdee81bc38555
  eltEXIF12 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "exif"#) -}
2a77c3e1d70830b2d0b115d694d0d4f8
  eltEXIF2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "clean"#) -}
fe85ebfec78a3fd3f26386c169b79265
  eltEXIF3 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
20b611af41e38e9306f4d1870b8facb4
  eltEXIF4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "raw"#) -}
cf113a6be0e8abc67fed98d5a64612c6
  eltEXIF5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
abb7b96463bf1ef51e6858ff5eeb0369
  eltEXIF6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "label"#) -}
25af29ddb8c13e333ce5ba197eb28840
  eltEXIF7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCluster1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
1d22a746797f38eb570c77112d474b96
  eltEXIF8 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF9
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
57d052972211b1a997c99ce422bd2e53
  eltEXIF9 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tagspaceid"#) -}
8818bc7286d3395e9d768e4e0ed23b5b
  eltEXIFList :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe [Flickr.Types.EXIF]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.EXIF]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.EXIF
                        Flickr.Types.Import.eltEXIF
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltEXIF12
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
be8eb3d5e779b34aba787409c4926da6
  eltEvent :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Activity
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltEvent ww2 ww3 }) -}
253608aaba9832ab9c0c726f7192c7d5
  eltEvent1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEvent2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
75824082b7858990845610392525b580
  eltEvent2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "dateadded"#) -}
be3e3aaae507aed8a0fca03949009e06
  eltEvent3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken17
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
84a891a61979f7efb60c91d1f1167760
  eltEvent4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEvent5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
18f5eb8fc594bff6d9687f4949826ce8
  eltEvent5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "type"#) -}
02d6e97d4e0bf09a30c7a073aa5682b7
  eltFileSize :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.FileSize
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltFileSize ww2 }) -}
b0f514dceae1176a70ba9aadaf4bdda8
  eltFileSize1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltFileSize2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c1e92cead30b024932991758f7eea6e9
  eltFileSize2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "maxkb"#) -}
9fc95ab4847b4d07c81a98f5f025c539
  eltFileSize3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltFileSize4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
957ef9f67ff44cb84dfd8c4a19dd3e96
  eltFileSize4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "maxbytes"#) -}
c502e6631c69c073a5a4b537d59343d7
  eltGeoLocation :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.GeoLocation
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGeoLocation ww6 ww7 ww8 ww2 } }) -}
c4749a9897441658edc6aee414c159d5
  eltGeoLocation1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "accuracy"#) -}
dd55ee337408bf446c4364e902ea957a
  eltGeoLocation2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGeoLocation3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
e37619e207394db55babf14bc4b13069
  eltGeoLocation3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "longitude"#) -}
94a8374b08a5590eef10a6c5e85aa361
  eltGeoLocation4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGeoLocation5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
350b93a81932ebd5a1160680badebbf2
  eltGeoLocation5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "latitude"#) -}
933f7b4dcbabe3b63290a78b4a64ae71
  eltGeoLocation6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "location"#) -}
21f4b797b1d4d9b25470045c3e80962d
  eltGroup :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Group
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGroup ww6 ww7 ww8 ww2 ww3 } }) -}
8544510df5482fdc03a04bd5e2d6db13
  eltGroupCat :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.GroupCat
    {- Arity: 1, Strictness: <S(S(SLL)LLL),1*U(U(U,U,U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGroupCat ww6 ww7 ww8 ww2 ww3 } }) -}
cd3ffbf347534afe9aa9cf4d5b7d898b
  eltGroupCat1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGroupCat2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
85b8268294a34c2769bde8dd355a20a0
  eltGroupCat2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "count"#) -}
951d5442fc05462034d92d5edd713f74
  eltGroupCat3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "subcat"#) -}
ed41395a7e539825a85a47461e9d20cd
  eltGroupCat4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "group"#) -}
d67d6ab6defe65c8b83d0bb3597f32e3
  eltGroupList :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe [Flickr.Types.Group]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGroupList ww6 ww7 ww8 ww3 } }) -}
aa1075d3388d1faff39527c0dafe4174
  eltGroupList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "groups"#) -}
aa7c8fbe8c7be9d9b977f3ffda66e643
  eltGroupList_go :: [Text.XML.Light.Types.Element]
                     -> Data.Maybe.Maybe [Flickr.Types.Group]
    {- Arity: 1, Strictness: <S,1*U> -}
e27df87396a47ae99ccc7a9cef1b2af5
  eltIntAttr :: GHC.Base.String
                -> Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe GHC.Types.Int
    {- Arity: 2, Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: GHC.Base.String w1 :: Text.XML.Light.Types.Element ->
                   case w1 of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltIntAttr w ww2 }) -}
5ddd1f9f4b261a00e35292072df0a5d2
  eltItem :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.Item
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltItem ww6 ww7 ww8 ww2 ww3 } }) -}
c1f4584d16928eb9f236be4f5b11f69b
  eltItems :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe [Flickr.Types.Item]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltItems ww6 ww7 ww8 ww3 } }) -}
f204c08082f6ed38a3d8a2f12635f6f8
  eltItems1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "item"#) -}
7b769f7ab47dba7e0b091ef9bc72de88
  eltItems2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "items"#) -}
0759683916a30e36c06cdc2b2b239161
  eltItems_go :: [Text.XML.Light.Types.Element]
                 -> Data.Maybe.Maybe [Flickr.Types.Item]
    {- Arity: 1, Strictness: <S,1*U> -}
996da9d3bd4db7231e828606565dff98
  eltLicense :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.License
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltLicense ww6 ww7 ww8 ww2 } }) -}
758107b1d79e52f005926c5689393974
  eltLicense1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "license"#) -}
6074a3ae9a17a43ae064b0a261ac790b
  eltLicenseList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.License]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.License]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.License
                        Flickr.Types.Import.eltLicense
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltLicense1
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
30459d6d6ac75745f4098649cb8f6733
  eltLocationPlace :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe Flickr.Types.LocationPlace
    {- Arity: 1, Strictness: <S(LSLL),1*U(1*U(1*U,A,A),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltLocationPlace ww1 ww2 ww3 }) -}
3fa616472b4c614da23d15a4ca598eed
  eltMTPair :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.MachineTagPair
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMTPair ww6 ww7 ww8 ww2 ww3 } }) -}
a715af0bda24f1c858d99ff15f389888
  eltMTPair1 :: GHC.Integer.Type.Integer
    {- Unfolding: (__integer 0) -}
4bb49cfc2c339369e1d40bc86b46a01c
  eltMTPair2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPair3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
08e9e3686d88bd544b6865be8ca5cfc3
  eltMTPair3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "usage"#) -}
516b7fd42abee9e1680ad2fa51d9f6ac
  eltMTPair4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPair5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c4ad895c28964fb3b7560c60cd9ccae9
  eltMTPair5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "predicate"#) -}
d78593845f4af1acbc6c934a249d2914
  eltMTPair6 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPair7
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
9960b168eb176287f0b80707101343d4
  eltMTPair7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "namespace"#) -}
ce16c24875b5f0ab52818cd1d20f8856
  eltMTPair8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pair"#) -}
2cf70e25dd432c15992c8a110e31cc82
  eltMTPred :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.MachineTagPred
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMTPred ww6 ww7 ww8 ww2 ww3 } }) -}
9908f7cf1af487fdddf86e67253e4a13
  eltMTPred1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPred2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
81819902b1c0ae493ce57b48d9fa5c18
  eltMTPred2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "namespaces"#) -}
9b7a1364f7e3de0183778a054f7b022b
  eltMTag :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.MachineTag
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMTag ww6 ww7 ww8 ww2 ww3 } }) -}
ee216b115ce3c733c3c6fe9c4cd52962
  eltMTag1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "value"#) -}
e8bee80164f841502a958e5fc9e269bf
  eltMachinePairList :: Text.XML.Light.Types.Element
                        -> Data.Maybe.Maybe
                               (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                [Flickr.Types.MachineTagPair])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMachinePairList
                     ww6
                     ww7
                     ww8
                     ww2
                     ww3 } }) -}
e0c7ff8f55d222dbfa245f12951692f9
  eltMachinePairList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
6f90f6d753692f3078e89439d48c383f
  eltMachinePairList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "perpage"#) -}
5616e643f4afdafdd7ed03e842077e27
  eltMachinePairList3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pages"#) -}
bd20e4730ad5c852d3f5e3aa569fc325
  eltMachinePairList4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "page"#) -}
5b47082a7e92a096a432d112966a200a
  eltMachinePairList5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pairs"#) -}
74e5a41725ee5d0c3c26c5b904c45fc2
  eltMachinePairList_go :: [Text.XML.Light.Types.Element]
                           -> Data.Maybe.Maybe [Flickr.Types.MachineTagPair]
    {- Arity: 1, Strictness: <S,1*U> -}
51cd7607dbfde578f30ec7e33bbbbf19
  eltMachinePredList :: Text.XML.Light.Types.Element
                        -> Data.Maybe.Maybe
                               (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                [Flickr.Types.MachineTagPred])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMachinePredList
                     ww6
                     ww7
                     ww8
                     ww2
                     ww3 } }) -}
623dbe63907191d6ab5bd59959f3a9ef
  eltMachinePredList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
4b9b6c596e3ccfb5b9c230ae23da5bdb
  eltMachinePredList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "predicates"#) -}
36c07e942a9560d20c660b3ebcaa74b4
  eltMachinePredList_go :: [Text.XML.Light.Types.Element]
                           -> Data.Maybe.Maybe [Flickr.Types.MachineTagPred]
    {- Arity: 1, Strictness: <S,1*U> -}
b4637729e415bfa25ed1531acd6782e0
  eltMachineTagList :: Text.XML.Light.Types.Element
                       -> Data.Maybe.Maybe
                              (Flickr.Types.ResContext Flickr.Types.MachineTag,
                               [Flickr.Types.MachineTag])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMachineTagList ww6 ww7 ww8 ww2 ww3 } }) -}
cf0acd237e9fd99e11e4113d90e9880b
  eltMachineTagList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
ac3d997e58fc26e51c1d82783abab945
  eltMachineTagList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "values"#) -}
2edbc506c5c219924aa1f98c92aa2bf3
  eltMachineTagList_go :: [Text.XML.Light.Types.Element]
                          -> Data.Maybe.Maybe [Flickr.Types.MachineTag]
    {- Arity: 1, Strictness: <S,1*U> -}
626ee87b0f94ad02afefd67f183c1f93
  eltNamespace :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.Namespace
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltNamespace ww6 ww7 ww8 ww2 ww3 } }) -}
45b517ce382cda4837c396b8e2ef266a
  eltNamespace1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMachinePredList2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
578e61710c9e5004d5f87909dae8bba0
  eltNamespaceList :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe
                             (Flickr.Types.NameContext, [Flickr.Types.Namespace])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltNamespaceList ww6 ww7 ww8 ww2 ww3 } }) -}
bf952d6a98b58032fa96cb6b203fa44a
  eltNamespaceList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
ee30db73338ec9d3b79f8be620ae193d
  eltNamespaceList_go :: [Text.XML.Light.Types.Element]
                         -> Data.Maybe.Maybe [Flickr.Types.Namespace]
    {- Arity: 1, Strictness: <S,1*U> -}
3bdcebc92737c9729550fa34b30ab4b1
  eltNote :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.Note
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltNote ww2 ww3 }) -}
a5a140a4f494ff9fdc55e6bab3efad52
  eltNoteID :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.NoteID
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
       Unfolding: InlineRule (1, True, False)
                  (\ e :: Text.XML.Light.Types.Element ->
                   Flickr.Utils.pAttr Flickr.Types.Import.eltAuthToken2 e) -}
3bd9e7de396c8e045c4e23dac9db6b05
  eltPermissions :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.Permissions
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPermissions ww2 }) -}
5b73a725cc9f09bd818ad339f4b7a7e6
  eltPermissions1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
f92e346a473724cf96f8a6014aa567b5
  eltPermissions10 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ispublic"#) -}
d5b19d7204f5e509899caaba75cfc4f7
  eltPermissions2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "permaddmeta"#) -}
6126249f9ebe21e2ecdbf553d1aa5604
  eltPermissions3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
6c57f91aba6511973bfe3d3414b61213
  eltPermissions4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "permcomment"#) -}
033a02a9186a01494ca257d5f115e2c2
  eltPermissions5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
772c9db6d883a0c15c61677ce01c0b72
  eltPermissions6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "isfriend"#) -}
3ad21048c9f420fd715948bfc9e17598
  eltPermissions7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions8
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
b589deb83938ba1149b802fed50b3e3b
  eltPermissions8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "isfamily"#) -}
706c04e9f29b95acc7e7054bf3144da6
  eltPermissions9 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions10
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
d8936e749eb066227d2111128f790f0c
  eltPhoto :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Photo
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhoto ww2 ww3 }) -}
a42cd0cf31b568ec3fbb6179a5a05cd1
  eltPhotoContext :: Text.XML.Light.Types.Element
                     -> Data.Maybe.Maybe Flickr.Types.PhotoContext
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case Flickr.Types.Import.$weltPhotoContext w of ww { (##) ww1 ->
                   Data.Maybe.Just @ Flickr.Types.PhotoContext ww1 }) -}
efbee89690650f0b317b780f28b1e693
  eltPhotoCount :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.PhotoCount
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoCount ww6 ww7 ww8 ww2 } }) -}
afdae987ef3f50ce1e7260632204ef33
  eltPhotoCount1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoCount2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
9abc3863de39b768a3aa862cc64ecb3a
  eltPhotoCount2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "todate"#) -}
05ce88c3015540374c1987c757fe4ff2
  eltPhotoCount3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoCount4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
b2ba353ca4b60ef085392aeb1d5290da
  eltPhotoCount4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "fromdate"#) -}
602f5f4a55b8cad16bfb0bc63353e456
  eltPhotoCount5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photocount"#) -}
593e38a60c4f23d0a916f62576bdf26a
  eltPhotoCountList :: Text.XML.Light.Types.Element
                       -> Data.Maybe.Maybe [Flickr.Types.PhotoCount]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoCountList ww6 ww7 ww8 ww3 } }) -}
af3283cfd523e8e39bd913abd29f5a61
  eltPhotoCountList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photocounts"#) -}
1b910572ac6dee6d924994ea62a1e4cf
  eltPhotoDate :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.PhotoDate
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoDate ww2 }) -}
3e2a5fcffd2e19dea2f6f653c3d41e44
  eltPhotoDate1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "takengranularity"#) -}
6b149befa180b1326ec312a12217a5cb
  eltPhotoDate2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoDate3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
811759bb6ed09459c4079b48278510a1
  eltPhotoDate3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "lastupdate"#) -}
01af5672c676d18d9f2731b05f1e5c27
  eltPhotoDate4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoDate5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
baa7ec778ca65d7539ab53cd4cadf39d
  eltPhotoDate5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "taken"#) -}
bb7b31724b306ac0776ec40e34758a98
  eltPhotoDate6 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoDate7
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
4acfa718fb501690d0ba363dd73a0f6b
  eltPhotoDate7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "posted"#) -}
1c0c1b36a60a818655bb23686776394c
  eltPhotoDetails :: Text.XML.Light.Types.Element
                     -> Data.Maybe.Maybe Flickr.Types.PhotoDetails
    {- Arity: 1, Strictness: <S(LSLL),U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoDetails ww2 ww3 }) -}
a992ce5dab869fbc76c33174e25552e2
  eltPhotoID :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.PhotoID
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoID ww6 ww7 ww8 ww3 } }) -}
c4f97c2b4c97bc83c34ceb6cf3f584d0
  eltPhotoID1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photoid"#) -}
24f01a774161ad75638c786732e40459
  eltPhotoList :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe
                         (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoList ww6 ww7 ww8 ww2 ww3 } }) -}
e9fc3bb737e813a8e70b744c0682028a
  eltPhotoList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
f76990459673726cec5ae6e07467caf1
  eltPhotoList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photo"#) -}
335a747eafa34c64039f313545c6e84e
  eltPhotoList3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photos"#) -}
b23d4636a3419eb3749b1b6de806b959
  eltPhotoList_go :: [Text.XML.Light.Types.Element]
                     -> Data.Maybe.Maybe [Flickr.Types.Photo]
    {- Arity: 1, Strictness: <S,1*U> -}
cbdc41fc4be6cee5126a005f03f44324
  eltPhotoPair :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe (Flickr.Types.Photo, Flickr.Types.Photo)
    {- Arity: 1, Strictness: <S(LLSL),1*U(A,A,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoPair ww3 }) -}
49681a50a543cd3bff43f560f97fccd4
  eltPhotoPair1 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoPair2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
9b85f64f78a7c143c33471c2ac289656
  eltPhotoPair2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "nextphoto"#) -}
05120b2e3a03d5d6c2114acbf798b99f
  eltPhotoPair3 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoPair4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
d3e357c890f7caca81fc036be148b9b4
  eltPhotoPair4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "prevphoto"#) -}
18979e1f2c326eb53fa200670607ad40
  eltPhotoPool :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.PhotoPool
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoPool ww2 }) -}
3a95b108dc51a76d6988abb83ea36859
  eltPhotoPool1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoPool2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
d3ed5cd93d6adb6828e60d04043a8292
  eltPhotoPool2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "title"#) -}
3da12c46560909475fb24b51aa4eba65
  eltPhotoset :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.Photoset
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoset ww2 }) -}
0acbb48fb0b7beb18437c31887b1c74f
  eltPhotoset1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoset2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
b5e3c297ba15bc45adda48072360b48a
  eltPhotoset2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "description"#) -}
f684d3600d1c70a3a95cd10311e13e1e
  eltPhotoset3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoList3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
a7e228f5f7973b1748ee491c04a1b044
  eltPhotoset4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoset5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
53fede88968534bec7c1f09066a352cf
  eltPhotoset5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "primary"#) -}
4477008a2a2192205f9728ca39f92885
  eltPhotoset6 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoset7
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
839852e7ace629a65f9afbc6ba583019
  eltPhotoset7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "owner"#) -}
fc38065bbfaee7fd2642193539352098
  eltPhotosetQuota :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe Flickr.Types.PhotosetQuota
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotosetQuota ww2 }) -}
c5fab0e74b72bd868407384eabb3f004
  eltPhotosetQuota1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "remaining"#) -}
2f6cfba024e5f8e5dfe7a89cbb079051
  eltPhotosetQuota2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotosetQuota1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
0b355553fe0e75947fdda5ff85f9fb1a
  eltPhotosetQuota3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotosetQuota4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
9f5722f2e9199783ea960fa5e462a1ce
  eltPhotosetQuota4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "created"#) -}
303cb498b52d622d3a4a59f169a9b8f0
  eltPlace :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Place
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlace ww6 ww7 ww8 ww2 ww3 } }) -}
4898403e05292e3cecb484add30a49f0
  eltPlace1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
77f892f1149187f1965cb0cb223ac5d7
  eltPlace2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_type"#) -}
f120b955d884e043a602c6005b300888
  eltPlace3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
81ae1010d1ed4f649ff0ea23508fb69b
  eltPlace4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_url"#) -}
e7159656b915ca4a5c62a37d9aaa6130
  eltPlace5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
056465168fa994817f0445bd9b8629ff
  eltPlace6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "woeid"#) -}
d6c9644b2608e56184c66dd1d7976c0f
  eltPlace7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace8
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
e3755bd7f999040bcb3b1403f8766a5d
  eltPlace8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_id"#) -}
d9614122387c7f20556573090ed7ebf1
  eltPlace9 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place"#) -}
6b9e37f7049d51294642a8b5f4d56e4a
  eltPlaceQuery :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.PlaceQuery
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaceQuery ww6 ww7 ww8 ww2 } }) -}
35e63643dc40cf4a5954374ed0545ea6
  eltPlaceQuery1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGeoLocation1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
d4082a00c2aa9725155b7c44f748e27f
  eltPlaceQuery2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "query"#) -}
eb6d1ccfa668d703eb536c63f33665da
  eltPlaceQuery3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "places"#) -}
b8b0dcd6cdd904aa8065504e195c5001
  eltPlaceType :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.PlaceType
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaceType ww6 ww7 ww8 ww2 ww3 } }) -}
39bd230905f756ae4e71c7f40e2cb670
  eltPlaceType1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlaceType2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
ced020dea6bc270c6c737b1e9e797a12
  eltPlaceType2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_type_id"#) -}
21f73e014eaa61a32d849a4b5142a8be
  eltPlaceTypeList :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe [Flickr.Types.PlaceType]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaceTypeList ww6 ww7 ww8 ww3 } }) -}
66c422a61884dc7cebe683b03a2d8fdf
  eltPlaceTypeList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_types"#) -}
e078b2e39764a72b995712e9217ac244
  eltPlaceTypeList_go :: [Text.XML.Light.Types.Element]
                         -> Data.Maybe.Maybe [Flickr.Types.PlaceType]
    {- Arity: 1, Strictness: <S,1*U> -}
e87530b9f75c1b7e39499d7cedcae8fb
  eltPlaces :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
    {- Arity: 1, Strictness: <S(S(SLL)LLL),1*U(U(U,U,U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaces ww6 ww7 ww8 ww2 ww3 } }) -}
5215edc6c89e1284fd334cb9891ae2e3
  eltPlacesList :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlacesList ww6 ww7 ww8 ww3 } }) -}
680e5cd94589eaf45c890fe686743ab4
  eltPlacesList_go :: [Text.XML.Light.Types.Element]
                      -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 1, Strictness: <S,1*U> -}
6d9a89ed71596b34bfe9f403ada46c43
  eltPlaces_go :: [Text.XML.Light.Types.Element]
                  -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 1, Strictness: <S,1*U> -}
6868b8cc347ba2f0006de77c0351ebe6
  eltPrivacy :: GHC.Base.String
                -> Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Privacy
    {- Arity: 2, Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: GHC.Base.String w1 :: Text.XML.Light.Types.Element ->
                   case w1 of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPrivacy w ww2 }) -}
3a8f160a46bbceb6bd4142d3c21a9295
  eltPrivacy1 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy2) -}
87061f7854763f9eca84fe0a858a8c8b
  eltPrivacy2 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private GHC.Types.False GHC.Types.True) -}
e66cb9c83eca3ab6d0f0db66ebf3d17f
  eltPrivacy3 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy4) -}
fb8fcacf265823e2e7345371ce8f5913
  eltPrivacy4 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private GHC.Types.True GHC.Types.False) -}
39cbdc5eb8c750bb672cf8576fd76dc8
  eltPrivacy5 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy6) -}
8d6c419b0498d41bf77d9ae4d71b821c
  eltPrivacy6 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private GHC.Types.True GHC.Types.True) -}
1d9fc6dfa9e47ac1f869bd63f918eb50
  eltPrivacy7 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy8) -}
04fdfbdca9bd15fd391f22bc540cf1ab
  eltPrivacy8 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private
                     GHC.Types.False
                     GHC.Types.False) -}
1271c58ba2f7fcdaec79d2554e4e1622
  eltPrivacy9 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Public) -}
31c77f7705f57821be66226c4c6a965f
  eltResContext :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe (Flickr.Types.ResContext a)
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ @ a1 w :: Text.XML.Light.Types.Element ->
                   case Flickr.Types.Import.$weltResContext @ a1 w of ww { (##) ww1 ->
                   Data.Maybe.Just @ (Flickr.Types.ResContext a1) ww1 }) -}
4f3e7e26cba7ad338ec67089589b654e
  eltSize :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.SizeDetails
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltSize ww6 ww7 ww8 ww2 } }) -}
15ad4e2e622fa5065874abb680aac65b
  eltSize1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltSize2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
7b7163fee9251d2c389c3a28d34b617b
  eltSize2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "source"#) -}
06d3eaeade5b13d63e9e188e7f3be6b6
  eltSize3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltSize4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
434fbba826c9c691996493aeef01bc1e
  eltSize4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "height"#) -}
9647e1888540e5cea3ce990548f72181
  eltSize5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltSize6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
18cef25066bb5a87938af6635310f6d1
  eltSize6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "width"#) -}
4f49cfc36b6c354698b22305b79ccbb8
  eltSize7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "size"#) -}
b61d60f0fcde3d24790fea7682f9cee1
  eltSizeList :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe [Flickr.Types.SizeDetails]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.SizeDetails]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.SizeDetails
                        Flickr.Types.Import.eltSize
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltSize7
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
2a0f577c5a3c9b99acf3d3d2587a00c1
  eltStringAttr :: GHC.Base.String
                   -> Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe GHC.Base.String
    {- Arity: 2, HasNoCafRefs,
       Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Unfolding: InlineRule (0, True, True) Flickr.Utils.pAttr -}
73dab109187a6cce27cea76bdfb67139
  eltSubCategory :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.SubCategory
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltSubCategory ww2 }) -}
5ddebd18e522bfc00946d22b16365962
  eltTagDetails :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.TagDetails
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltTagDetails ww2 ww3 }) -}
4fce1c2010cd58b9bfb544ccc07948bd
  eltTagDetails1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "score"#) -}
f92531938cbfaeddddc8c569d98d4cf4
  eltTagDetails2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltTagDetails3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
83705c43b7d9592a87fb3002194f2316
  eltTagDetails3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "author"#) -}
4ca5b3b097410e97a87043288ab1dfbb
  eltTagDetailsList :: Text.XML.Light.Types.Element
                       -> Data.Maybe.Maybe [Flickr.Types.TagDetails]
    {- Arity: 1, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltTagDetailsList ww3 }) -}
44c9683bb8fbd01f4a33599d79d1134d
  eltTagDetailsList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tags"#) -}
d9feea37409873dd2af2523b964719e8
  eltTagInfo :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.TagInfo
    {- Arity: 1, Strictness: <L,U(A,1*U,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case Flickr.Types.Import.$weltTagInfo w of ww { (##) ww1 ->
                   Data.Maybe.Just @ Flickr.Types.TagInfo ww1 }) -}
dff39739e064d0e45aa58d4ea13ae892
  eltTagInfoList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.TagInfo]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltTagInfoList ww6 ww7 ww8 ww3 } }) -}
03cae8ee1674c3f620b73776666bea04
  eltTagInfoList_go :: [Text.XML.Light.Types.Element]
                       -> Data.Maybe.Maybe [Flickr.Types.TagInfo]
    {- Arity: 1, Strictness: <S,1*U> -}
b943135f7ba0a0797c201371047a9ceb
  eltTicket :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.Ticket
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltTicket ww6 ww7 ww8 ww2 } }) -}
6030997cc2715bc9cfc6af4df03a2050
  eltTicket1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltTicket2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
ca1ccf5573afaa1d8bb633fdcde0beb6
  eltTicket2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "invalid"#) -}
2268334b73322f24b18cd72da5ab2fcf
  eltTicket3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoID1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
5a08b3a2528c52fbd954480c997d9125
  eltTicket4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltTicket5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
78c81588ca5413801f835f9c8825939c
  eltTicket5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "complete"#) -}
25e22ca8505ad5a58184e3b3bbb0492b
  eltTicket6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ticket"#) -}
3c2c802eaebd44f0d291d18e8e66e1a4
  eltTicketList :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe [Flickr.Types.Ticket]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.Ticket]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.Ticket
                        Flickr.Types.Import.eltTicket
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltTicket6
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
49c8f88dc0ebd014487fab1cdc475ebe
  eltURLDetails :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.URLDetails
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltURLDetails ww2 ww3 }) -}
995cecd72f82cb21a8b10682fa2e7cfb
  eltUser :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.User
    {- Arity: 1, Strictness: <S(LSLL),U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltUser ww2 ww3 }) -}
3af3f7ae229a6ef778b80492e0f67fa0
  toAuthFrob :: GHC.Base.String
                -> Flickr.Monad.ErrM Flickr.Types.AuthFrob
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.AuthFrob
                     Flickr.Types.Import.eltAuthFrob
                     s) -}
0a35072e178e2dcdbfe6bed6b12fb514
  toAuthToken :: GHC.Base.String
                 -> Flickr.Monad.ErrM Flickr.Types.AuthToken
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.AuthToken
                     Flickr.Types.Import.eltAuthToken
                     s) -}
f5284e09e843bbc86a62420854931491
  toBlogs :: GHC.Base.String -> Flickr.Monad.ErrM [Flickr.Types.Blog]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Blog]
                     Flickr.Types.Import.eltBlogsList
                     s) -}
5ee6f19a6d9bc626f5c08c56654d8069
  toBool :: GHC.Base.String
            -> GHC.Base.String
            -> Flickr.Monad.ErrM GHC.Types.Bool
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ GHC.Types.Bool
                     (Flickr.Types.Import.eltBool x)
                     s) -}
d84d548ef77f38b140ff3d116e4d601f
  toCategory :: GHC.Base.String
                -> Flickr.Monad.ErrM Flickr.Types.Category
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Category
                     Flickr.Types.Import.eltCategory
                     s) -}
0e7f1ba22c83588f75734e3d3cd77fe3
  toClusterList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.Cluster]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Cluster]
                     Flickr.Types.Import.eltClusterList
                     s) -}
6f4619e0c25859a68bd5b6f2c76ee480
  toCommentID :: GHC.Base.String
                 -> Flickr.Monad.ErrM Flickr.Types.CommentID
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (Flickr.Types.Import.toNoteID) -}
cb0a08aba25b4481e036a293f066801b
  toCommentList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.Comment]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Comment]
                     Flickr.Types.Import.eltCommentList
                     s) -}
95c500f4057a3720ffee8220be2e4eb5
  toContactList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.Contact]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Contact]
                     Flickr.Types.Import.eltContactList
                     s) -}
6cb26dbd399b4b5396e6e4cb372438ce
  toContentType :: GHC.Base.String
                   -> Flickr.Monad.ErrM Flickr.Types.ContentType
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.ContentType
                     Flickr.Types.Import.eltContentType
                     s) -}
36cc908db9fe2140d07a0fb184e07472
  toEXIFList :: GHC.Base.String
                -> Flickr.Monad.ErrM [Flickr.Types.EXIF]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.EXIF]
                     Flickr.Types.Import.eltEXIFList
                     s) -}
bd89630ecbb69f46461520f6a6eda1e5
  toGeoLocation :: GHC.Base.String
                   -> Flickr.Monad.ErrM Flickr.Types.GeoLocation
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.GeoLocation
                     Flickr.Types.Import.eltGeoLocation
                     s) -}
2c7f04cdebb4c4f748631142094b156b
  toGroup :: GHC.Base.String -> Flickr.Monad.ErrM Flickr.Types.Group
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Group
                     Flickr.Types.Import.eltGroup
                     s) -}
ed8352fb9fd593cf3e219cbea7034c3b
  toGroupList :: GHC.Base.String
                 -> Flickr.Monad.ErrM [Flickr.Types.Group]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Group]
                     Flickr.Types.Import.eltGroupList
                     s) -}
84c55cf2b7796285432e72616066e971
  toItems :: GHC.Base.String -> Flickr.Monad.ErrM [Flickr.Types.Item]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Item]
                     Flickr.Types.Import.eltItems
                     s) -}
5c99467d82d5b99bca9c8c9f1e250c52
  toLicenseList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.License]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.License]
                     Flickr.Types.Import.eltLicenseList
                     s) -}
700d6aaa48a298aa5b7f4b87a75290fa
  toLocationPlace :: GHC.Base.String
                     -> Flickr.Monad.ErrM Flickr.Types.LocationPlace
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.LocationPlace
                     Flickr.Types.Import.eltLocationPlace
                     s) -}
8b3125f7d08d33b9231de20aee522635
  toMachineTagList :: GHC.Base.String
                      -> Flickr.Monad.ErrM
                             (Flickr.Types.ResContext Flickr.Types.MachineTag,
                              [Flickr.Types.MachineTag])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                        [Flickr.Types.MachineTag])
                     Flickr.Types.Import.eltMachineTagList
                     s) -}
9de091f234f61c7cdb0563b711c46c63
  toNamespaceList :: GHC.Base.String
                     -> Flickr.Monad.ErrM
                            (Flickr.Types.NameContext, [Flickr.Types.Namespace])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.NameContext, [Flickr.Types.Namespace])
                     Flickr.Types.Import.eltNamespaceList
                     s) -}
8dc6c2f6ad2aa8d0eb6ae415ec924340
  toNoteID :: GHC.Base.String
              -> Flickr.Monad.ErrM Flickr.Types.NoteID
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.NoteID
                     Flickr.Types.Import.eltNoteID
                     s) -}
0825556087d97a91ff00b66cea6d44ee
  toPairList :: GHC.Base.String
                -> Flickr.Monad.ErrM
                       (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                        [Flickr.Types.MachineTagPair])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                        [Flickr.Types.MachineTagPair])
                     Flickr.Types.Import.eltMachinePairList
                     s) -}
af698f6c24cadb18e33753c40f47a0a2
  toPermissions :: GHC.Base.String
                   -> Flickr.Monad.ErrM Flickr.Types.Permissions
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Permissions
                     Flickr.Types.Import.eltPermissions
                     s) -}
2188afb7751002f14d74b17e65212059
  toPhotoCountList :: GHC.Base.String
                      -> Flickr.Monad.ErrM [Flickr.Types.PhotoCount]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.PhotoCount]
                     Flickr.Types.Import.eltPhotoCountList
                     s) -}
885df7bf9202c48596c54ed7d0dfd6be
  toPhotoDetails :: GHC.Base.String
                    -> Flickr.Monad.ErrM Flickr.Types.PhotoDetails
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.PhotoDetails
                     Flickr.Types.Import.eltPhotoDetails
                     s) -}
97bf924198eeedabd537bf953224f86b
  toPhotoID :: GHC.Base.String
               -> Flickr.Monad.ErrM Flickr.Types.PhotoID
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.PhotoID
                     Flickr.Types.Import.eltPhotoID
                     s) -}
35e814ac6bfec3a1de4ef5e719304676
  toPhotoList :: GHC.Base.String
                 -> Flickr.Monad.ErrM
                        (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                     Flickr.Types.Import.eltPhotoList
                     s) -}
16f81fc5c352e2bded0124d7ddf5163a
  toPhotoPair :: GHC.Base.String
                 -> Flickr.Monad.ErrM (Flickr.Types.Photo, Flickr.Types.Photo)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.Photo, Flickr.Types.Photo)
                     Flickr.Types.Import.eltPhotoPair
                     s) -}
fc5c110a9f42b1d433ed0e4958d2c8c7
  toPhotoPool :: GHC.Base.String
                 -> Flickr.Monad.ErrM Flickr.Types.PhotoPool
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.PhotoPool
                     Flickr.Types.Import.eltPhotoPool
                     s) -}
eb9b733127f8c5ca9f9f2a039c64998c
  toPhotoset :: GHC.Base.String
                -> Flickr.Monad.ErrM Flickr.Types.Photoset
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Photoset
                     Flickr.Types.Import.eltPhotoset
                     s) -}
ab1d32350c9e00186aa5292988860172
  toPlaceTypes :: GHC.Base.String
                  -> Flickr.Monad.ErrM [Flickr.Types.PlaceType]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.PlaceType]
                     Flickr.Types.Import.eltPlaceTypeList
                     s) -}
797fc6f754b1a206246c598f0a7acde6
  toPlaces :: GHC.Base.String
              -> Flickr.Monad.ErrM
                     (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                     Flickr.Types.Import.eltPlaces
                     s) -}
22be809cd817a7cb05cedb735a1a09d9
  toPlacesList :: GHC.Base.String
                  -> Flickr.Monad.ErrM [Flickr.Types.Place]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Place]
                     Flickr.Types.Import.eltPlacesList
                     s) -}
f0272be009333f46a1bb0d578043644e
  toPredList :: GHC.Base.String
                -> Flickr.Monad.ErrM
                       (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                        [Flickr.Types.MachineTagPred])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                        [Flickr.Types.MachineTagPred])
                     Flickr.Types.Import.eltMachinePredList
                     s) -}
295aa98c50e5ae693b4720edab8c9147
  toPrivacy :: GHC.Base.String
               -> GHC.Base.String
               -> Flickr.Monad.ErrM Flickr.Types.Privacy
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Privacy
                     (Flickr.Types.Import.eltPrivacy x)
                     s) -}
013111ecd6f0b7018c1f5804917e8a9e
  toSafetyLevel :: GHC.Base.String
                   -> GHC.Base.String
                   -> Flickr.Monad.ErrM GHC.Types.Int
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ GHC.Types.Int
                     (Flickr.Types.Import.eltIntAttr x)
                     s) -}
33205fe7173c80fb4fa6c5b3cd240a16
  toSizeList :: GHC.Base.String
                -> Flickr.Monad.ErrM [Flickr.Types.SizeDetails]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.SizeDetails]
                     Flickr.Types.Import.eltSizeList
                     s) -}
aab2c09e753c1088bcf09f7457bd1eac
  toString :: GHC.Base.String
              -> GHC.Base.String
              -> Flickr.Monad.ErrM GHC.Base.String
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ GHC.Base.String
                     (Flickr.Utils.pAttr x)
                     s) -}
8bcb285d8737a0d21239eb72b292e91e
  toTagDetailsList :: GHC.Base.String
                      -> Flickr.Monad.ErrM [Flickr.Types.TagDetails]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.TagDetails]
                     Flickr.Types.Import.eltTagDetailsList
                     s) -}
d7489fb7b175a72eed8dc0e46fa2ecb8
  toTagInfoList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.TagInfo]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.TagInfo]
                     Flickr.Types.Import.eltTagInfoList
                     s) -}
0d321d7ab1d6c600122bfeedf26ba679
  toTicketList :: GHC.Base.String
                  -> Flickr.Monad.ErrM [Flickr.Types.Ticket]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Ticket]
                     Flickr.Types.Import.eltTicketList
                     s) -}
26b4735e6cd2b98e26b1ca726c5e9c53
  toUser :: GHC.Base.String -> Flickr.Monad.ErrM Flickr.Types.User
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.User
                     Flickr.Types.Import.eltUser
                     s) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

