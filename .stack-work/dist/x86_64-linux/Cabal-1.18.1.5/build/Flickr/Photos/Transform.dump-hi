
==================== FINAL INTERFACE ====================
2016-03-01 11:43:09.578758 UTC

interface flickr-0.3.3:Flickr.Photos.Transform 7084
  interface hash: 1bc0e3da1dc86eadbe1164ffb3d78803
  ABI hash: 1b3e65924d58f9e9dc55001447e9418b
  export-list hash: e1b5e2392292cdafe9fd599f9742c2be
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 31ab5db797e3798aa9ee609104977efd
  used TH splices: False
  where
exports:
  Flickr.Photos.Transform.rotate
module dependencies: Codec.Percent Codec.URLEncoder Flickr.Monad
                     Flickr.Types Flickr.Utils Util.Fetch Util.Keys Util.MD5 Util.MIME
                     Util.Post
package dependencies: HTTP-4000.2.20 array-0.5.0.0 base
                      bytestring-0.10.4.0 deepseq-1.3.0.2 filepath-1.3.0.2 ghc-prim
                      integer-gmp mime-0.3.4 mtl-2.1.3.1 network-2.6.2.1
                      network-uri-2.6.0.3 old-locale-1.0.0.6 old-time-1.1.0.2
                      parsec-3.1.9 random-1.1 text-1.2.0.6 time-1.4.2
                      transformers-0.3.0.0 utf8-string-1 xml-1.3.14
orphans: base:GHC.Base base:GHC.Float base:GHC.Real
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
family instance modules: base:Control.Applicative base:Data.Either
                         base:Data.Monoid base:Data.Type.Equality base:GHC.Exts
                         base:GHC.Generics network-uri-2.6.0.3:Network.URI
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  Flickr.Monad 674fd2fea86aa2605cc91229a555ec49
  exports: d889671f2b278e4b47117b8a29fd3d51
  FM 9e0a04bb4803c174c013b2fb8be73ec0
  flickCall_ a4b037ad88ec2630c5c3c4b581c42182
  postMethod b894fdcbd5b83d21dfa037dd8bba6dcf
  withWritePerm 73ff2a63e3ab148ae336fe33c2f18317
import  -/  Flickr.Types 7f9bcf8be6aa7e347e0e2da5c74c6e45
  exports: 7c44d1c58d100ffa2b43ca34db9b517a
  Latitude e784c5d5b1eb02f473f1ca9412deacad
  PhotoID afad6d42cded8baa9088f416d88f77bf
2100a5641568a1a93b2a2e7bc2136f19
  $wrotate :: Flickr.Types.PhotoID
              -> Flickr.Types.Latitude
              -> (# Flickr.Monad.FMEnv -> GHC.Types.IO () #)
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ w :: Flickr.Types.PhotoID
                     w1 :: Flickr.Types.Latitude ->
                   case Flickr.Monad.$wflickCall_
                          Flickr.Photos.Transform.rotate3
                          (GHC.Types.:
                             @ (GHC.Base.String, GHC.Base.String)
                             (Flickr.Photos.Transform.rotate2, w)
                             (GHC.Types.:
                                @ (GHC.Base.String, GHC.Base.String)
                                (Flickr.Photos.Transform.rotate1, w1)
                                (GHC.Types.[]
                                   @ (GHC.Base.String, GHC.Base.String)))) of ww { (##) ww1 ->
                   (# \ env :: Flickr.Monad.FMEnv ->
                      ww1
                        (case env of wild1 { Flickr.Monad.FMEnv ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                         Flickr.Monad.FMEnv
                           ds1
                           GHC.Types.True
                           GHC.Types.True
                           ds4
                           ds5
                           ds6
                           ds7
                           Flickr.Monad.withWritePerm1
                           ds9
                           ds10
                           ds11 }) #) }) -}
1ae4280b3607b6c1e0d98a7a477d7ada
  rotate :: Flickr.Types.PhotoID
            -> Flickr.Types.Latitude
            -> Flickr.Monad.FM ()
    {- Arity: 2, Strictness: <L,U><L,U>m, Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: Flickr.Types.PhotoID w1 :: Flickr.Types.Latitude ->
                   case Flickr.Photos.Transform.$wrotate w w1 of ww { (##) ww1 ->
                   Flickr.Monad.FM @ () ww1 }) -}
2428193f2299afadf3cae153baefdf52
  rotate1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "degrees"#) -}
4f9cc6aa7d388b3d6a91282dcc8c8aab
  rotate2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photo_id"#) -}
db651bda9725561d96432ea6ab2d15ab
  rotate3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString#
                     "flickr.photos.transform.rotate"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

