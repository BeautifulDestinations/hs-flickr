
==================== FINAL INTERFACE ====================
2016-03-01 11:43:10.634103 UTC

interface flickr-0.3.3:Util.Authenticate 7084
  interface hash: 6c6d618683db9362adc19b182afc1dab
  ABI hash: bd12c1f790f5f7b449d8bfe2e44f1145
  export-list hash: 85278aa69175dfdf409300e15f00b59c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 36912d1d14e9038e60d425d72683248b
  used TH splices: False
  where
exports:
  Util.Authenticate.authenticateForMobile
  Util.Authenticate.authenticateForWeb
module dependencies: Codec.Percent Codec.URLEncoder Flickr.Auth
                     Flickr.Monad Flickr.Types Flickr.Types.Import Flickr.Utils
                     Util.Fetch Util.Keys Util.MD5 Util.MIME Util.Post
package dependencies: HTTP-4000.2.20 array-0.5.0.0 base
                      bytestring-0.10.4.0 deepseq-1.3.0.2 filepath-1.3.0.2 ghc-prim
                      integer-gmp mime-0.3.4 mtl-2.1.3.1 network-2.6.2.1
                      network-uri-2.6.0.3 old-locale-1.0.0.6 old-time-1.1.0.2
                      parsec-3.1.9 random-1.1 text-1.2.0.6 time-1.4.2
                      transformers-0.3.0.0 utf8-string-1 xml-1.3.14
orphans: base:GHC.Base base:GHC.Float base:GHC.Real
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
family instance modules: base:Control.Applicative base:Data.Either
                         base:Data.Monoid base:Data.Type.Equality base:GHC.Exts
                         base:GHC.Generics network-uri-2.6.0.3:Network.URI
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
import  -/  base:Data.Maybe 5034d40e23c3a7110309f188001df4ca
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  base:System.IO cadd0efb01c47ddd8f52d750739fdbdf
import  -/  Flickr.Auth 8f179abded5c7da3ddf9aa55af8ef908
  exports: 849e9e628262908c761e3f78263dda2e
  getFrob 7d50db5cba01de6f6de747db689bbdb3
  getFullToken c13018bd68ce284b0ba8e754fea318ec
  getToken 62a383798da5f1cfc1c52f4aefbc9c10
import  -/  Flickr.Monad 674fd2fea86aa2605cc91229a555ec49
  exports: d889671f2b278e4b47117b8a29fd3d51
  FM 9e0a04bb4803c174c013b2fb8be73ec0
  getAPIKey 90ed3fae60dcdb674a640979c9ca81cd
  getMobileAuthURL c8d40cfb24047e5772a512268d691c00
  liftIO 85019a12faaee5c2bad1a18226d8a82f
  mkLoginURL 91efd66d9b220f46acb61ca232122fdf
import  -/  Flickr.Types 7f9bcf8be6aa7e347e0e2da5c74c6e45
  exports: 7c44d1c58d100ffa2b43ca34db9b517a
  AuthToken a2e2a7b700cf766eb756920590f94ec0
  URLString 32f844fecb624b165352138e161a92d9
  aFrob a21827715d62bb9e13fbb90ac15e0363
import  -/  Util.Keys 1b1f09c5fabb70b5b96151f27f74c054
  exports: e966ca30ce99bf5a2da450d102bf2d61
  apiKind 69c36d1a93d3ac2f1005b58ec1328b85
a2190da6878818111d3a1bf37c078fd7
  $wa :: GHC.Base.String
         -> Data.Maybe.Maybe GHC.Base.String
         -> GHC.Prim.State# GHC.Prim.RealWorld
         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
               Data.Maybe.Maybe
                   (Flickr.Types.URLString,
                    GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken) #)
    {- Arity: 3, Strictness: <S,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     w :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case GHC.Base.eqString
                          ww
                          Util.Authenticate.authenticateForMobile4 of wild {
                     GHC.Types.False
                     -> case GHC.IO.Handle.Text.hPutStr2
                               GHC.IO.Handle.FD.stdout
                               (GHC.CString.unpackAppendCString#
                                  "Unexpected API key 'kind': "#
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     ww
                                     Util.Authenticate.authenticateForMobile3))
                               GHC.Types.True
                               w of ds1 { (#,#) ipv ipv1 ->
                        (# ipv,
                           Data.Maybe.Nothing
                             @ (Flickr.Types.URLString,
                                GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken) #) }
                     GHC.Types.True
                     -> (# w,
                           Data.Maybe.Just
                             @ (Flickr.Types.URLString,
                                GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken)
                             (case ww1 of wild1 {
                                Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                Data.Maybe.Just v -> v },
                              Flickr.Auth.getFullToken) #) }) -}
4887a6d061d6fff219f699575a0f6ecf
  $wauthenticateForWeb :: GHC.Base.String
                          -> (# Flickr.Monad.FMEnv
                                -> GHC.Types.IO
                                       (Data.Maybe.Maybe
                                            (Flickr.Types.URLString,
                                             Flickr.Monad.FM Flickr.Types.AuthToken)) #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ w :: GHC.Base.String ->
                   let {
                     lvl :: Flickr.Monad.FM
                                (Data.Maybe.Maybe
                                     (Flickr.Types.URLString,
                                      Flickr.Monad.FM Flickr.Types.AuthToken))
                     = case Flickr.Auth.getFrob of ww { Flickr.Monad.FM ww1 ->
                       Flickr.Monad.FM
                         @ (Data.Maybe.Maybe
                                (Flickr.Types.URLString, Flickr.Monad.FM Flickr.Types.AuthToken))
                         (\ env :: Flickr.Monad.FMEnv
                            s :: GHC.Prim.State# GHC.Prim.RealWorld ->
                          case (ww1 env)
                                 `cast`
                               (GHC.Types.NTCo:IO[0] <Flickr.Types.AuthFrob>_R)
                                 s of ds1 { (#,#) ipv ipv1 ->
                          (# ipv,
                             Data.Maybe.Just
                               @ (Flickr.Types.URLString, Flickr.Monad.FM Flickr.Types.AuthToken)
                               (Flickr.Monad.genLoginURL
                                  (case env of wild { Flickr.Monad.FMEnv ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                                   case ds of wild1 { Util.Keys.APIKey ds12 ds13 ds14 ds15 ->
                                   ds13 } })
                                  (case env of wild { Flickr.Monad.FMEnv ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                                   case ds of wild1 { Util.Keys.APIKey ds12 ds13 ds14 ds15 ->
                                   ds14 } })
                                  (case ipv1 of wild { Flickr.Types.AuthFrob ds2 -> ds2 })
                                  w,
                                case Flickr.Auth.$wgetToken ipv1 of ww2 { (##) ww3 ->
                                Flickr.Monad.FM @ Flickr.Types.AuthToken ww3 }) #) })
                           `cast`
                         (<Flickr.Monad.FMEnv>_R
                          ->_R Sym (GHC.Types.NTCo:IO[0]
                                        <Data.Maybe.Maybe
                                             (Flickr.Types.URLString,
                                              Flickr.Monad.FM Flickr.Types.AuthToken)>_R)) }
                   } in
                   (# (\ env :: Flickr.Monad.FMEnv
                         s :: GHC.Prim.State# GHC.Prim.RealWorld ->
                       case env of wild { Flickr.Monad.FMEnv ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                       case ds of wild1 { Util.Keys.APIKey ds11 ds12 ds13 ds14 ->
                       case GHC.Base.eqString
                              ds11
                              Util.Authenticate.authenticateForWeb2 of wild2 {
                         GHC.Types.False
                         -> case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout
                                   (GHC.CString.unpackAppendCString#
                                      "Unexpected API key 'kind': "#
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         ds11
                                         Util.Authenticate.authenticateForWeb1))
                                   GHC.Types.True
                                   s of ds15 { (#,#) ipv ipv1 ->
                            (# ipv,
                               Data.Maybe.Nothing
                                 @ (Flickr.Types.URLString,
                                    Flickr.Monad.FM Flickr.Types.AuthToken) #) }
                         GHC.Types.True
                         -> case lvl of wild3 { Flickr.Monad.FM b1 ->
                            (b1 wild)
                              `cast`
                            (GHC.Types.NTCo:IO[0]
                                 <Data.Maybe.Maybe
                                      (Flickr.Types.URLString,
                                       Flickr.Monad.FM Flickr.Types.AuthToken)>_R)
                              s } } } })
                        `cast`
                      (<Flickr.Monad.FMEnv>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Data.Maybe.Maybe
                                          (Flickr.Types.URLString,
                                           Flickr.Monad.FM Flickr.Types.AuthToken)>_R)) #)) -}
d7f000cae2f0f3b6fd3a29bff401188b
  authenticateForMobile :: GHC.Base.String
                           -> Flickr.Monad.FM
                                  (Data.Maybe.Maybe
                                       (Flickr.Types.URLString,
                                        GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken))
    {- Arity: 1, Strictness: <L,A>m,
       Unfolding: InlineRule (1, True, True)
                  (\ _perm :: GHC.Base.String ->
                   Util.Authenticate.authenticateForMobile1) -}
4281190bf79f825caf1a601f5e88a26d
  authenticateForMobile1 :: Flickr.Monad.FM
                                (Data.Maybe.Maybe
                                     (Flickr.Types.URLString,
                                      GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken))
    {- Strictness: m,
       Unfolding: (Flickr.Monad.FM
                     @ (Data.Maybe.Maybe
                            (Flickr.Types.URLString,
                             GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken))
                     Util.Authenticate.authenticateForMobile2
                       `cast`
                     (<Flickr.Monad.FMEnv>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <Data.Maybe.Maybe
                                         (Flickr.Types.URLString,
                                          GHC.Base.String
                                          -> Flickr.Monad.FM Flickr.Types.AuthToken)>_R))) -}
f14e97acb0876dfd61cde2c29e00a981
  authenticateForMobile2 :: Flickr.Monad.FMEnv
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  Data.Maybe.Maybe
                                      (Flickr.Types.URLString,
                                       GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken) #)
    {- Arity: 2,
       Strictness: <S(S(SLLL)LLLLLLLLLL),U(1*U(1*U,A,A,A),A,A,A,A,A,A,A,A,A,1*U)><L,U>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: Flickr.Monad.FMEnv
                     w1 :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case w of ww { Flickr.Monad.FMEnv ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ->
                   case ww1 of ww12 { Util.Keys.APIKey ww13 ww14 ww15 ww16 ->
                   Util.Authenticate.$wa ww13 ww11 w1 } }) -}
30e652cf29ee039f3ca2bfb6552514aa
  authenticateForMobile3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString#
                     ", expected 'mobile'."#) -}
b7d793775c3de91b248f0418d34e37bf
  authenticateForMobile4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "mobile"#) -}
f88970aff94482b4da21434a69aeb9e0
  authenticateForWeb :: GHC.Base.String
                        -> Flickr.Monad.FM
                               (Data.Maybe.Maybe
                                    (Flickr.Types.URLString,
                                     Flickr.Monad.FM Flickr.Types.AuthToken))
    {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: GHC.Base.String ->
                   case Util.Authenticate.$wauthenticateForWeb w of ww { (##) ww1 ->
                   Flickr.Monad.FM
                     @ (Data.Maybe.Maybe
                            (Flickr.Types.URLString, Flickr.Monad.FM Flickr.Types.AuthToken))
                     ww1 }) -}
dd44e43e7ab6f48a06543a472c6eb73d
  authenticateForWeb1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# ", expected 'web'."#) -}
b6bfc41624b6b5a0e6ed0ac339d53c39
  authenticateForWeb2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "web"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

