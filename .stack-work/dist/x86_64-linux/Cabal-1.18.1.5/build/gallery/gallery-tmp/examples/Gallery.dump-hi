
==================== FINAL INTERFACE ====================
2016-03-01 11:43:15.51038 UTC

interface main:Main 7084
  interface hash: 43d793a73ac8d5044a159efc06cfce90
  ABI hash: e0768555fd8a9b57b7b70961091e504a
  export-list hash: aba4cadadc778370ca02663e98847479
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ebfd3d29380abfae944b0d4e693c2d0e
  used TH splices: False
  where
exports:
  Main.main
module dependencies: Codec.Percent Codec.URLEncoder Flickr.API
                     Flickr.Auth Flickr.Monad Flickr.Photos Flickr.Types
                     Flickr.Types.Import Flickr.URLs Flickr.Utils Util.Fetch Util.Keys
                     Util.MD5 Util.MIME Util.Post
package dependencies: HTTP-4000.2.20 array-0.5.0.0 base
                      bytestring-0.10.4.0 deepseq-1.3.0.2 filepath-1.3.0.2 ghc-prim
                      integer-gmp mime-0.3.4 mtl-2.1.3.1 network-2.6.2.1
                      network-uri-2.6.0.3 old-locale-1.0.0.6 old-time-1.1.0.2
                      parsec-3.1.9 random-1.1 text-1.2.0.6 time-1.4.2
                      transformers-0.3.0.0 utf8-string-1 xhtml-3000.2.1 xml-1.3.14
orphans: base:GHC.Base base:GHC.Float base:GHC.Real
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
family instance modules: base:Control.Applicative base:Data.Either
                         base:Data.Monoid base:Data.Type.Equality base:GHC.Exts
                         base:GHC.Generics network-uri-2.6.0.3:Network.URI
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
import  -/  base:Control.Monad 483e787e07c2e49f1fb1c1b88665cb92
import  -/  base:Data.Maybe 5034d40e23c3a7110309f188001df4ca
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:GHC.IO.Handle d7d241553ad4f45053047c8dd8becd8d
import  -/  base:GHC.IO.Handle.FD d087d2d69d4ab9b9d62d5c85160d89a3
import  -/  base:GHC.IO.Handle.Text 69f1e461016fd70cdf6f3676c04d367a
import  -/  base:GHC.IO.IOMode bb3a450f895ad11f6fb52ce1a04d655a
import  -/  base:GHC.List 4cff382327e59a5787355ca0a4174450
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  base:System.Environment 0f0ffdcc2262b84e2b5f1b81d9f7fe9b
import  -/  base:System.IO cadd0efb01c47ddd8f52d750739fdbdf
import  -/  ghc-prim:GHC.Types dcba736fa3dfba12d307ab18354845d2
import  -/  Flickr.API cf047e72c7d58b05d5c7ca6ff6f44370
  exports: 522d47eb3baf3120707f67fc117efe02
import  -/  Flickr.Monad 04dcf41add9dda483c4e1216c1e4d955
  FM 91641286fd5a4035d1caa1713877af9c
  flickAPI fbbb243522aedb0d2c279bdc3658e84b
  withPageSize 8f285bfde770d5fd719eac5800c2e052
import  -/  Flickr.Photos 93f1fcbb1cee42c600add2ba8148ec74
  exports: 48860187e67d0fe40b87f9672a2894e2
  getInfo 8e45436e9bb4bc9232c3c2d520dfdca7
  getPhotoURL 55e166ff0b7455a9331b359c463edcb2
  nullSearchConstraints 7df2a11c77541b43489902a811d0527e
  s_text 01b25fcab6368e3269aae3f9c0872486
  search d587f9728c184c23cd951becb3b1bf77
import  -/  Flickr.Types 653ba19fff32ac001f790083a5a45199
  PhotoDetails afa8e7966b786b9f1577afd375bd6d0e
  PhotoSizeThumb fcf60ee75c1ba2042b4337c710f1db32
  URLString fb5221ff5748803b8672d77ed2871a7d
  photoDetailsPhoto f01056a1cc5eda99b4f586059c6c6da0
  photoId 2029adeffba43b6eecf965987a03a43a
  photoTitle efbc334cc316edd18512237d49a92405
import  -/  Flickr.URLs 844af83d698b7460670de20b8825c130
  exports: 93926ff215ffc950999226d2aaf1ea9c
  photoSourceURL 73caf59f4024fb7b422951519c4cda29
import  -/  Util.Keys fdd2df5c60ac0d1bfb99b30649a78a7f
  exports: 8d589c26582bfacee3a7fce0824169be
  apiAuthURL 5074e808d08c7106e047bb9ac5c11d52
  hsflickrAPIKey ef807000aa7a6a28f25f186e26b0ca55
import  -/  xhtml-3000.2.1:Text.XHtml 8ef664bccb410940699394539e407c22
import  -/  xhtml-3000.2.1:Text.XHtml.Extras ea5789b3ec7f41ac59d0cf1cda8ad285
import  -/  xhtml-3000.2.1:Text.XHtml.Internals bd3af6cdcf8434794d3332141b2e93d7
import  -/  xhtml-3000.2.1:Text.XHtml.Strict.Attributes 8c4a5e75853de9120ce30eb356277f50
import  -/  xhtml-3000.2.1:Text.XHtml.Strict.Elements f6c9e2a05cb8c7aa989671ee86698eca
import  -/  xhtml-3000.2.1:Text.XHtml.Transitional 89a498527659b24f02b697137b7000d7
43d39647672b68fa8ba1786d1602caaf
  $wlvl :: (GHC.Base.String -> GHC.Types.IO ())
           -> [GHC.Base.String]
           -> GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><S,1*U><L,U> -}
f4bb86b630b55b09553806d2a90ef07e
  main :: GHC.Types.IO ()
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (Main.main1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
b32558c6b227b745fe33c695e5ec9442
  main1 :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case System.Environment.getArgs1 eta of ds1 { (#,#) ipv ipv1 ->
                   case ipv1 of wild {
                     []
                     -> Main.$wlvl
                          System.IO.putStrLn1
                            `cast`
                          (<GHC.Base.String>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                          (GHC.Types.[] @ GHC.Base.String)
                          ipv
                     : ds ds2
                     -> case GHC.Base.eqString ds Main.main2 of wild1 {
                          GHC.Types.False
                          -> Main.$wlvl
                               System.IO.putStrLn1
                                 `cast`
                               (<GHC.Base.String>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                               wild
                               ipv
                          GHC.Types.True
                          -> case ds2 of wild2 {
                               []
                               -> Main.$wlvl
                                    System.IO.putStrLn1
                                      `cast`
                                    (<GHC.Base.String>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                    wild
                                    ipv
                               : x xs
                               -> case GHC.IO.Handle.FD.openFile1
                                         x
                                         GHC.IO.IOMode.WriteMode
                                         ipv of ds3 { (#,#) ipv2 ipv3 ->
                                  Main.$wlvl
                                    (\ vs :: GHC.Base.String
                                       eta1 :: GHC.Prim.State# GHC.Prim.RealWorld ->
                                     case GHC.IO.Handle.Text.hPutStr2
                                            ipv3
                                            vs
                                            GHC.Types.True
                                            eta1 of ds4 { (#,#) ipv4 ipv5 ->
                                     GHC.IO.Handle.hFlush1 ipv3 ipv4 })
                                      `cast`
                                    (<GHC.Base.String>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                    xs
                                    ipv2 } } } } }) -}
b15b8d38091c58489b00e20281c98336
  main2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "-o"#) -}
26040255ea0e7f9705e296d1f7750fff
  main3 :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   GHC.TopHandler.runMainIO1
                     @ ()
                     Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

