
==================== FINAL INTERFACE ====================
2016-03-01 11:43:33.662937 UTC

interface main:Flickr.Types.Import 7084
  interface hash: 9b6eac5e0e13cb2f2b91d96bcd6d5347
  ABI hash: 9b5e87367f5380e094973b827aa6043c
  export-list hash: 305bec7abfd17862ca1e01be2c748f5a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 776fb79f609fa3d460c31341259b1c65
  used TH splices: False
  where
exports:
  Flickr.Types.Import.eltActivity
  Flickr.Types.Import.eltAuthFrob
  Flickr.Types.Import.eltAuthToken
  Flickr.Types.Import.eltBandwidth
  Flickr.Types.Import.eltBlog
  Flickr.Types.Import.eltBlogsList
  Flickr.Types.Import.eltBool
  Flickr.Types.Import.eltCategory
  Flickr.Types.Import.eltCluster
  Flickr.Types.Import.eltClusterList
  Flickr.Types.Import.eltComment
  Flickr.Types.Import.eltCommentID
  Flickr.Types.Import.eltCommentList
  Flickr.Types.Import.eltContact
  Flickr.Types.Import.eltContactList
  Flickr.Types.Import.eltContentType
  Flickr.Types.Import.eltEXIF
  Flickr.Types.Import.eltEXIFList
  Flickr.Types.Import.eltEvent
  Flickr.Types.Import.eltFileSize
  Flickr.Types.Import.eltGeoLocation
  Flickr.Types.Import.eltGroup
  Flickr.Types.Import.eltGroupCat
  Flickr.Types.Import.eltGroupList
  Flickr.Types.Import.eltIntAttr
  Flickr.Types.Import.eltItem
  Flickr.Types.Import.eltItems
  Flickr.Types.Import.eltLicense
  Flickr.Types.Import.eltLicenseList
  Flickr.Types.Import.eltLocationPlace
  Flickr.Types.Import.eltMTPair
  Flickr.Types.Import.eltMTPred
  Flickr.Types.Import.eltMTag
  Flickr.Types.Import.eltMachinePairList
  Flickr.Types.Import.eltMachinePredList
  Flickr.Types.Import.eltMachineTagList
  Flickr.Types.Import.eltNamespace
  Flickr.Types.Import.eltNamespaceList
  Flickr.Types.Import.eltNote
  Flickr.Types.Import.eltNoteID
  Flickr.Types.Import.eltPermissions
  Flickr.Types.Import.eltPhoto
  Flickr.Types.Import.eltPhotoContext
  Flickr.Types.Import.eltPhotoCount
  Flickr.Types.Import.eltPhotoCountList
  Flickr.Types.Import.eltPhotoDate
  Flickr.Types.Import.eltPhotoDetails
  Flickr.Types.Import.eltPhotoID
  Flickr.Types.Import.eltPhotoList
  Flickr.Types.Import.eltPhotoPair
  Flickr.Types.Import.eltPhotoPool
  Flickr.Types.Import.eltPhotoset
  Flickr.Types.Import.eltPhotosetQuota
  Flickr.Types.Import.eltPlace
  Flickr.Types.Import.eltPlaceQuery
  Flickr.Types.Import.eltPlaceType
  Flickr.Types.Import.eltPlaceTypeList
  Flickr.Types.Import.eltPlaces
  Flickr.Types.Import.eltPlacesList
  Flickr.Types.Import.eltPrivacy
  Flickr.Types.Import.eltResContext
  Flickr.Types.Import.eltSize
  Flickr.Types.Import.eltSizeList
  Flickr.Types.Import.eltStringAttr
  Flickr.Types.Import.eltSubCategory
  Flickr.Types.Import.eltTagDetails
  Flickr.Types.Import.eltTagDetailsList
  Flickr.Types.Import.eltTagInfo
  Flickr.Types.Import.eltTagInfoList
  Flickr.Types.Import.eltTicket
  Flickr.Types.Import.eltTicketList
  Flickr.Types.Import.eltURLDetails
  Flickr.Types.Import.eltUser
  Flickr.Types.Import.toAuthFrob
  Flickr.Types.Import.toAuthToken
  Flickr.Types.Import.toBlogs
  Flickr.Types.Import.toBool
  Flickr.Types.Import.toCategory
  Flickr.Types.Import.toClusterList
  Flickr.Types.Import.toCommentID
  Flickr.Types.Import.toCommentList
  Flickr.Types.Import.toContactList
  Flickr.Types.Import.toContentType
  Flickr.Types.Import.toEXIFList
  Flickr.Types.Import.toGeoLocation
  Flickr.Types.Import.toGroup
  Flickr.Types.Import.toGroupList
  Flickr.Types.Import.toItems
  Flickr.Types.Import.toLicenseList
  Flickr.Types.Import.toLocationPlace
  Flickr.Types.Import.toMachineTagList
  Flickr.Types.Import.toNamespaceList
  Flickr.Types.Import.toNoteID
  Flickr.Types.Import.toPairList
  Flickr.Types.Import.toPermissions
  Flickr.Types.Import.toPhotoCountList
  Flickr.Types.Import.toPhotoDetails
  Flickr.Types.Import.toPhotoID
  Flickr.Types.Import.toPhotoList
  Flickr.Types.Import.toPhotoPair
  Flickr.Types.Import.toPhotoPool
  Flickr.Types.Import.toPhotoset
  Flickr.Types.Import.toPlaceTypes
  Flickr.Types.Import.toPlaces
  Flickr.Types.Import.toPlacesList
  Flickr.Types.Import.toPredList
  Flickr.Types.Import.toPrivacy
  Flickr.Types.Import.toSafetyLevel
  Flickr.Types.Import.toSizeList
  Flickr.Types.Import.toString
  Flickr.Types.Import.toTagDetailsList
  Flickr.Types.Import.toTagInfoList
  Flickr.Types.Import.toTicketList
  Flickr.Types.Import.toUser
module dependencies: Codec.Percent Codec.URLEncoder Flickr.Monad
                     Flickr.Types Flickr.Utils Util.Fetch Util.Keys Util.MD5 Util.MIME
                     Util.Post
package dependencies: HTTP-4000.2.20 array-0.5.0.0 base
                      bytestring-0.10.4.0 deepseq-1.3.0.2 filepath-1.3.0.2 ghc-prim
                      integer-gmp mime-0.3.4 mtl-2.1.3.1 network-2.6.2.1
                      network-uri-2.6.0.3 old-locale-1.0.0.6 old-time-1.1.0.2
                      parsec-3.1.9 random-1.1 text-1.2.0.6 time-1.4.2
                      transformers-0.3.0.0 utf8-string-1 xml-1.3.14
orphans: base:GHC.Base base:GHC.Float base:GHC.Real
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
family instance modules: base:Control.Applicative base:Data.Either
                         base:Data.Monoid base:Data.Type.Equality base:GHC.Exts
                         base:GHC.Generics network-uri-2.6.0.3:Network.URI
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
import  -/  base:Control.Monad 483e787e07c2e49f1fb1c1b88665cb92
import  -/  base:Data.Char 1ace810ea04187cd227c9ed982bb7d15
import  -/  base:Data.List 8b77870d02d66076337587b759b7ee19
import  -/  base:Data.Maybe 5034d40e23c3a7110309f188001df4ca
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:GHC.Num 5e7786970581cacc802bf850d458a30b
import  -/  base:GHC.Real 35345ccdfd774068d1f4418df87bd3c9
import  -/  base:GHC.Unicode 328b8e1d86fa0b0f8b798c018561e9b0
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  base:Text.Read 6fe10a0a6d0a38c215de3b09e72ca556
import  -/  ghc-prim:GHC.Classes 3e6cbe1e7e80480408cfa8d5450726a0
import  -/  Flickr.Monad 04dcf41add9dda483c4e1216c1e4d955
  exports: a48c768163b3524ddb6a3c7780b5d55c
  ErrM b840d4a70afa58ec304cd56820644184
  parseDoc e28a4c2828b730c0874e225cfb19a6be
import  -/  Flickr.Types 653ba19fff32ac001f790083a5a45199
  exports: 16c0f78ccd56a3138dea1b355b10ed13
  AGroup 70afcaa9a9f4c88414612c410f66d9df
  Activity 59b74a0bf8bfa876fa6b4987a3857ac8
  Activity b2e864b9f2be98cfb36cef7af7e4fb73
  AuthFrob 4765bc4bfa6f92a2d435ad48b8ebd227
  AuthFrob cb6beed6e349f8ad65dae04b689b1fe7
  AuthToken c630ccde96c3551d6cd7846fd692e11a
  AuthToken 6b85d7739d578fa12461079abcac3b8a
  Bandwidth 46e3caf7fed46485b6015a038bb35775
  Bandwidth adcc1c88e72524ddd24af6ccf7f85a94
  Blog a278495db8882a181e37b9123255c2df
  Blog 61ae52727364f03bc0d69e0dd688ec86
  Category 6e392a48dbd0995aee6e58ff7e78a41d
  Category cfa53bd26fefc9f5e31d9399478bdc38
  Cluster a5b00b77fd2b707fcf69c16a5535fd55
  Cluster 6e19872a05ee9e9ac5459dd3aeb8c738
  Comment b886d61487f90904781371d8d7a3ff02
  Comment 32ae3c1a743b56ed957ffc3976659f0e
  CommentID 907b8a1f38eaf451688ebd8d57fe9a3c
  Contact 776f40ac58bd7acf41a0a09f3e176860
  Contact 98b5f83692bdef868344f8f4e64c7110
  ContentOther a4116e00c9857d294efb870ea0ad3a2a
  ContentPhoto 1925a47fda555e9115910d0147a31b40
  ContentScreenshot 6c536fa5ab7a09f6f861e6bcf16c4c6c
  ContentType d8afa193134fe8539df154ac66cce9e6
  EXIF 4f4467aefd710f57940260b0b977357a
  EXIF 7ef767ed50a09e72470d47a945adcaae
  EXIFTag ba034803c9227b59e57a4c4bfd723a3f
  FileSize aa272fb5a26da401c22b237ca020288d
  FileSize b9a5fa1a7915be9c83fd37eda777a857
  GeoLocation 6958298ef594a3a3bdf39f31dbdd921f
  Group b7472a827cb08fbb9fc6fafe8ef2176d
  Group 92a9ba753c3aa29993a307766f07264a
  GroupCat 0a6a60be6a26761a6654b8242c48331d
  Item d61a37f9de1272911e683a1110155094
  Item 20d5cc1b0f681d07ca6b7db8406cd384
  License 3d2c647a9a614890e90f52c08f17667a
  License a4633eaeae5a6a9c98a57af402d0a029
  LocationPlace 1d68ac88afe5fbbc7b871c53c0b061be
  LocationPlace 30a9e704ba3205b080393de019a4e7ac
  MachineTag c8919c5fc5fcce0ad0e2d825adf4d20a
  MachineTag 4e6114faeb2e6daf630fd66d7cc2c68a
  MachineTagPair 03dcb8d181495a23e21ad65aabab4977
  MachineTagPair be8b2dcfa3f369eff96974e5c0f3d299
  MachineTagPred 8980e9c4034bd5b9499b172098e2c3d6
  MachineTagPred 69482098b303c848ca21f1dd9ebbe45b
  NameContext cda50c862bb15455329a5e78e3e3be15
  Namespace 935fdc88245a242eede75fe17dcce634
  Namespace 0c8837a7e79935efa2ff1fe356739ca7
  Note 2672d2f2d1b7585fce1b37bd545f2764
  Note 9aaebee4be3465df39f01557cd359b35
  NoteID 488ec0151f70b51ccdd8ec97bd3847c4
  Permissions 6de4592020f78ed9b386e31abf4b7dd6
  Permissions 20b7662580a204cbff8749752bdd4988
  Photo 96c2035d3c4d0295e037a544380503da
  Photo 9c6e2481eefe963aeaf1e66869e9c5ca
  PhotoContext d537ea36f3b6f2fe6d28f81bd25e8648
  PhotoContext 0c68f304c0a531299fec27bca2099f02
  PhotoCount 1219927c70bda7beb75e16e3b97c35bc
  PhotoCount c3cf33befcb4486f25185e6a56e481d6
  PhotoDate dd42100285d1d6f796a7c495f158fdd8
  PhotoDate 74d6c6fce59342e1af5d5f153c9e0726
  PhotoDetails 397f57a95abaa6834681cd9195bf6ad5
  PhotoDetails afa8e7966b786b9f1577afd375bd6d0e
  PhotoID 32a0762d66c6df01a08e8f2f79620151
  PhotoPool e1c62bf96225a83ce8d4379236b8ff75
  PhotoPool 04383f70c7ed4251e614d7518f135c1c
  Photoset 7e6cb7ce29abc75b5ba16a13f6868fa4
  Photoset 5644986d2f2e6781565013135e41f5b8
  PhotosetQuota 85585f2489c43101678666e44622f639
  PhotosetQuota df0de1a34bfc48e27a5d5513bfc50e62
  Place d39f2a3f8433865bd0559bc76aa2eed4
  Place 093608519896e903ad58a9f6325cfcfc
  PlaceQuery 3779a759d1a9a81afc8dd4da3c423df8
  PlaceQuery 1d2daf2d0e27d5baec2f1eb3869ecd18
  PlaceType 2b5a5ab0129119c4a71204ea958a5e86
  PlaceType 467d69ab55e41b5674b8e0d74b20d9fb
  Point 5c265f1bf494164588c0ceeccc3dcff3
  Privacy fb1252771a239a4aadb457d870d9870c
  Private e6b7b2afdcc1cea5b4cc0f0b69a5be1a
  Public 1b65d385242f9196660492eb84d12cff
  ResContext ad2103658e8029849a3c22886a91cbf1
  ResContext 83eef4be0007832bfa542e1ad992634d
  Size 6e23b8834bfab94ed45849f65f7af37f
  SizeDetails 6c3fdb72553497a405acda024ddf7232
  SizeDetails 4687d9518949bbb4fe3bedd27b5a07a1
  SubCat cd87fb480f2c21919b14d345eed197c5
  SubCategory 0950fef0a1839ecbfe7100d16f91b67d
  SubCategory ed13863fb711b108b0d9278ba80335f2
  TagDetails 40e6388e6ca57fcf60f52d49b7822b12
  TagDetails c06213cecd4840f288098914f00e86fa
  TagInfo 156fb1d67a709ca38d42a896970bbde5
  TagInfo d66f6df6d01df5cbd4fa0fe72a5475a2
  Ticket 54686edfeb14f1741ac5a513b93f3d9a
  Ticket 8bec29e32eb6a257cb074dd50f0f9a70
  URLDetails 9d53c77fdbe48b43d922367c96ae58b6
  URLDetails 5cb57f78194435db455c8bff3dc68fc4
  User 55da6a4521f5104a0ed92f1cfebb3575
  aFrob f4dde08fd4d6ed66fa61293397f26e15
  actContent 803ee3226a2587c46bff88856fdb4e59
  actDate 55d9e9d47377d9d993fb8fb5f7223e3f
  actType afdb1ded3697eead1434019e44f3d401
  actUser cf44210e02830e5d126d2ef413971055
  authPerms 21bd9e1b63042747fdeb6adf885f04da
  authToken 7ed8f9c175c7d2311cb5544959203db4
  authUser 37fdc1bed4bd53f19e193929fc60f32a
  bandWidthBytes 10db94c4811367f9f69eda1d59fe66fc
  bandWidthKB 0760b62cbb2166163d6c4de42e97658e
  bandWidthRemainingBytes 465aabff87306c6a578e7ff47389ea4c
  bandWidthRemainingKB 484fff47249224f0bbb9e50d622dfcc6
  bandWidthUsedBytes 5a04e706a42fc1520286021ba13fd5c7
  bandWidthUsedKB b2af5c6c2726d2cfc0298b3d628a1014
  blogId e0590df4e2d2a1f22b85e117d2a86543
  blogName f0f045577eae8daa2aa44343c452e26d
  blogNeedsPW c69dc496b6d7fa022a989b4b7c703200
  blogURL e465f164f8bd1034d5620dc578bdd2bb
  catId d83859ed2afa6580de372f9f5304cd82
  catName 04807b9857a4bed96ef6410b3f467423
  catPath 9f0bf93be5d3200e9dc7482860854352
  catPaths 7fd658b0ecb82e04fcc9bfdc32692993
  catSubs 876a717548cf1f4743e5d3777585c590
  clusterCount b27985f4bff07fd264a36276aa990180
  clusterTags 6a408b9451552d0346ed92e5bf966312
  commentAuthor 00ed8b54f7f194349fbe75c631dd6021
  commentDate 20137a1991b4cf9d84fdb7bd7617d25c
  commentId fd6bdfe32afe3aa2748a7d5370953eaa
  commentText 681eaeb74bc0c94974ec46b2f1ececd5
  commentURL d6e34d630fede66c2445c042b59bb412
  conIcon 337e091579f9fb1922b2c5f4c400bfeb
  conId 28b56af22324df7d94f12e2a2a19540b
  conIgnored c4c229201799a86267fec60ca1e56da5
  conIsFamily 07ebdd71112a72348a7964292ce6672a
  conIsFriend 2476bc3f4671c73a992bb80b857d6af8
  conUser 9e6f0d7eae95447ab9f979eaa230db3f
  exifClean ad1c42ccec7d7c9bca0341999fb9914b
  exifLabel 6ec7a9c9d978c749cb7dc76c814e9c79
  exifRaw 7ef6a1f4a1f053b7fc20670d3504c5b7
  exifTag 671d242ea7653ab29197bfbdc0562150
  exifTagId eca90fd9a9d6c05a3c5b59ac91db3a80
  exifTagspace 541b5f792a919652b495718380a2559a
  exifTagspaceId 8ea61d52785055d661570eeb2c287686
  fileSizeBytes 18b2012d77cddbe0388b57f20fa38d27
  fileSizeKB 48069eeb1b93ec4c0931bdfe8ff20921
  groupChatId 37f2f76164400c92e5bb2f64e82f5614
  groupId 41406a237ae2f9d3476344ea10143839
  groupInChat 367890e38e9b37f4dd9457ed7d53075b
  groupIsOnline 4c5b91efc76085c9b722882e008e791b
  groupMembers 16adae8a6ad689e436d53634a2a15be8
  groupName a0064c78ee0bc2a8cb90d6199c07ad2b
  itActivity 4e6719e1972cccd21b17d5cdb33d59e4
  itComments f650adf72a84cfb7ef03c7e8472a9660
  itId 548caca1ee47b590d82c5716f14b3e38
  itMore da10d4f642e62b3f188ff2bb80e8d129
  itOwner d7932da1a6b6291e6a9fd10148a446e6
  itPhotos a8b3f32194eb4f80c2c302cfc49c2f85
  itPrimary 1f14eb73b81cc9476cb0d410cd76c222
  itSecret 486d0b75dbd0c79bcf82da1e907f8a38
  itServer f2b69cafdd7109b770392bc519bef86e
  itTitle 96d6f6068c81a347cba72900a1e71a87
  itType ed2b32a5aa303b83776e527bd1a36e66
  itViews c9df98ff1e961eaeb59f3b78340dff7b
  licenseId b326b3f9a7f9c4e12771ce86b1062c1d
  licenseLink 2dd475c601b8d10c804eb8ce77222d9a
  licenseName 56e0760b56cdbaba77b829ccda96b0f9
  locationPlaceDesc 6f73896d17ed24f7a854a864be9fc882
  locationPlaceDetails 147aaaee2dce0c88a338e2abeae6f88f
  locationPlaceId 6f3b3ea0121c325ff85f4b239ddab53a
  locationPlaceLat 35cfbb5abc71fa9a139d45e51314165a
  locationPlaceLong 9534feac568473e828ddf6e253026d77
  locationPlaceType 84d08e4b3a58c4e823947fe938d1689f
  locationPlaceURL 10af9cc01b6377760ede1f01651b7473
  locationPlaceWOEId 722b52cf816fd800584feddc3e320530
  mTagNamespace 63fb28a82208ca1d5eaaa49e492ad585
  mTagPredicate 332feb6f3988c7e2a05649ddda3f0180
  mTagUsage d9ca6727cca7ca8ef75ccb4391a9af5f
  mTagValue bd26a5bfe6a8405e8c541c852841690e
  mtPairName 928fa90af5e50c6ce37e40860f33474f
  mtPairNamespace 16189f7c1e63004fbf4ded93b88e89cf
  mtPairPredicate d10f43e1c1614c0190020b40c41a69d0
  mtPairUsage 4427cc9d3614a7f504114d7274624db5
  mtPredName 5c4a8f56840252d578292192e849a7f6
  mtPredNamespaces 296ceaec53fda3c8ea241d19d4998d8d
  mtPredUsage 74ba0666f5c9367aa182a6b22edf51f1
  namespaceName e30964e6b2b0fa5348cd384ad1d0a613
  namespacePreds fa390f29df0895154c7153b48a345105
  namespaceUsage 2609cdb6ea875d0efe707eb31fb32bb0
  noteAuthor 65c194793e5c513d25d0c1e3c1e419ae
  noteAuthorName 028bd36f40db0cd4042d41a1a18ea722
  noteId 3534a0249d1a4772082f0cdd85bf5e0a
  notePoint 03ddab7746dbec2eef6a3b515f218361
  noteSize 691fb06f4c7ffcf4f12501cce66e1784
  noteText e5f7a679641af13d2ef861a150479e83
  nullUser 82c97d23f1bab134c26522333df25f6e
  permAddMetaLevel 5f56996b4c785c16a8a0fffb77c7c838
  permCommentLevel 09b00024fb23030f8f426588b4a58a31
  permId ae734b82808a7c6681b3e3c478eb5b0a
  permIsFamily 30d65131b6afe1b4d26dc606f37b86cf
  permIsFriend b83c32939e54937e04f53f386193975b
  permIsPublic 7a4af9ce800e05713e90837f2cacde3f
  photoCount 2246438b15743d38ce760aa33bc6efa8
  photoCountFrom 834d912a543bfaa96831c493ac55ed0e
  photoCountTo f6f9c0b6322e7b28668eb398c147559c
  photoCtxtPage b6c9a7395cf78e39c04a595809748112
  photoCtxtPages 3a51bfe5cffa12495940aedf44d0985b
  photoCtxtPerPage 52e3ea44efd71cdb15687bc111f34db0
  photoCtxtTotal 4a711d5ec4e63402b96385519c9ef4d8
  photoDateGranularity f913e69147cb15b71bb35c9ff1e58635
  photoDateLastUpdate d87b4443d2a6ab48f6eae634ef3469e5
  photoDatePosted 27bade819fbc90784fc2ca6a411137d9
  photoDateTaken 1c614a9f1264f59c76096a0d82ed3834
  photoDetailsComments 0784bd927205fecd133f5dabba8fcd7b
  photoDetailsDates 4e521f38343ce20d37de7b7512b31c1b
  photoDetailsDesc 37aa5f2cc9e1d4ffb1fb3e0c1e7674d8
  photoDetailsEdits a181cc95e553221b6e0e65b6107510b1
  photoDetailsIsFamily b39b3afb4fc8be6f5da8a2c7da2b3f47
  photoDetailsIsFavorite a59e2a4e2d6ef800c3816a1a2f51ae68
  photoDetailsIsFriend 954b4a626af74479a75ede4f1007055e
  photoDetailsIsPublic c3fc7675f34f369b6373afed38d7eb3a
  photoDetailsLicense 69653a355d3b7a883d10813301547cee
  photoDetailsNotes 24eb1cad4bfc1619fd86372b732fb5e0
  photoDetailsOrigFormat ffae91e81a2f6bfa5c29263055283b18
  photoDetailsOrigSecret 9b05bf2fe8985a380f132275bdae42a7
  photoDetailsPerms 632bc449361b13db872540c83e05cf8d
  photoDetailsPhoto f01056a1cc5eda99b4f586059c6c6da0
  photoDetailsRotation 0f8e290eb512af4ede1e09d53834a97c
  photoDetailsTags cb381625e8981cf809eda262f35c50ba
  photoDetailsTitle d9452754dee3a451d8369892b0001c89
  photoDetailsURLs 0f48945df0c98fee1f1685b1bc03ff62
  photoFamily e9e1ca9183754b36c163a643fa6b03ec
  photoFarm efd8f02c45c18f651b4685f1ea4b6a49
  photoFriend 5fd1da15260ab2e51e1d76f1d82f88a3
  photoId 2029adeffba43b6eecf965987a03a43a
  photoLicense dace4b3e4acbdf2932cb5256936ce59d
  photoOwner eeb104e9d8762b83e88c4d3ed5f055b2
  photoPoolId 143f6ec81d8f50a186f47001bec1514f
  photoPoolTitle 5727fb779bdff124a044da1de2481538
  photoPublic 7015313d0046bddf09ee7fe237d7cd55
  photoSecret abcc43e15516e70acd7708fe0873214f
  photoServer 82a9afbbdb32e46caa591f9a4666d956
  photoTitle efbc334cc316edd18512237d49a92405
  photoURL 0c6a31343ee582444da16527b5b90674
  photosetCreated 43e84815ba2c9e7133b92a7e1c01cc90
  photosetDescription aafcf13d7271f315d87a3c46a2f0e2dd
  photosetId 2ef355d7c7642c9c77ea3a2e882eae48
  photosetOwner c64e440719b1fca40205ef9006e67854
  photosetPhotos 58f323392e849a6e231b86c9434938f6
  photosetPrimaryPhoto 949440d868ba14e17ac24e5cd0ae8a92
  photosetRemaining b60222c97901e29ac376e00e03f3c263
  photosetTitle b928f4c10374a4e29e69a8c0ba432d6a
  placeDesc 7852c0947ddc17a842ee3bce631c97e4
  placeId c42b8a716f99af5e07185ed29eaf16b1
  placeLat a7335f58f95dda0e6912612971d67812
  placeLong c3531f18062392714967be8c42b3d035
  placeQuery 1ed558f93a9108e6706a89593673ef08
  placeQueryAccuracy bee22a315cc40c01bc49bbbe8fddb4b6
  placeQueryLatitude c55a298c724ea145192dd232e21d42d1
  placeQueryLongitude 59aacfa0744d332b5695b94506623ba7
  placeTotal d7c0788358735836070d70f118f16828
  placeType 00ab536b4ce7b8815b301e2498244c2f
  placeTypeId 53b0b2fc618156bbcfef16f45fa94238
  placeTypeName ad23618611eb74e3351e9c10cfbfb66e
  placeURL 3f5273050c6784f3e5bbcec8790186af
  placeWOEId 866da7ca2739186ed341a1cd21324c49
  resCtxtPage b684ee53a15b17db62cea3915b6ef58f
  resCtxtPages d411a9e7f854efc3abf1658503628c43
  resCtxtPerPage fe78e70bad3003a214fc389d28277f1b
  resCtxtTotal f1986d2f50c06297488f4a9b13932d9f
  sizeDetailsHeight 174de42f331839772346c40c51264b1e
  sizeDetailsLabel 7bb944dd4f44b5b22c74a6251359071d
  sizeDetailsSource ccf755f8fa8aa125230f35f951cff921
  sizeDetailsURL 57503585f48e2b6086e4a4e5907573a9
  sizeDetailsWidth b41ced9b2a47ef2ea563370999eabda1
  subCatId ee605a6ffbd2338324f6e69d1db91fd0
  subCount d9e57cadb9c49e9637a93fa720e5f980
  subName 061a6957adfbd75684418920d57285dd
  tagCount 05a551f740c6a9d406c2af49f1cde6ce
  tagDetailsAuthor d03ab0b74320b11bede3211fbbfda01e
  tagDetailsCount 953b767bd8659dc4263c5a40777b4c80
  tagDetailsId e6b600f1e5909bf068a1635bb72f9200
  tagDetailsName 2ec187a1e93501ee1c9ed68c604aaa66
  tagDetailsRaw 69ae7bd4cf1d5d8328201036176230c0
  tagDetailsScore 11b71512ed145e7e64f2d7c6ba8b693b
  tagName 367d6e51d45774bb04c57002d93c3d6b
  ticketComplete d4a53d008ae81db7089a867323cea7ab
  ticketId ad545baaeb71b6360d6e08ab4837f6ec
  ticketInvalid 20e82128af4ba7455d1b615de32fb9dc
  ticketPhoto a3534cf44a054697c1927aead2cfea77
  urlDetailsType d98967e77af89030f4ba05e85944095a
  urlDetailsURL 4bb79b6e56b1a5ae9a96b3cfa8e5686f
  userFullName 5c8f1dd515f48dc3642bf12398af725a
  userId 33053105e771e5797ec5e4d2aa72f067
  userIsAdmin 1f20ea2284791df12ddb0c60d91d4b5a
  userIsPro ff655510d8a8e7db866f29161b6af0cf
  userName b763428253761d053ed0642a140427ae
import  -/  Flickr.Utils 24444d569f75caf3780759e9be32db2d
  exports: 95e019bbc664423a44346d6cce4f400d
  children c268e80e0ab1c6258801d7f967cde908
  ifNamed 9070007152444924018bb1d5e226311a
  intContent f9904545b3657677e1bce61d0995318c
  nsName 2e45503d90fe9b677556140b09b662ba
  pAttr eccd37156d1416dd11f1b8a17340b992
  pLeaf d4e251fa6f379a4ce6cf5d03b17eae2f
  pNode 86bd0e20bde019f030c37273d961ca52
  pNodes 893d8809af2e1e577939b833d6fe5b3d
  readMb d365f6236598d0d67b64881137be3e6a
import  -/  xml-1.3.14:Text.XML.Light.Proc 277b74c044fa89f0db17455b56117130
import  -/  xml-1.3.14:Text.XML.Light.Types 4483de4cddeaa14654667ed2520d029e
0d0a63143dc4f8e223663ee7da3726c0
  $weltActivity :: [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe [Flickr.Types.Activity]
    {- Arity: 1, Strictness: <S,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Content] ->
                   Flickr.Types.Import.eltActivity_go
                     (Flickr.Utils.pNodes
                        Flickr.Types.Import.eltActivity1
                        (Text.XML.Light.Proc.onlyElems_go ww))) -}
1e428588a3da0004015aa45293b60ba5
  $weltAuthFrob :: GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe Flickr.Types.AuthFrob
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltAuthFrob1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.AuthFrob
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.AuthFrob
                                    (Flickr.Types.AuthFrob (Text.XML.Light.Proc.$wstrContent ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.AuthFrob }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.AuthFrob } }) -}
2c77f303dcc0c601de59bda3feafd19b
  $weltAuthToken :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe Flickr.Types.AuthToken
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltAuthToken20 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> let {
                                    es :: [Text.XML.Light.Types.Element]
                                    = Text.XML.Light.Proc.onlyElems_go ww3
                                  } in
                                  case Flickr.Utils.pNodes
                                         Flickr.Types.Import.eltAuthToken19
                                         es of wild2 {
                                    [] -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                    : a1 ds1
                                    -> case Flickr.Utils.pNodes
                                              Flickr.Types.Import.eltAuthToken18
                                              es of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                         : a2 ds2
                                         -> case Flickr.Utils.pNodes
                                                   Flickr.Types.Import.eltAuthToken17
                                                   es of wild5 {
                                              [] -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                              : a3 ds3
                                              -> case a3 of ww4 { Text.XML.Light.Types.Element ww5 ww6 ww7 ww8 ->
                                                 case Flickr.Types.Import.$weltUser
                                                        ww6
                                                        ww7 of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.AuthToken
                                                   Data.Maybe.Just x
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.AuthToken
                                                        (Flickr.Types.AuthToken
                                                           (Text.XML.Light.Proc.strContent a1)
                                                           (Data.List.words
                                                              (Text.XML.Light.Proc.strContent a2))
                                                           x) } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.AuthToken }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.AuthToken } }) -}
c2ba935447979ea4d189d9dd5345c3b3
  $weltBandwidth :: [Text.XML.Light.Types.Attr]
                    -> Data.Maybe.Maybe Flickr.Types.Bandwidth
    {- Arity: 1, Strictness: <S,U> -}
7c13b73a60aa7a179aec80a33a788f90
  $weltBlog :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> Data.Maybe.Maybe Flickr.Types.Blog
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltBlog7 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Blog
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltBlog5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltBlog3
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                              Data.Maybe.Just x2
                                              -> case Flickr.Types.Import.eltAuthToken9
                                                        x2 of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                                   Data.Maybe.Just x3
                                                   -> case GHC.List.lookup
                                                             @ Text.XML.Light.Types.QName
                                                             @ GHC.Base.String
                                                             Text.XML.Light.Types.$fEqQName
                                                             Flickr.Types.Import.eltBlog1
                                                             (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                        Data.Maybe.Nothing
                                                        -> Data.Maybe.Nothing @ Flickr.Types.Blog
                                                        Data.Maybe.Just x4
                                                        -> Data.Maybe.Just
                                                             @ Flickr.Types.Blog
                                                             (Flickr.Types.Blog
                                                                x
                                                                x1
                                                                x3
                                                                x4) } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Blog }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Blog } }) -}
b0c013ee851a70314ebaf35dfbaa9609
  $weltBlogsList :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe [Flickr.Types.Blog]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltBlogsList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Blog]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltBlogsList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltBlog7
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Blog] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Blog] } }) -}
1232e0af7223510f5c6675aba3c5992d
  $weltBool :: GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> Data.Maybe.Maybe GHC.Types.Bool
    {- Arity: 2, Strictness: <L,U><S,1*U>,
       Unfolding: (\ w :: GHC.Base.String
                     ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          (Text.XML.Light.Types.QName
                             w
                             (Data.Maybe.Nothing @ GHC.Base.String)
                             (Data.Maybe.Nothing @ GHC.Base.String))
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                     Data.Maybe.Just x -> Flickr.Types.Import.eltAuthToken9 x }) -}
873c782e2c07143f1cf462edbfac8658
  $weltCategory :: [Text.XML.Light.Types.Attr]
                   -> [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe Flickr.Types.Category
    {- Arity: 2, Strictness: <S,U><L,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltBlog5
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Category
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltCategory3
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Category
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltCategory1
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Category
                               Data.Maybe.Just x2
                               -> Data.Maybe.Just
                                    @ Flickr.Types.Category
                                    (Flickr.Types.Category
                                       x
                                       (Flickr.Utils.$wpAttr Flickr.Types.Import.eltAuthToken2 ww)
                                       x1
                                       x2
                                       (Data.Maybe.mapMaybe
                                          @ Text.XML.Light.Types.Element
                                          @ Flickr.Types.GroupCat
                                          Flickr.Types.Import.eltGroupCat
                                          (Text.XML.Light.Proc.onlyElems_go ww1))) } } }) -}
c89d344975fc7fe729f3eb064096f66e
  $weltCluster :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe Flickr.Types.Cluster
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltCluster4 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Cluster
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltCluster2
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Cluster
                                    Data.Maybe.Just x
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.Cluster
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            Data.Maybe.Just
                                              @ Flickr.Types.Cluster
                                              (Flickr.Types.Cluster
                                                 (GHC.Base.map
                                                    @ Text.XML.Light.Types.Element
                                                    @ [GHC.Types.Char]
                                                    Text.XML.Light.Proc.strContent
                                                    (Flickr.Utils.pNodes
                                                       Flickr.Types.Import.eltCluster1
                                                       (Text.XML.Light.Proc.onlyElems_go ww4)))
                                                 v) } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Cluster }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Cluster } }) -}
bf5fc0610211e245d9ee735e41174651
  $weltComment :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe Flickr.Types.Comment
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltComment5 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Comment
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Comment
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltUser ww3 ww4 of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Comment
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltComment3
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Comment
                                              Data.Maybe.Just x2
                                              -> Data.Maybe.Just
                                                   @ Flickr.Types.Comment
                                                   (Flickr.Types.Comment
                                                      x
                                                      x1
                                                      x2
                                                      (case GHC.List.lookup
                                                              @ Text.XML.Light.Types.QName
                                                              @ GHC.Base.String
                                                              Text.XML.Light.Types.$fEqQName
                                                              Flickr.Types.Import.eltComment1
                                                              (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                         Data.Maybe.Nothing
                                                         -> Flickr.Utils.$wpAttr
                                                              Flickr.Types.Import.eltBlog2
                                                              ww3
                                                         Data.Maybe.Just ipv -> wild6 })
                                                      (Text.XML.Light.Proc.$wstrContent ww4)) } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Comment }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Comment } }) -}
ef0fa8f01d09b92da08641b895912e37
  $weltContact :: [Text.XML.Light.Types.Attr]
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe Flickr.Types.Contact
    {- Arity: 2, Strictness: <S,U><L,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Contact
                     Data.Maybe.Just x
                     -> case Flickr.Types.Import.$weltUser ww ww1 of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Contact
                          Data.Maybe.Just x1
                          -> Data.Maybe.Just
                               @ Flickr.Types.Contact
                               (Flickr.Types.Contact
                                  x
                                  x1
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact7
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2 -> Flickr.Types.Import.eltAuthToken9 x2 })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact5
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2 -> Flickr.Types.Import.eltAuthToken9 x2 })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact3
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2 -> Flickr.Types.Import.eltAuthToken9 x2 })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltContact1
                                          (Flickr.Utils.pAttr_go ww) of wild2 {
                                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Bool
                                     Data.Maybe.Just x2
                                     -> Flickr.Types.Import.eltAuthToken9 x2 })) } }) -}
ff2908ff451d55622d83e9a832caeec9
  $weltContactList :: GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> [Text.XML.Light.Types.Content]
                      -> Data.Maybe.Maybe [Flickr.Types.Contact]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltContactList2 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Contact]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltContactList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltContactList1
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Contact] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Contact] } }) -}
9b3c6233e9e7c84fd02ffa9e2503fa47
  $weltContentType :: [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe Flickr.Types.ContentType
    {- Arity: 1, Strictness: <S,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltContentType4
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.ContentType
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Flickr.Types.Import.eltContentType3
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             case v of wild3 { GHC.Types.I# ds3 ->
                             case ds3 of ds4 {
                               DEFAULT -> Flickr.Types.Import.eltContentType3
                               1 -> Flickr.Types.Import.eltContentType2
                               2 -> Flickr.Types.Import.eltContentType1 } } } } }) -}
2499c2bd77a35adbe1a05ee731f3e3b8
  $weltEXIF :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.EXIF
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltEXIF12 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltEXIF10
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltEXIF8
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltEXIF7
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                              Data.Maybe.Just x2
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltEXIF5
                                                        (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.EXIF
                                                   Data.Maybe.Just x3
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.EXIF
                                                        (Flickr.Types.EXIF
                                                           (Flickr.Types.EXIFTag x2 x x1)
                                                           x3
                                                           (case Text.XML.Light.Proc.$wfindChildren
                                                                   Flickr.Types.Import.eltEXIF3
                                                                   ww4 of wild7 {
                                                              []
                                                              -> Data.Maybe.Nothing
                                                                   @ GHC.Base.String
                                                              : a1 ds1
                                                              -> Data.Maybe.Just
                                                                   @ GHC.Base.String
                                                                   (Text.XML.Light.Proc.strContent
                                                                      a1) })
                                                           (case Text.XML.Light.Proc.$wfindChildren
                                                                   Flickr.Types.Import.eltEXIF1
                                                                   ww4 of wild7 {
                                                              []
                                                              -> Data.Maybe.Nothing
                                                                   @ GHC.Base.String
                                                              : a1 ds1
                                                              -> Data.Maybe.Just
                                                                   @ GHC.Base.String
                                                                   (Text.XML.Light.Proc.strContent
                                                                      a1) })) } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.EXIF }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.EXIF } }) -}
a2a2b18bcd06652b8f76332ffcad784b
  $weltEvent :: [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Activity
    {- Arity: 2, Strictness: <S,U><L,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltEvent4
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltEvent3
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltAuthToken5
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                               Data.Maybe.Just x2
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltEvent1
                                         (Flickr.Utils.pAttr_go ww) of wild3 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Activity
                                    Data.Maybe.Just x3
                                    -> Data.Maybe.Just
                                         @ Flickr.Types.Activity
                                         (Flickr.Types.Activity
                                            x
                                            (Flickr.Types.User
                                               x2
                                               x1
                                               (Data.Maybe.Nothing @ GHC.Base.String)
                                               (Data.Maybe.Nothing @ GHC.Types.Bool)
                                               (Data.Maybe.Nothing @ GHC.Types.Bool)
                                               (Data.Maybe.Nothing @ GHC.Base.String)
                                               (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                               (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                               (Data.Maybe.Nothing @ Flickr.Types.UserPhotoStat)
                                               (GHC.Types.[] @ Text.XML.Light.Types.Attr))
                                            x3
                                            (Text.XML.Light.Proc.$wstrContent ww1)) } } } }) -}
9167057cb0ae3af88173de60dbdbff9e
  $weltFileSize :: [Text.XML.Light.Types.Attr]
                   -> Data.Maybe.Maybe Flickr.Types.FileSize
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltFileSize3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.FileSize
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ Flickr.Types.FileSize
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             Data.Maybe.Just
                               @ Flickr.Types.FileSize
                               (Flickr.Types.FileSize
                                  (case v of wild3 { GHC.Types.I# i ->
                                   GHC.Integer.Type.smallInteger i })
                                  (case GHC.List.lookup
                                          @ Text.XML.Light.Types.QName
                                          @ GHC.Base.String
                                          Text.XML.Light.Types.$fEqQName
                                          Flickr.Types.Import.eltFileSize1
                                          (Flickr.Utils.pAttr_go ww) of wild3 {
                                     Data.Maybe.Nothing
                                     -> Data.Maybe.Nothing @ GHC.Integer.Type.Integer
                                     Data.Maybe.Just x1
                                     -> case Text.ParserCombinators.ReadP.run
                                               @ GHC.Types.Int
                                               Flickr.Types.Import.eltAuthToken10
                                               x1 of wild4 {
                                          [] -> Data.Maybe.Nothing @ GHC.Integer.Type.Integer
                                          : ds3 ds4
                                          -> case ds3 of wild5 { (,) v1 ds5 ->
                                             Data.Maybe.Just
                                               @ GHC.Integer.Type.Integer
                                               (case v1 of wild6 { GHC.Types.I# i ->
                                                GHC.Integer.Type.smallInteger i }) } } })) } } }) -}
eb9aef6807a7cc7f305b75000563b74c
  $weltGeoLocation :: GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe
                             (GHC.Base.String, GHC.Base.String, Data.Maybe.Maybe GHC.Types.Int)
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltGeoLocation6 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (GHC.Base.String,
                             GHC.Base.String,
                             Data.Maybe.Maybe GHC.Types.Int)
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltGeoLocation4
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (GHC.Base.String,
                                            GHC.Base.String,
                                            Data.Maybe.Maybe GHC.Types.Int)
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltGeoLocation2
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing
                                              @ (GHC.Base.String,
                                                 GHC.Base.String,
                                                 Data.Maybe.Maybe GHC.Types.Int)
                                         Data.Maybe.Just x1
                                         -> Data.Maybe.Just
                                              @ (GHC.Base.String,
                                                 GHC.Base.String,
                                                 Data.Maybe.Maybe GHC.Types.Int)
                                              (x,
                                               x1,
                                               Flickr.Types.Import.$weltIntAttr
                                                 Flickr.Types.Import.eltGeoLocation1
                                                 ww3) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (GHC.Base.String,
                                       GHC.Base.String,
                                       Data.Maybe.Maybe GHC.Types.Int) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (GHC.Base.String,
                                  GHC.Base.String,
                                  Data.Maybe.Maybe GHC.Types.Int) } }) -}
c99ffee59367669867e6fdc46b0e930e
  $weltGroup :: GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Group
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U> -}
343f15869a934936ecdb331cb4f1baa7
  $weltGroupCat :: GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> Data.Maybe.Maybe GHC.Base.String
                   -> [Text.XML.Light.Types.Attr]
                   -> [Text.XML.Light.Types.Content]
                   -> Data.Maybe.Maybe Flickr.Types.GroupCat
    {- Arity: 5, Strictness: <S,U><L,U><L,U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   let {
                     $j :: GHC.Prim.Void# -> Data.Maybe.Maybe Flickr.Types.GroupCat
                       {- Arity: 1, Strictness: <L,A> -}
                     = \ w :: GHC.Prim.Void# ->
                       case GHC.Classes.$fOrd[]_$s$ccompare
                              ww
                              Flickr.Types.Import.eltGroupCat4 of wild {
                         DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.GroupCat
                         GHC.Types.EQ
                         -> case ww1 of wild1 {
                              Data.Maybe.Nothing
                              -> case ww2 of wild3 {
                                   Data.Maybe.Nothing
                                   -> case Flickr.Types.Import.$weltGroup
                                             ww
                                             (Data.Maybe.Nothing @ GHC.Base.String)
                                             (Data.Maybe.Nothing @ GHC.Base.String)
                                             ww3
                                             ww4 of wild2 {
                                        Data.Maybe.Nothing
                                        -> Data.Maybe.Nothing @ Flickr.Types.GroupCat
                                        Data.Maybe.Just x
                                        -> Data.Maybe.Just
                                             @ Flickr.Types.GroupCat
                                             (Flickr.Types.AGroup x) }
                                   Data.Maybe.Just a2
                                   -> Data.Maybe.Nothing @ Flickr.Types.GroupCat }
                              Data.Maybe.Just ipv
                              -> Data.Maybe.Nothing @ Flickr.Types.GroupCat } }
                   } in
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltGroupCat3 of wild {
                     DEFAULT -> $j GHC.Prim.void#
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.$weltSubCategory ww3 of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.GroupCat
                                    Data.Maybe.Just x
                                    -> Data.Maybe.Just
                                         @ Flickr.Types.GroupCat
                                         (Flickr.Types.SubCat x) }
                               Data.Maybe.Just a2 -> $j GHC.Prim.void# }
                          Data.Maybe.Just ipv -> $j GHC.Prim.void# } }) -}
04920d4471a3568fecae39d8fa146ff2
  $weltGroupList :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe [Flickr.Types.Group]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltGroupList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Group]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltGroupList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltGroupCat4
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Group] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Group] } }) -}
e9be393758ecd94abbcf07a80e55de91
  $weltIntAttr :: GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> Data.Maybe.Maybe GHC.Types.Int
    {- Arity: 2, Strictness: <L,U><S,1*U>,
       Unfolding: (\ w :: GHC.Base.String
                     ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          (Text.XML.Light.Types.QName
                             w
                             (Data.Maybe.Nothing @ GHC.Base.String)
                             (Data.Maybe.Nothing @ GHC.Base.String))
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Int
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ GHC.Types.Int
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             Data.Maybe.Just @ GHC.Types.Int v } } }) -}
27bf04d17c59789f3feb778b9ec96dfe
  $weltItem :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.Item
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,U> -}
2ed1bcf813fa47441fb0b264b33e9c6d
  $weltItems :: GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe [Flickr.Types.Item]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltItems2 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Item]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltItems_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltItems1
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Item] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Item] } }) -}
e053363f017464c7324485082f93ed48
  $weltLicense :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> Data.Maybe.Maybe Flickr.Types.License
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltLicense1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.License
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.License
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltBlog5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.License
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltBlog1
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.License
                                              Data.Maybe.Just x2
                                              -> Data.Maybe.Just
                                                   @ Flickr.Types.License
                                                   (Flickr.Types.License x x1 x2) } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.License }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.License } }) -}
01115404c20952ed289c47f68bd22697
  $weltLocationPlace :: Text.XML.Light.Types.QName
                        -> [Text.XML.Light.Types.Attr]
                        -> [Text.XML.Light.Types.Content]
                        -> Data.Maybe.Maybe Flickr.Types.LocationPlace
    {- Arity: 3, Strictness: <L,1*U(1*U,A,A)><S,U><L,U> -}
72a29429c00ef29bc2f3cbb256e959e3
  $weltMTPair :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> [Text.XML.Light.Types.Content]
                 -> Data.Maybe.Maybe Flickr.Types.MachineTagPair
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPair8 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPair
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.MachineTagPair
                                    (Flickr.Types.MachineTagPair
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair6
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                          Data.Maybe.Just v -> v })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair4
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                          Data.Maybe.Just v -> v })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPair }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPair } }) -}
49fc2aad550f2de5accc4ef0823fbde2
  $weltMTPred :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> [Text.XML.Light.Types.Content]
                 -> Data.Maybe.Maybe Flickr.Types.MachineTagPred
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPair5 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPred
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.MachineTagPred
                                    (Flickr.Types.MachineTagPred
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPred1
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPred }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.MachineTagPred } }) -}
903c265a2b4d927b7ff22c92123a58f1
  $weltMTag :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.MachineTag
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTag1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.MachineTag
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.MachineTag
                                    (Flickr.Types.MachineTag
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       (GHC.Types.[] @ GHC.Types.Char)
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.MachineTag }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.MachineTag } }) -}
47d55fe13991a6ff66361ff52c1aae1c
  $weltMachinePairList :: GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> [Text.XML.Light.Types.Attr]
                          -> [Text.XML.Light.Types.Content]
                          -> Data.Maybe.Maybe
                                 (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                  [Flickr.Types.MachineTagPair])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMachinePairList5 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                             [Flickr.Types.MachineTagPair])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltMachinePairList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTPair8
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                            [Flickr.Types.MachineTagPair])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.MachineTagPair
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltMachinePairList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                            [Flickr.Types.MachineTagPair])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                       [Flickr.Types.MachineTagPair]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                  [Flickr.Types.MachineTagPair]) } }) -}
e255c2f631e47917d882c48dea97f83a
  $weltMachinePredList :: GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> Data.Maybe.Maybe GHC.Base.String
                          -> [Text.XML.Light.Types.Attr]
                          -> [Text.XML.Light.Types.Content]
                          -> Data.Maybe.Maybe
                                 (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                  [Flickr.Types.MachineTagPred])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMachinePredList2 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                             [Flickr.Types.MachineTagPred])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltMachinePredList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTPair5
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                            [Flickr.Types.MachineTagPred])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.MachineTagPred
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltMachinePredList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                            [Flickr.Types.MachineTagPred])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                       [Flickr.Types.MachineTagPred]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                  [Flickr.Types.MachineTagPred]) } }) -}
75ac1e43efcbe1f462f92b8f75c2db09
  $weltMachineTagList :: GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> [Text.XML.Light.Types.Attr]
                         -> [Text.XML.Light.Types.Content]
                         -> Data.Maybe.Maybe
                                (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                 [Flickr.Types.MachineTag])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMachineTagList2 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                             [Flickr.Types.MachineTag])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltMachineTagList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTag1
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                            [Flickr.Types.MachineTag])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.MachineTag
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltMachineTagList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                            [Flickr.Types.MachineTag])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                       [Flickr.Types.MachineTag]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                                  [Flickr.Types.MachineTag]) } }) -}
3b57b07845a7139851244fdd036fa0c3
  $weltNamespace :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Attr]
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe Flickr.Types.Namespace
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPair7 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Namespace
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.Namespace
                                    (Flickr.Types.Namespace
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltMTPair2
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltNamespace1
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> Flickr.Types.Import.eltMTPair1
                                          Data.Maybe.Just x
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x of wild4 {
                                               [] -> Flickr.Types.Import.eltMTPair1
                                               : ds ds1
                                               -> case ds of wild5 { (,) v ds2 ->
                                                  case v of wild6 { GHC.Types.I# i ->
                                                  GHC.Integer.Type.smallInteger i } } } })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Namespace }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Namespace } }) -}
79951f71d3acde9844effe5bb80a1b7c
  $weltNamespaceList :: GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> [Text.XML.Light.Types.Attr]
                        -> [Text.XML.Light.Types.Content]
                        -> Data.Maybe.Maybe
                               (Flickr.Types.ResContext Flickr.Types.Namespace,
                                [Flickr.Types.Namespace])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltMTPred2 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                             [Flickr.Types.Namespace])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltNamespaceList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltMTPair7
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                            [Flickr.Types.Namespace])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltResContext
                                              @ Flickr.Types.Namespace
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltNamespaceList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                            [Flickr.Types.Namespace])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                       [Flickr.Types.Namespace]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.ResContext Flickr.Types.Namespace,
                                  [Flickr.Types.Namespace]) } }) -}
c6e7aad0092e4b15c6fba45edd8a817e
  $weltNote :: [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.Note
    {- Arity: 2, Strictness: <S,U><L,1*U> -}
01e7bfb4aa70cb9903aa28a31f05c72f
  $weltPermissions :: [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe Flickr.Types.Permissions
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPermissions9
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                          Data.Maybe.Just x1
                          -> case Flickr.Types.Import.eltAuthToken9 x1 of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                               Data.Maybe.Just x2
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltPermissions7
                                         (Flickr.Utils.pAttr_go ww) of wild3 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                    Data.Maybe.Just x3
                                    -> case Flickr.Types.Import.eltAuthToken9 x3 of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                         Data.Maybe.Just x4
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltPermissions5
                                                   (Flickr.Utils.pAttr_go ww) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                              Data.Maybe.Just x5
                                              -> case Flickr.Types.Import.eltAuthToken9
                                                        x5 of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Permissions
                                                   Data.Maybe.Just x6
                                                   -> case GHC.List.lookup
                                                             @ Text.XML.Light.Types.QName
                                                             @ GHC.Base.String
                                                             Text.XML.Light.Types.$fEqQName
                                                             Flickr.Types.Import.eltPermissions3
                                                             (Flickr.Utils.pAttr_go ww) of wild7 {
                                                        Data.Maybe.Nothing
                                                        -> Data.Maybe.Nothing
                                                             @ Flickr.Types.Permissions
                                                        Data.Maybe.Just x7
                                                        -> case Text.ParserCombinators.ReadP.run
                                                                  @ GHC.Types.Int
                                                                  Flickr.Types.Import.eltAuthToken10
                                                                  x7 of wild8 {
                                                             []
                                                             -> Data.Maybe.Nothing
                                                                  @ Flickr.Types.Permissions
                                                             : ds ds1
                                                             -> case ds of wild9 { (,) v ds2 ->
                                                                case GHC.List.lookup
                                                                       @ Text.XML.Light.Types.QName
                                                                       @ GHC.Base.String
                                                                       Text.XML.Light.Types.$fEqQName
                                                                       Flickr.Types.Import.eltPermissions1
                                                                       (Flickr.Utils.pAttr_go
                                                                          ww) of wild10 {
                                                                  Data.Maybe.Nothing
                                                                  -> Data.Maybe.Nothing
                                                                       @ Flickr.Types.Permissions
                                                                  Data.Maybe.Just x8
                                                                  -> case Text.ParserCombinators.ReadP.run
                                                                            @ GHC.Types.Int
                                                                            Flickr.Types.Import.eltAuthToken10
                                                                            x8 of wild11 {
                                                                       []
                                                                       -> Data.Maybe.Nothing
                                                                            @ Flickr.Types.Permissions
                                                                       : ds3 ds4
                                                                       -> case ds3 of wild12 { (,) v1 ds5 ->
                                                                          Data.Maybe.Just
                                                                            @ Flickr.Types.Permissions
                                                                            (Flickr.Types.Permissions
                                                                               x
                                                                               x2
                                                                               x6
                                                                               x4
                                                                               v
                                                                               v1) } } } } } } } } } } } } }) -}
f52c19dca310fcc56617ec81be5fd40f
  $weltPhoto :: [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Photo
    {- Arity: 2, Strictness: <S,U><L,1*U> -}
a9ae0fec329766e24165659e9049955d
  $weltPhotoContext :: Text.XML.Light.Types.Element
                       -> (# Flickr.Types.PhotoContext #)
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>,
       Unfolding: (\ w :: Text.XML.Light.Types.Element ->
                   (# Flickr.Types.PhotoContext
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList4
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList3
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList2
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltCluster3
                           w) #)) -}
27ab92c73e7fdd2f1bb3168d0343148c
  $weltPhotoCount :: GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> [Text.XML.Light.Types.Attr]
                     -> Data.Maybe.Maybe Flickr.Types.PhotoCount
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoCount5 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltGroupCat1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                    Data.Maybe.Just x
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltPhotoCount3
                                                   (Flickr.Utils.pAttr_go ww3) of wild6 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                              Data.Maybe.Just x1
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltPhotoCount1
                                                        (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount
                                                   Data.Maybe.Just x2
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.PhotoCount
                                                        (Flickr.Types.PhotoCount v x1 x2) } } } } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.PhotoCount } }) -}
b7416eff779c13e85d1f1e5a489572d6
  $weltPhotoCountList :: GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> Data.Maybe.Maybe GHC.Base.String
                         -> [Text.XML.Light.Types.Content]
                         -> Data.Maybe.Maybe [Flickr.Types.PhotoCount]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoCountList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.PhotoCount]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ [Flickr.Types.PhotoCount]
                                    (Data.Maybe.mapMaybe
                                       @ Text.XML.Light.Types.Element
                                       @ Flickr.Types.PhotoCount
                                       Flickr.Types.Import.eltPhotoCount
                                       (Flickr.Utils.pNodes
                                          Flickr.Types.Import.eltPhotoCount5
                                          (Text.XML.Light.Proc.onlyElems_go ww3)))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ [Flickr.Types.PhotoCount] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.PhotoCount] } }) -}
6e8c62e3cb2442acdf4569383e7ac83a
  $weltPhotoDate :: [Text.XML.Light.Types.Attr]
                    -> Data.Maybe.Maybe Flickr.Types.PhotoDate
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltPhotoDate6
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoDate
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPhotoDate4
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoDate
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltPhotoDate2
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoDate
                               Data.Maybe.Just x2
                               -> Data.Maybe.Just
                                    @ Flickr.Types.PhotoDate
                                    (Flickr.Types.PhotoDate
                                       x
                                       x1
                                       x2
                                       (Flickr.Types.Import.$weltIntAttr
                                          Flickr.Types.Import.eltPhotoDate1
                                          ww)) } } }) -}
062b35f1d0e2cdbb860fa071dbbf003f
  $weltPhotoDetails :: [Text.XML.Light.Types.Attr]
                       -> [Text.XML.Light.Types.Content]
                       -> Data.Maybe.Maybe Flickr.Types.PhotoDetails
    {- Arity: 2, Strictness: <S,U><L,U> -}
0e4df9b02cce44e199a18a1fc29fc753
  $weltPhotoID :: GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> Data.Maybe.Maybe GHC.Base.String
                  -> [Text.XML.Light.Types.Content]
                  -> Data.Maybe.Maybe GHC.Base.String
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoID1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ GHC.Base.String
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ GHC.Base.String
                                    (Text.XML.Light.Proc.$wstrContent ww3)
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ GHC.Base.String }
                          Data.Maybe.Just ipv -> Data.Maybe.Nothing @ GHC.Base.String } }) -}
1d2bf4fc596627d52a8668fa38a4ff0b
  $weltPhotoList :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Attr]
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe
                           (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPhotoList3 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.eltPhotoList_go
                                         (Flickr.Utils.pNodes
                                            Flickr.Types.Import.eltPhotoList2
                                            (Text.XML.Light.Proc.onlyElems_go ww4)) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.$weltPhotoContext
                                              (Text.XML.Light.Types.Element
                                                 (Text.XML.Light.Types.QName
                                                    ww
                                                    (Data.Maybe.Nothing @ GHC.Base.String)
                                                    (Data.Maybe.Nothing @ GHC.Base.String))
                                                 ww3
                                                 ww4
                                                 Flickr.Types.Import.eltPhotoList1) of ww5 { (##) ww6 ->
                                       Data.Maybe.Just
                                         @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                                         (ww6, x) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo]) } }) -}
fdcfaca21456dae554a9d59accaf92ce
  $weltPhotoPair :: [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe (Flickr.Types.Photo, Flickr.Types.Photo)
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Content] ->
                   case Text.XML.Light.Proc.$wfindChildren
                          Flickr.Types.Import.eltPhotoPair3
                          ww of wild {
                     [] -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                     : a1 ds1
                     -> case a1 of ww1 { Text.XML.Light.Types.Element ww2 ww3 ww4 ww5 ->
                        case Flickr.Types.Import.$weltPhoto ww3 ww4 of wild1 {
                          Data.Maybe.Nothing
                          -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                          Data.Maybe.Just x
                          -> case Text.XML.Light.Proc.$wfindChildren
                                    Flickr.Types.Import.eltPhotoPair1
                                    ww of wild2 {
                               [] -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                               : a2 ds2
                               -> case a2 of ww6 { Text.XML.Light.Types.Element ww7 ww8 ww9 ww10 ->
                                  case Flickr.Types.Import.$weltPhoto ww8 ww9 of wild3 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ (Flickr.Types.Photo, Flickr.Types.Photo)
                                    Data.Maybe.Just x1
                                    -> Data.Maybe.Just
                                         @ (Flickr.Types.Photo, Flickr.Types.Photo)
                                         (x, x1) } } } } } }) -}
5482c6ddfb3cb76342bc227fd7c8e20e
  $weltPhotoPool :: [Text.XML.Light.Types.Attr]
                    -> Data.Maybe.Maybe Flickr.Types.PhotoPool
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoPool
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPhotoPool1
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.PhotoPool
                          Data.Maybe.Just x1
                          -> Data.Maybe.Just
                               @ Flickr.Types.PhotoPool
                               (Flickr.Types.PhotoPool x x1) } }) -}
c41be9d7237532841a887b7918b59b78
  $weltPhotoset :: [Text.XML.Light.Types.Attr]
                   -> Data.Maybe.Maybe Flickr.Types.Photoset
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltPhotoset6
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltPhotoset4
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                               Data.Maybe.Just x2
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltPhotoset3
                                         (Flickr.Utils.pAttr_go ww) of wild3 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                    Data.Maybe.Just x3
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x3 of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltPhotoPool1
                                                   (Flickr.Utils.pAttr_go ww) of wild6 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                              Data.Maybe.Just x4
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltPhotoset1
                                                        (Flickr.Utils.pAttr_go ww) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Photoset
                                                   Data.Maybe.Just x5
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.Photoset
                                                        (Flickr.Types.Photoset
                                                           x
                                                           x1
                                                           x2
                                                           v
                                                           x4
                                                           x5) } } } } } } } }) -}
e02016a1093c788055b45990ccbcfa1c
  $weltPhotosetQuota :: [Text.XML.Light.Types.Attr]
                        -> Data.Maybe.Maybe Flickr.Types.PhotosetQuota
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltPhotosetQuota3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing
                     -> Data.Maybe.Nothing @ Flickr.Types.PhotosetQuota
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ Flickr.Types.PhotosetQuota
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltPhotosetQuota2
                                    (Flickr.Utils.pAttr_go ww) of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Nothing @ Flickr.Types.PhotosetQuota
                               Data.Maybe.Just x1
                               -> Data.Maybe.Just
                                    @ Flickr.Types.PhotosetQuota
                                    (Flickr.Types.PhotosetQuota
                                       (case v of wild4 { GHC.Types.I# i ->
                                        GHC.Integer.Type.smallInteger i })
                                       (case GHC.Base.eqString
                                               x1
                                               Flickr.Types.Import.eltPhotosetQuota1 of wild4 {
                                          GHC.Types.False
                                          -> case Text.ParserCombinators.ReadP.run
                                                    @ GHC.Types.Int
                                                    Flickr.Types.Import.eltAuthToken10
                                                    x1 of wild5 {
                                               [] -> Data.Maybe.Nothing @ GHC.Types.Int
                                               : ds3 ds4
                                               -> case ds3 of wild6 { (,) v1 ds5 ->
                                                  Data.Maybe.Just @ GHC.Types.Int v1 } }
                                          GHC.Types.True
                                          -> Data.Maybe.Nothing @ GHC.Types.Int })) } } } }) -}
8db9b680fa9c161cbd59af0155ec5756
  $weltPlace :: GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> Data.Maybe.Maybe GHC.Base.String
                -> [Text.XML.Light.Types.Attr]
                -> [Text.XML.Light.Types.Content]
                -> Data.Maybe.Maybe Flickr.Types.Place
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlace9 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Place
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltPlace7
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Place
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltPlace5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Place
                                         Data.Maybe.Just x1
                                         -> case GHC.List.lookup
                                                   @ Text.XML.Light.Types.QName
                                                   @ GHC.Base.String
                                                   Text.XML.Light.Types.$fEqQName
                                                   Flickr.Types.Import.eltGeoLocation4
                                                   (Flickr.Utils.pAttr_go ww3) of wild5 {
                                              Data.Maybe.Nothing
                                              -> Data.Maybe.Nothing @ Flickr.Types.Place
                                              Data.Maybe.Just x2
                                              -> case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltGeoLocation2
                                                        (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Place
                                                   Data.Maybe.Just x3
                                                   -> case GHC.List.lookup
                                                             @ Text.XML.Light.Types.QName
                                                             @ GHC.Base.String
                                                             Text.XML.Light.Types.$fEqQName
                                                             Flickr.Types.Import.eltPlace3
                                                             (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                        Data.Maybe.Nothing
                                                        -> Data.Maybe.Nothing @ Flickr.Types.Place
                                                        Data.Maybe.Just x4
                                                        -> case GHC.List.lookup
                                                                  @ Text.XML.Light.Types.QName
                                                                  @ GHC.Base.String
                                                                  Text.XML.Light.Types.$fEqQName
                                                                  Flickr.Types.Import.eltPlace1
                                                                  (Flickr.Utils.pAttr_go
                                                                     ww3) of wild8 {
                                                             Data.Maybe.Nothing
                                                             -> Data.Maybe.Nothing
                                                                  @ Flickr.Types.Place
                                                             Data.Maybe.Just x5
                                                             -> Data.Maybe.Just
                                                                  @ Flickr.Types.Place
                                                                  (Flickr.Types.Place
                                                                     x
                                                                     x1
                                                                     x2
                                                                     x3
                                                                     x4
                                                                     x5
                                                                     (Text.XML.Light.Proc.$wstrContent
                                                                        ww4)) } } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Place }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Place } }) -}
b9834a3aac7fcb6d92c6c10396611c5c
  $weltPlaceQuery :: GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> [Text.XML.Light.Types.Attr]
                     -> Data.Maybe.Maybe Flickr.Types.PlaceQuery
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceQuery3 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltCluster2
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery
                                    Data.Maybe.Just x
                                    -> case Text.ParserCombinators.ReadP.run
                                              @ GHC.Types.Int
                                              Flickr.Types.Import.eltAuthToken10
                                              x of wild4 {
                                         [] -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery
                                         : ds ds1
                                         -> case ds of wild5 { (,) v ds2 ->
                                            Data.Maybe.Just
                                              @ Flickr.Types.PlaceQuery
                                              (Flickr.Types.PlaceQuery
                                                 (Flickr.Utils.$wpAttr
                                                    Flickr.Types.Import.eltPlaceQuery2
                                                    ww3)
                                                 (Flickr.Utils.$wpAttr
                                                    Flickr.Types.Import.eltGeoLocation5
                                                    ww3)
                                                 (Flickr.Utils.$wpAttr
                                                    Flickr.Types.Import.eltGeoLocation3
                                                    ww3)
                                                 (case GHC.List.lookup
                                                         @ Text.XML.Light.Types.QName
                                                         @ GHC.Base.String
                                                         Text.XML.Light.Types.$fEqQName
                                                         Flickr.Types.Import.eltPlaceQuery1
                                                         (Flickr.Utils.pAttr_go ww3) of wild6 {
                                                    Data.Maybe.Nothing
                                                    -> Data.Maybe.Nothing @ Flickr.Types.Accuracy
                                                    Data.Maybe.Just x1
                                                    -> case Text.ParserCombinators.ReadP.run
                                                              @ GHC.Types.Int
                                                              Flickr.Types.Import.eltAuthToken10
                                                              x1 of wild7 {
                                                         []
                                                         -> Data.Maybe.Nothing
                                                              @ Flickr.Types.Accuracy
                                                         : ds3 ds4
                                                         -> case ds3 of wild8 { (,) v1 ds5 ->
                                                            Data.Maybe.Just
                                                              @ Flickr.Types.Accuracy
                                                              v1 } } })
                                                 v) } } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.PlaceQuery } }) -}
5c62c38c681994d0f49588f1e9603eb1
  $weltPlaceType :: GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> Data.Maybe.Maybe GHC.Base.String
                    -> [Text.XML.Light.Types.Attr]
                    -> [Text.XML.Light.Types.Content]
                    -> Data.Maybe.Maybe Flickr.Types.PlaceType
    {- Arity: 5, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlace2 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.PlaceType
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Data.Maybe.Just
                                    @ Flickr.Types.PlaceType
                                    (Flickr.Types.PlaceType
                                       (case GHC.List.lookup
                                               @ Text.XML.Light.Types.QName
                                               @ GHC.Base.String
                                               Text.XML.Light.Types.$fEqQName
                                               Flickr.Types.Import.eltPlaceType1
                                               (Flickr.Utils.pAttr_go ww3) of wild2 {
                                          Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                          Data.Maybe.Just v -> v })
                                       (Text.XML.Light.Proc.$wstrContent ww4))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.PlaceType }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.PlaceType } }) -}
bec165ef83bb46c4b2f909054250111e
  $weltPlaceTypeList :: GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> Data.Maybe.Maybe GHC.Base.String
                        -> [Text.XML.Light.Types.Content]
                        -> Data.Maybe.Maybe [Flickr.Types.PlaceType]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceTypeList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.PlaceType]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltPlaceTypeList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltPlace2
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ [Flickr.Types.PlaceType] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.PlaceType] } }) -}
77b0c83f56f97f2316521a8a6b1cb244
  $weltPlaces :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> [Text.XML.Light.Types.Content]
                 -> Data.Maybe.Maybe (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
    {- Arity: 5, Strictness: <S,U><L,U><L,U><L,U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr]
                     ww4 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceQuery3 of wild {
                     DEFAULT
                     -> Data.Maybe.Nothing
                          @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case Flickr.Types.Import.$weltPlaceQuery
                                         ww
                                         (Data.Maybe.Nothing @ GHC.Base.String)
                                         (Data.Maybe.Nothing @ GHC.Base.String)
                                         ww3 of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing
                                         @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                                    Data.Maybe.Just x
                                    -> case Flickr.Types.Import.eltPlaces_go
                                              (Flickr.Utils.pNodes
                                                 Flickr.Types.Import.eltPlace9
                                                 (Text.XML.Light.Proc.onlyElems_go ww4)) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing
                                              @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                                         Data.Maybe.Just x1
                                         -> Data.Maybe.Just
                                              @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                                              (x, x1) } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing
                                    @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place]) }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing
                               @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place]) } }) -}
f290e256c397220cb8f8a8e1b070daf8
  $weltPlacesList :: GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> Data.Maybe.Maybe GHC.Base.String
                     -> [Text.XML.Light.Types.Content]
                     -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltPlaceQuery3 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.Place]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltPlacesList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltPlace9
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.Place] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.Place] } }) -}
26c168e3b86afcf12e7dcb36a9bec859
  $weltPrivacy :: GHC.Base.String
                  -> [Text.XML.Light.Types.Attr]
                  -> Data.Maybe.Maybe Flickr.Types.Privacy
    {- Arity: 2, Strictness: <L,U><S,1*U>,
       Unfolding: (\ w :: GHC.Base.String
                     ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          (Text.XML.Light.Types.QName
                             w
                             (Data.Maybe.Nothing @ GHC.Base.String)
                             (Data.Maybe.Nothing @ GHC.Base.String))
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Privacy
                     Data.Maybe.Just x
                     -> case Text.ParserCombinators.ReadP.run
                               @ GHC.Types.Int
                               Flickr.Types.Import.eltAuthToken10
                               x of wild1 {
                          [] -> Data.Maybe.Nothing @ Flickr.Types.Privacy
                          : ds ds1
                          -> case ds of wild2 { (,) v ds2 ->
                             case v of wild3 { GHC.Types.I# ds3 ->
                             case ds3 of ds4 {
                               DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Privacy
                               0 -> Flickr.Types.Import.eltPrivacy9
                               1 -> Flickr.Types.Import.eltPrivacy9
                               2 -> Flickr.Types.Import.eltPrivacy7
                               3 -> Flickr.Types.Import.eltPrivacy5
                               4 -> Flickr.Types.Import.eltPrivacy3
                               5 -> Flickr.Types.Import.eltPrivacy1
                               6 -> Flickr.Types.Import.eltPrivacy1 } } } } }) -}
3238f912e19b2f77100b31e547a517ff
  $weltResContext :: Text.XML.Light.Types.Element
                     -> (# Flickr.Types.ResContext a #)
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>,
       Unfolding: (\ @ a1 w :: Text.XML.Light.Types.Element ->
                   (# Flickr.Types.ResContext
                        @ a1
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList4
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList3
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltMachinePairList2
                           w)
                        (Flickr.Types.Import.eltIntAttr
                           Flickr.Types.Import.eltCluster3
                           w) #)) -}
bd8c823731b9bbe4926ae50e3caf65ef
  $weltSize :: GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> Data.Maybe.Maybe GHC.Base.String
               -> [Text.XML.Light.Types.Attr]
               -> Data.Maybe.Maybe Flickr.Types.SizeDetails
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltSize7 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltEXIF5
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing
                                    -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltSize5
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                         Data.Maybe.Just x1
                                         -> case Text.ParserCombinators.ReadP.run
                                                   @ GHC.Types.Int
                                                   Flickr.Types.Import.eltAuthToken10
                                                   x1 of wild5 {
                                              [] -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                              : ds ds1
                                              -> case ds of wild6 { (,) v ds2 ->
                                                 case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltSize3
                                                        (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails
                                                   Data.Maybe.Just x2
                                                   -> case Text.ParserCombinators.ReadP.run
                                                             @ GHC.Types.Int
                                                             Flickr.Types.Import.eltAuthToken10
                                                             x2 of wild8 {
                                                        []
                                                        -> Data.Maybe.Nothing
                                                             @ Flickr.Types.SizeDetails
                                                        : ds3 ds4
                                                        -> case ds3 of wild9 { (,) v1 ds5 ->
                                                           case GHC.List.lookup
                                                                  @ Text.XML.Light.Types.QName
                                                                  @ GHC.Base.String
                                                                  Text.XML.Light.Types.$fEqQName
                                                                  Flickr.Types.Import.eltSize1
                                                                  (Flickr.Utils.pAttr_go
                                                                     ww3) of wild10 {
                                                             Data.Maybe.Nothing
                                                             -> Data.Maybe.Nothing
                                                                  @ Flickr.Types.SizeDetails
                                                             Data.Maybe.Just x3
                                                             -> case GHC.List.lookup
                                                                       @ Text.XML.Light.Types.QName
                                                                       @ GHC.Base.String
                                                                       Text.XML.Light.Types.$fEqQName
                                                                       Flickr.Types.Import.eltBlog1
                                                                       (Flickr.Utils.pAttr_go
                                                                          ww3) of wild11 {
                                                                  Data.Maybe.Nothing
                                                                  -> Data.Maybe.Nothing
                                                                       @ Flickr.Types.SizeDetails
                                                                  Data.Maybe.Just x4
                                                                  -> Data.Maybe.Just
                                                                       @ Flickr.Types.SizeDetails
                                                                       (Flickr.Types.SizeDetails
                                                                          x
                                                                          v
                                                                          v1
                                                                          x3
                                                                          x4) } } } } } } } } }
                               Data.Maybe.Just a2
                               -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.SizeDetails } }) -}
bb184e8ea5461da3db2656498a3db32e
  $weltSubCategory :: [Text.XML.Light.Types.Attr]
                      -> Data.Maybe.Maybe Flickr.Types.SubCategory
    {- Arity: 1, Strictness: <S,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltBlog5
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                          Data.Maybe.Just x1
                          -> case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltGroupCat1
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                               Data.Maybe.Just x2
                               -> case Text.ParserCombinators.ReadP.run
                                         @ GHC.Types.Int
                                         Flickr.Types.Import.eltAuthToken10
                                         x2 of wild3 {
                                    [] -> Data.Maybe.Nothing @ Flickr.Types.SubCategory
                                    : ds ds1
                                    -> case ds of wild4 { (,) v ds2 ->
                                       Data.Maybe.Just
                                         @ Flickr.Types.SubCategory
                                         (Flickr.Types.SubCategory
                                            x
                                            x1
                                            (case v of wild5 { GHC.Types.I# i ->
                                             GHC.Integer.Type.smallInteger i })) } } } } }) -}
d4f873d2664bfbf3eacc387fd5ff5b51
  $weltTagDetails :: [Text.XML.Light.Types.Attr]
                     -> [Text.XML.Light.Types.Content]
                     -> Data.Maybe.Maybe Flickr.Types.TagDetails
    {- Arity: 2, Strictness: <S,U><L,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken1
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.TagDetails
                     Data.Maybe.Just x
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltTagDetails2
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.TagDetails
                          Data.Maybe.Just x1
                          -> let {
                               $j :: [GHC.Base.String] -> Data.Maybe.Maybe Flickr.Types.TagDetails
                                 {- Arity: 1, Strictness: <L,U> -}
                               = \ x2 :: [GHC.Base.String] ->
                                 Data.Maybe.Just
                                   @ Flickr.Types.TagDetails
                                   (Flickr.Types.TagDetails
                                      x
                                      x1
                                      x2
                                      (Text.XML.Light.Proc.$wstrContent ww1)
                                      (Flickr.Types.Import.$weltIntAttr
                                         Flickr.Types.Import.eltGroupCat2
                                         ww)
                                      (Flickr.Types.Import.$weltIntAttr
                                         Flickr.Types.Import.eltTagDetails1
                                         ww))
                             } in
                             case GHC.List.lookup
                                    @ Text.XML.Light.Types.QName
                                    @ GHC.Base.String
                                    Text.XML.Light.Types.$fEqQName
                                    Flickr.Types.Import.eltEXIF3
                                    (Flickr.Utils.pAttr_go ww) of wild2 {
                               Data.Maybe.Nothing
                               -> $j
                                    (GHC.Base.map
                                       @ Text.XML.Light.Types.Element
                                       @ [GHC.Types.Char]
                                       Text.XML.Light.Proc.strContent
                                       (Flickr.Utils.pNodes
                                          Flickr.Types.Import.eltEXIF4
                                          (Text.XML.Light.Proc.onlyElems_go ww1)))
                               Data.Maybe.Just x2
                               -> $j
                                    (GHC.Types.:
                                       @ GHC.Base.String
                                       x2
                                       (GHC.Types.[] @ GHC.Base.String)) } } }) -}
5ee89faaef7915f457a3aa08c55bda7a
  $weltTagDetailsList :: [Text.XML.Light.Types.Content]
                         -> Data.Maybe.Maybe [Flickr.Types.TagDetails]
    {- Arity: 1, Strictness: <S,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Content] ->
                   case Flickr.Utils.pNodes
                          Flickr.Types.Import.eltTagDetailsList1
                          (Text.XML.Light.Proc.onlyElems_go ww) of wild {
                     [] -> Data.Maybe.Nothing @ [Flickr.Types.TagDetails]
                     : a1 ds1
                     -> Data.Maybe.Just
                          @ [Flickr.Types.TagDetails]
                          (case a1 of wild1 { Text.XML.Light.Types.Element ds2 ds3 ds4 ds5 ->
                           Data.Maybe.mapMaybe
                             @ Text.XML.Light.Types.Element
                             @ Flickr.Types.TagDetails
                             Flickr.Types.Import.eltTagDetails
                             (Flickr.Utils.pNodes
                                Flickr.Types.Import.eltCluster1
                                (Text.XML.Light.Proc.onlyElems_go ds4)) }) }) -}
1f6c52c72cfb7f007759e8858a7f4870
  $weltTagInfo :: Text.XML.Light.Types.Element
                  -> (# Flickr.Types.TagInfo #)
    {- Arity: 1, Strictness: <L,U(A,1*U,1*U,A)>,
       Unfolding: (\ w :: Text.XML.Light.Types.Element ->
                   (# Flickr.Types.TagInfo
                        (Text.XML.Light.Proc.strContent w)
                        (case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                         case GHC.List.lookup
                                @ Text.XML.Light.Types.QName
                                @ GHC.Base.String
                                Text.XML.Light.Types.$fEqQName
                                Flickr.Types.Import.eltGroupCat1
                                (Flickr.Utils.pAttr_go ww2) of wild {
                           Data.Maybe.Nothing -> Data.Maybe.Nothing @ GHC.Types.Int
                           Data.Maybe.Just a1
                           -> case Text.ParserCombinators.ReadP.run
                                     @ GHC.Types.Int
                                     Flickr.Types.Import.eltAuthToken10
                                     a1 of wild1 {
                                [] -> Data.Maybe.Nothing @ GHC.Types.Int
                                : ds ds1
                                -> case ds of wild2 { (,) v ds2 ->
                                   Data.Maybe.Just @ GHC.Types.Int v } } } }) #)) -}
6b512cafdb79cef5c0bbc4f077bb53b4
  $weltTagInfoList :: GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> Data.Maybe.Maybe GHC.Base.String
                      -> [Text.XML.Light.Types.Content]
                      -> Data.Maybe.Maybe [Flickr.Types.TagInfo]
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,1*U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Content] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltTagDetailsList1 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ [Flickr.Types.TagInfo]
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> Flickr.Types.Import.eltTagInfoList_go
                                    (Flickr.Utils.pNodes
                                       Flickr.Types.Import.eltCluster1
                                       (Text.XML.Light.Proc.onlyElems_go ww3))
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ [Flickr.Types.TagInfo] }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ [Flickr.Types.TagInfo] } }) -}
e814242ee6eb3c7397a9cae75544a3bf
  $weltTicket :: GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> Data.Maybe.Maybe GHC.Base.String
                 -> [Text.XML.Light.Types.Attr]
                 -> Data.Maybe.Maybe Flickr.Types.Ticket
    {- Arity: 4, Strictness: <S,1*U><L,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     ww2 :: Data.Maybe.Maybe GHC.Base.String
                     ww3 :: [Text.XML.Light.Types.Attr] ->
                   case GHC.Classes.$fOrd[]_$s$ccompare
                          ww
                          Flickr.Types.Import.eltTicket6 of wild {
                     DEFAULT -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                     GHC.Types.EQ
                     -> case ww1 of wild1 {
                          Data.Maybe.Nothing
                          -> case ww2 of wild3 {
                               Data.Maybe.Nothing
                               -> case GHC.List.lookup
                                         @ Text.XML.Light.Types.QName
                                         @ GHC.Base.String
                                         Text.XML.Light.Types.$fEqQName
                                         Flickr.Types.Import.eltAuthToken1
                                         (Flickr.Utils.pAttr_go ww3) of wild2 {
                                    Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                    Data.Maybe.Just x
                                    -> case GHC.List.lookup
                                              @ Text.XML.Light.Types.QName
                                              @ GHC.Base.String
                                              Text.XML.Light.Types.$fEqQName
                                              Flickr.Types.Import.eltTicket4
                                              (Flickr.Utils.pAttr_go ww3) of wild4 {
                                         Data.Maybe.Nothing
                                         -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                         Data.Maybe.Just x1
                                         -> case Text.ParserCombinators.ReadP.run
                                                   @ GHC.Types.Int
                                                   Flickr.Types.Import.eltAuthToken10
                                                   x1 of wild5 {
                                              [] -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                              : ds ds1
                                              -> case ds of wild6 { (,) v ds2 ->
                                                 case GHC.List.lookup
                                                        @ Text.XML.Light.Types.QName
                                                        @ GHC.Base.String
                                                        Text.XML.Light.Types.$fEqQName
                                                        Flickr.Types.Import.eltTicket3
                                                        (Flickr.Utils.pAttr_go ww3) of wild7 {
                                                   Data.Maybe.Nothing
                                                   -> Data.Maybe.Nothing @ Flickr.Types.Ticket
                                                   Data.Maybe.Just x2
                                                   -> Data.Maybe.Just
                                                        @ Flickr.Types.Ticket
                                                        (Flickr.Types.Ticket
                                                           x
                                                           v
                                                           (case GHC.List.lookup
                                                                   @ Text.XML.Light.Types.QName
                                                                   @ GHC.Base.String
                                                                   Text.XML.Light.Types.$fEqQName
                                                                   Flickr.Types.Import.eltTicket1
                                                                   (Flickr.Utils.pAttr_go
                                                                      ww3) of wild8 {
                                                              Data.Maybe.Nothing -> GHC.Types.False
                                                              Data.Maybe.Just x3
                                                              -> case Flickr.Types.Import.eltAuthToken9
                                                                        x3 of wild9 {
                                                                   Data.Maybe.Nothing
                                                                   -> GHC.Types.False
                                                                   Data.Maybe.Just v1 -> v1 } })
                                                           x2) } } } } }
                               Data.Maybe.Just a2 -> Data.Maybe.Nothing @ Flickr.Types.Ticket }
                          Data.Maybe.Just ipv
                          -> Data.Maybe.Nothing @ Flickr.Types.Ticket } }) -}
0e6353c742ae0a6db8b421eb3dd3e593
  $weltURLDetails :: [Text.XML.Light.Types.Attr]
                     -> [Text.XML.Light.Types.Content]
                     -> Data.Maybe.Maybe Flickr.Types.URLDetails
    {- Arity: 2, Strictness: <S,1*U><L,1*U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltEvent4
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.URLDetails
                     Data.Maybe.Just x
                     -> Data.Maybe.Just
                          @ Flickr.Types.URLDetails
                          (Flickr.Types.URLDetails
                             (Text.XML.Light.Proc.$wstrContent ww1)
                             x) }) -}
32f122df07954fa2a18bc5f5b2f02cca
  $weltUser :: [Text.XML.Light.Types.Attr]
               -> [Text.XML.Light.Types.Content]
               -> Data.Maybe.Maybe Flickr.Types.User
    {- Arity: 2, Strictness: <S,U><L,U>,
       Unfolding: (\ ww :: [Text.XML.Light.Types.Attr]
                     ww1 :: [Text.XML.Light.Types.Content] ->
                   let {
                     $j :: GHC.Base.String -> Data.Maybe.Maybe Flickr.Types.User
                       {- Arity: 1, Strictness: <L,U> -}
                     = \ x :: GHC.Base.String ->
                       let {
                         $j1 :: GHC.Base.String -> Data.Maybe.Maybe Flickr.Types.User
                           {- Arity: 1, Strictness: <L,U> -}
                         = \ x1 :: GHC.Base.String ->
                           Data.Maybe.Just
                             @ Flickr.Types.User
                             (Flickr.Types.User
                                x1
                                x
                                (case GHC.List.lookup
                                        @ Text.XML.Light.Types.QName
                                        @ GHC.Base.String
                                        Text.XML.Light.Types.$fEqQName
                                        Flickr.Types.Import.eltAuthToken15
                                        (Flickr.Utils.pAttr_go ww) of wild {
                                   Data.Maybe.Nothing
                                   -> case Text.XML.Light.Proc.$wfindChildren
                                             Flickr.Types.Import.eltAuthToken13
                                             ww1 of wild1 {
                                        [] -> Data.Maybe.Nothing @ GHC.Base.String
                                        : a1 ds1
                                        -> Data.Maybe.Just
                                             @ GHC.Base.String
                                             (Text.XML.Light.Proc.strContent a1) }
                                   Data.Maybe.Just ipv -> wild })
                                (Flickr.Types.Import.$weltBool
                                   Flickr.Types.Import.eltAuthToken8
                                   ww)
                                (Flickr.Types.Import.$weltBool
                                   Flickr.Types.Import.eltAuthToken7
                                   ww)
                                (Data.Maybe.Nothing @ GHC.Base.String)
                                (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                (Data.Maybe.Nothing @ Flickr.Types.URLString)
                                (Data.Maybe.Nothing @ Flickr.Types.UserPhotoStat)
                                (GHC.Types.[] @ Text.XML.Light.Types.Attr))
                       } in
                       case GHC.List.lookup
                              @ Text.XML.Light.Types.QName
                              @ GHC.Base.String
                              Text.XML.Light.Types.$fEqQName
                              Flickr.Types.Import.eltAuthToken5
                              (Flickr.Utils.pAttr_go ww) of wild {
                         Data.Maybe.Nothing
                         -> case Text.XML.Light.Proc.$wfindChildren
                                   Flickr.Types.Import.eltAuthToken5
                                   ww1 of wild1 {
                              [] -> Data.Maybe.Nothing @ Flickr.Types.User
                              : a1 ds1 -> $j1 (Text.XML.Light.Proc.strContent a1) }
                         Data.Maybe.Just ipv -> $j1 ipv }
                   } in
                   case GHC.List.lookup
                          @ Text.XML.Light.Types.QName
                          @ GHC.Base.String
                          Text.XML.Light.Types.$fEqQName
                          Flickr.Types.Import.eltAuthToken3
                          (Flickr.Utils.pAttr_go ww) of wild {
                     Data.Maybe.Nothing
                     -> case GHC.List.lookup
                               @ Text.XML.Light.Types.QName
                               @ GHC.Base.String
                               Text.XML.Light.Types.$fEqQName
                               Flickr.Types.Import.eltAuthToken1
                               (Flickr.Utils.pAttr_go ww) of wild1 {
                          Data.Maybe.Nothing -> Data.Maybe.Nothing @ Flickr.Types.User
                          Data.Maybe.Just x -> $j x }
                     Data.Maybe.Just ipv -> $j ipv }) -}
8e467222f16b64dbe9c1ad8f4fadfca9
  eltActivity :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe [Flickr.Types.Activity]
    {- Arity: 1, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltActivity ww3 }) -}
7d6cd00c211ff6a1f3c0e0a6bf03d4cc
  eltActivity1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "event"#) -}
ecd0327f9f8d4be871b7d731899e5d4c
  eltActivity_go :: [Text.XML.Light.Types.Element]
                    -> Data.Maybe.Maybe [Flickr.Types.Activity]
    {- Arity: 1, Strictness: <S,1*U> -}
eb258a237f8be7fb979c0b4a3f51889e
  eltAuthFrob :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.AuthFrob
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltAuthFrob ww6 ww7 ww8 ww3 } }) -}
b4236837996cc1d0f8efc94a20638892
  eltAuthFrob1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "frob"#) -}
c4d116331e2bd6e693bf543f87ece630
  eltAuthToken :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.AuthToken
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltAuthToken ww6 ww7 ww8 ww3 } }) -}
8315636aa6635dac1427afb574658792
  eltAuthToken1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
300f1db3d0af9413dea6e57b8aac6a03
  eltAuthToken10 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
    {- Unfolding: (GHC.Read.$fReadInt4
                     GHC.Read.$fReadInt_$sconvertInt
                     Text.ParserCombinators.ReadPrec.minPrec
                     @ GHC.Types.Int
                     (Text.ParserCombinators.ReadP.$fMonadP_$creturn
                        @ GHC.Types.Int)) -}
a40708524a99907b04a6dd8cca41d35f
  eltAuthToken11 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "true"#) -}
40201f97923db8d7485b5aab2e2935a6
  eltAuthToken12 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "false"#) -}
e54b0466467fdd7dc55f9bdf91ccbe88
  eltAuthToken13 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken14
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
5e10dbf9533631197f1cc9291881b33b
  eltAuthToken14 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "realname"#) -}
a147c0062a1c0fb755e661616342d9d5
  eltAuthToken15 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken16
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
0da9804db35708a44220fda32bc2e3db
  eltAuthToken16 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "fullname"#) -}
fe498a5d2e39d18f50b5f590f741abc5
  eltAuthToken17 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "user"#) -}
abfb355e22e435e518744576d69fd613
  eltAuthToken18 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "perms"#) -}
e87ba9c87e3536921e6fe0fa3827a360
  eltAuthToken19 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "token"#) -}
4abfdd991a010896f8994b11e04cfcd4
  eltAuthToken2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "id"#) -}
63f26d111ee8ab42932e371280b3274c
  eltAuthToken20 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "auth"#) -}
f0a25e51c2d5ca72ba62317af6fb33e8
  eltAuthToken3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
79a376cee49960396ff605638e74e2a3
  eltAuthToken4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "nsid"#) -}
524e117e31d4ac0183720ff3e45a8ec3
  eltAuthToken5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
4d5e1506ef11ceddcdd1490fe6dd274b
  eltAuthToken6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "username"#) -}
28f857ee9c275db82a0e6c370e52d23d
  eltAuthToken7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ispro"#) -}
95c71222020d0602eb9f6a2cddde1158
  eltAuthToken8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "isadmin"#) -}
20c9b794c76069ee472dbc7f18a4dd8f
  eltAuthToken9 :: GHC.Base.String -> Data.Maybe.Maybe GHC.Types.Bool
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ x :: GHC.Base.String ->
                   let {
                     fail :: GHC.Prim.Void# -> Data.Maybe.Maybe GHC.Types.Bool
                       {- Arity: 1, Strictness: <L,A> -}
                     = \ ds :: GHC.Prim.Void# ->
                       let {
                         ds1 :: [GHC.Types.Char]
                         = GHC.Base.map
                             @ GHC.Types.Char
                             @ GHC.Types.Char
                             GHC.Unicode.toLower
                             x
                       } in
                       case GHC.Base.eqString
                              ds1
                              Flickr.Types.Import.eltAuthToken12 of wild {
                         GHC.Types.False
                         -> case GHC.Base.eqString
                                   ds1
                                   Flickr.Types.Import.eltAuthToken11 of wild1 {
                              GHC.Types.False -> Data.Maybe.Nothing @ GHC.Types.Bool
                              GHC.Types.True -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.True }
                         GHC.Types.True
                         -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.False }
                   } in
                   case Text.ParserCombinators.ReadP.run
                          @ GHC.Types.Int
                          Flickr.Types.Import.eltAuthToken10
                          x of wild {
                     [] -> fail GHC.Prim.void#
                     : ds ds1
                     -> case ds of wild1 { (,) v ds2 ->
                        case v of wild2 { GHC.Types.I# ds3 ->
                        case ds3 of ds4 {
                          DEFAULT -> fail GHC.Prim.void#
                          0 -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.False
                          1 -> Data.Maybe.Just @ GHC.Types.Bool GHC.Types.True } } } }) -}
ffa2643e81f276b4c9bc52f9293a0b4a
  eltBandwidth :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.Bandwidth
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltBandwidth ww2 }) -}
bfe98a2f1e50d114f106acaa127110a6
  eltBlog :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.Blog
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltBlog ww6 ww7 ww8 ww2 } }) -}
102d8754a0fedc97f8bdbcd15b6baac0
  eltBlog1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltBlog2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
7eebba1c2e6e02b6f04909ea0c0914e3
  eltBlog2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "url"#) -}
e973375efe9be7597c4e54d601aae7d6
  eltBlog3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltBlog4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
09eb77cb159aea9ed65bb8c117da56c7
  eltBlog4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "needspassword"#) -}
266e77078648110f92d328472df6e3b9
  eltBlog5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltBlog6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
8ef56d49975fd5c253e6183e8551c621
  eltBlog6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "name"#) -}
9b56a1e6f7981d090ca911371a4018b7
  eltBlog7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "blog"#) -}
6c82e5bec2099d4cc944e97b41849a21
  eltBlogsList :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe [Flickr.Types.Blog]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltBlogsList ww6 ww7 ww8 ww3 } }) -}
1f94ace4dd84bb2eac98783052624e00
  eltBlogsList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "blogs"#) -}
df05bfc08b39d41ce362449b78fe9579
  eltBlogsList_go :: [Text.XML.Light.Types.Element]
                     -> Data.Maybe.Maybe [Flickr.Types.Blog]
    {- Arity: 1, Strictness: <S,1*U> -}
a44c6e8e45989e32208173fca1845697
  eltBool :: GHC.Base.String
             -> Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe GHC.Types.Bool
    {- Arity: 2, Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: GHC.Base.String w1 :: Text.XML.Light.Types.Element ->
                   case w1 of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltBool w ww2 }) -}
16856fe5560aec36315b74418b946f8e
  eltCategory :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.Category
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltCategory ww2 ww3 }) -}
b38abf09b6767794da5e17a28018911f
  eltCategory1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCategory2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
59780cfcec88476e57295a7db9f74bc4
  eltCategory2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pathids"#) -}
cc54f24109c8cd6b3dc7899d1fd43b26
  eltCategory3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCategory4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
4981c6e5b50d0a4dd1758cdbf164abcd
  eltCategory4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "path"#) -}
2f12827d56f0ca5e6d0008e7041b674f
  eltCluster :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Cluster
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltCluster ww6 ww7 ww8 ww2 ww3 } }) -}
30fc9142565d2884afbb295b3f7ca513
  eltCluster1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tag"#) -}
69afeb7eb578068df958b51b8df6ac37
  eltCluster2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCluster3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
16de9acffd648c7023243234fccdb61e
  eltCluster3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "total"#) -}
fa02f2af5fa89e8bb14b07483f7a2e20
  eltCluster4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "cluster"#) -}
785c2263f2961fa6dbc1978c0ec56b6e
  eltClusterList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.Cluster]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.Cluster]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.Cluster
                        Flickr.Types.Import.eltCluster
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltCluster4
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
a3137033557a84bd850db1fadea6a0e1
  eltComment :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Comment
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltComment ww6 ww7 ww8 ww2 ww3 } }) -}
286d9f17ed4613bb241070ab6edf47b7
  eltComment1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltComment2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
2c173d4eb08b163df052bb8c3c332f35
  eltComment2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "permalink"#) -}
c58e414056f87e45ab7b45ac633f01f0
  eltComment3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltComment4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
9ad857a7f2fa67df41f7655d5e61be68
  eltComment4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "datecreate"#) -}
dfff42b3889b46eef83a89024077bab1
  eltComment5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "comment"#) -}
4ac499d4f3f2202d2546652a9cbb22ec
  eltCommentID :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.CommentID
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
       Unfolding: InlineRule (1, True, False)
                  (\ e :: Text.XML.Light.Types.Element ->
                   Flickr.Utils.pAttr Flickr.Types.Import.eltAuthToken2 e) -}
25d37c473681921b125a96f1a6058958
  eltCommentList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.Comment]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.Comment]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.Comment
                        Flickr.Types.Import.eltComment
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltComment5
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
1b1ed14afc51317d870c63379a0d60ca
  eltContact :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Contact
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltContact ww2 ww3 }) -}
a436735079ec212d1de28c4acd4d8f12
  eltContact1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
d67fc41076cfe5842c261c1661d885d1
  eltContact2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ignored"#) -}
6d2b153491dc555043fc8e3d2f64c7d1
  eltContact3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c0be88a038085fcacc8ed0a75a537764
  eltContact4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "family"#) -}
7f02982715be78cca27e5a21f06cf970
  eltContact5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
3b8c4323d3ca9a3e7411b2df74748e70
  eltContact6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "friend"#) -}
d77bc0ced5a21aa622a8f7f43bde2359
  eltContact7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContact8
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
daeacde22102713001f83a2f4d82ce0d
  eltContact8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "iconserver"#) -}
85699b2b27a24395ba1a78700007c9a9
  eltContactList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.Contact]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltContactList ww6 ww7 ww8 ww3 } }) -}
cb3eb855f2022945fbadbe9ee59531eb
  eltContactList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "contact"#) -}
3791af13a4ad9f58281084a03f10044f
  eltContactList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "contacts"#) -}
868c0dc6221e0f6fb17232769dab679b
  eltContactList_go :: [Text.XML.Light.Types.Element]
                       -> Data.Maybe.Maybe [Flickr.Types.Contact]
    {- Arity: 1, Strictness: <S,1*U> -}
7cca12e62edac65330459fdd11b9e3e1
  eltContentType :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.ContentType
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltContentType ww2 }) -}
d5fe4a2b949ca02a124afecd0ed24966
  eltContentType1 :: Data.Maybe.Maybe Flickr.Types.ContentType
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.ContentType
                     Flickr.Types.ContentScreenshot) -}
b7d5981b0e66c489da627a277c47985b
  eltContentType2 :: Data.Maybe.Maybe Flickr.Types.ContentType
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.ContentType
                     Flickr.Types.ContentPhoto) -}
7b292312d75f6a2b5102855afa17b295
  eltContentType3 :: Data.Maybe.Maybe Flickr.Types.ContentType
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.ContentType
                     Flickr.Types.ContentOther) -}
5a1cfb1ebc0f07d01b6f258e5aa70148
  eltContentType4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltContentType5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
6d6e51f866958b1bb39afda845ac7d72
  eltContentType5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "content_type"#) -}
e6d9363acea7f13adf4feceb8ab95552
  eltEXIF :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.EXIF
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltEXIF ww6 ww7 ww8 ww2 ww3 } }) -}
ed21d62696cf61c4b881bd41ade18cb6
  eltEXIF1 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
0388dbf48cc0af58799747e54d6d23dc
  eltEXIF10 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF11
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c2ad5e27c210b86683c3dbdd021713a5
  eltEXIF11 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tagspace"#) -}
168280e42e3ec0898ab26a5a87850957
  eltEXIF12 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "exif"#) -}
7bb710bf6294354fea0dc28445af6482
  eltEXIF2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "clean"#) -}
c9a009e6871ae98e64bf8c71ebda96fe
  eltEXIF3 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
868035df04dcab44c6c3f88ae9273735
  eltEXIF4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "raw"#) -}
12532e326f4fc28a49f3b9d89cd7911e
  eltEXIF5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
8222941acb33f6df2833a370ef2af0e3
  eltEXIF6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "label"#) -}
b80eb3d2da26ee524685794544f7abdb
  eltEXIF7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltCluster1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
8e8d9307f57170442826f1560258344a
  eltEXIF8 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEXIF9
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
724a8d713998d87275550f8e24f719b0
  eltEXIF9 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tagspaceid"#) -}
56c9985bd8cf471b25633278905d6138
  eltEXIFList :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe [Flickr.Types.EXIF]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.EXIF]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.EXIF
                        Flickr.Types.Import.eltEXIF
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltEXIF12
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
f99051702efc24e5a606414cf7d5b36a
  eltEvent :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Activity
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltEvent ww2 ww3 }) -}
120af62d5946ab59d9c18dc8bc3b8dac
  eltEvent1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEvent2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
ef40fb7c6c276fd66bba055a527495bf
  eltEvent2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "dateadded"#) -}
6ad54df2bba033261fe90187b2a4d66b
  eltEvent3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltAuthToken17
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
1218058bdff6653666a37a22c06b7e48
  eltEvent4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltEvent5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
5dc16422231e1fc54f2e7e785d28f49e
  eltEvent5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "type"#) -}
cdd3b60cf1d6125ae0ae70d0db14af56
  eltFileSize :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.FileSize
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltFileSize ww2 }) -}
242fe908f03938669c7356db669240d4
  eltFileSize1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltFileSize2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
4b7b3d67d3a2a03a59330757c879f168
  eltFileSize2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "maxkb"#) -}
540bb770a2c7290809c30e7e8fd2bcfe
  eltFileSize3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltFileSize4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
3ef3e864c74849ce44161fa92fa4d7c5
  eltFileSize4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "maxbytes"#) -}
b94490a7882256c99f43d0db064c3447
  eltGeoLocation :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.GeoLocation
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGeoLocation ww6 ww7 ww8 ww2 } }) -}
9af2913e0efa87e1cd6e74c7181d869b
  eltGeoLocation1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "accuracy"#) -}
e4cfdcca8543c465e9b268b243f5a3f4
  eltGeoLocation2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGeoLocation3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
9484dfb9feef1d20dc94d88d9623e377
  eltGeoLocation3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "longitude"#) -}
061583fceedb5cc61648a3ac56f5bbab
  eltGeoLocation4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGeoLocation5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
802b658b0afcda613361cb5237c2cbc8
  eltGeoLocation5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "latitude"#) -}
7727976d4eccee9868173be537e03fdb
  eltGeoLocation6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "location"#) -}
7e762e26355124b78f13cd6309fbee73
  eltGroup :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Group
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGroup ww6 ww7 ww8 ww2 ww3 } }) -}
e5bfce22937b3ccf472612b994119ea8
  eltGroupCat :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.GroupCat
    {- Arity: 1, Strictness: <S(S(SLL)LLL),1*U(U(U,U,U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGroupCat ww6 ww7 ww8 ww2 ww3 } }) -}
8ddfccf22b85a640edc18ba951b0a7c0
  eltGroupCat1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGroupCat2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
eaa1f7bc18d35c0d567f28e2f2ca4238
  eltGroupCat2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "count"#) -}
2b295f98458203c50314c798a4b97938
  eltGroupCat3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "subcat"#) -}
6997f3cf377fc2fae6aa42397c528dca
  eltGroupCat4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "group"#) -}
1d43b028e883e4eb6db192b3d19c7e8c
  eltGroupList :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe [Flickr.Types.Group]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltGroupList ww6 ww7 ww8 ww3 } }) -}
d123484d3ed30b6dcfbe42f4298e3675
  eltGroupList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "groups"#) -}
458b41539368047923f8ca750f04dad6
  eltGroupList_go :: [Text.XML.Light.Types.Element]
                     -> Data.Maybe.Maybe [Flickr.Types.Group]
    {- Arity: 1, Strictness: <S,1*U> -}
6af3abe222631c92a937ad33eeae7d10
  eltIntAttr :: GHC.Base.String
                -> Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe GHC.Types.Int
    {- Arity: 2, Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: GHC.Base.String w1 :: Text.XML.Light.Types.Element ->
                   case w1 of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltIntAttr w ww2 }) -}
d5a65fc1c42c579493f0f8c41dd5b875
  eltItem :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.Item
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltItem ww6 ww7 ww8 ww2 ww3 } }) -}
8a2489725dc7365c6a8517554a253420
  eltItems :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe [Flickr.Types.Item]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltItems ww6 ww7 ww8 ww3 } }) -}
cfeba69f292fe203f13eb697f23cc680
  eltItems1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "item"#) -}
ff40ff95cd921ba3b8c25b7d6e42b755
  eltItems2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "items"#) -}
cd1d0d6a43b0e4f7273506ca26cecd19
  eltItems_go :: [Text.XML.Light.Types.Element]
                 -> Data.Maybe.Maybe [Flickr.Types.Item]
    {- Arity: 1, Strictness: <S,1*U> -}
fbd5afa51100b60fc767b15bab5b1559
  eltLicense :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.License
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltLicense ww6 ww7 ww8 ww2 } }) -}
3fdfd270e9ec80fdfb1ff4099875f028
  eltLicense1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "license"#) -}
a51e846a5ffaaf804c3b881ce1488fed
  eltLicenseList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.License]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.License]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.License
                        Flickr.Types.Import.eltLicense
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltLicense1
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
762bbcfa0e1bbc4fe59d898185c9405b
  eltLocationPlace :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe Flickr.Types.LocationPlace
    {- Arity: 1, Strictness: <S(LSLL),1*U(1*U(1*U,A,A),U,U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltLocationPlace ww1 ww2 ww3 }) -}
4cce7e045b82fd1b4b0bd64b5cbaa23a
  eltMTPair :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.MachineTagPair
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMTPair ww6 ww7 ww8 ww2 ww3 } }) -}
7389cd69500cb3f3d5e62a5a9b43dbd0
  eltMTPair1 :: GHC.Integer.Type.Integer
    {- Unfolding: (__integer 0) -}
eb8b56e65d3b9d3712df60bcec81d1c7
  eltMTPair2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPair3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
cab8102ec088f5a55b86ba5ccebab661
  eltMTPair3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "usage"#) -}
290efd87898493dde92654b60ad27277
  eltMTPair4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPair5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
432cda1c285955c8e5f62f48701ea3e9
  eltMTPair5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "predicate"#) -}
948196d2e1682f6046c047e46652352c
  eltMTPair6 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPair7
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
a52ebfb59193a05297e8cb1b07716de7
  eltMTPair7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "namespace"#) -}
2f836e68f0a48632f3856aee387a737d
  eltMTPair8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pair"#) -}
3e4df4abff38c46aeb71fa96ad9bafac
  eltMTPred :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.MachineTagPred
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMTPred ww6 ww7 ww8 ww2 ww3 } }) -}
0eca7980805835eff26345f97ba12a3f
  eltMTPred1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMTPred2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
bb9cadddcf3a179f4840c8051dfca9e9
  eltMTPred2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "namespaces"#) -}
800a7037e5bce27f5d5c82847263e6c8
  eltMTag :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.MachineTag
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMTag ww6 ww7 ww8 ww2 ww3 } }) -}
9a54164139b1b5b05d6009c6e72ae6db
  eltMTag1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "value"#) -}
ad3f248b2cb210f2520637cc96292323
  eltMachinePairList :: Text.XML.Light.Types.Element
                        -> Data.Maybe.Maybe
                               (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                                [Flickr.Types.MachineTagPair])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMachinePairList
                     ww6
                     ww7
                     ww8
                     ww2
                     ww3 } }) -}
9f14a5e149110ed07987ebbda9a10477
  eltMachinePairList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
4c0dad3070fef10f5698a18c2911dfba
  eltMachinePairList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "perpage"#) -}
b8c1d3f19e97dc76e52cd4adfc64f552
  eltMachinePairList3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pages"#) -}
7ac9db84f802b774d4028d8085e45c47
  eltMachinePairList4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "page"#) -}
17175451c007bd00071784990af22e5f
  eltMachinePairList5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "pairs"#) -}
d025a6a83dc3fa3e87b2290af1ea59c5
  eltMachinePairList_go :: [Text.XML.Light.Types.Element]
                           -> Data.Maybe.Maybe [Flickr.Types.MachineTagPair]
    {- Arity: 1, Strictness: <S,1*U> -}
def27a367bd71076cd92c7bed91743b8
  eltMachinePredList :: Text.XML.Light.Types.Element
                        -> Data.Maybe.Maybe
                               (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                                [Flickr.Types.MachineTagPred])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMachinePredList
                     ww6
                     ww7
                     ww8
                     ww2
                     ww3 } }) -}
54537a2882ee8d425013b7eefc6fcba1
  eltMachinePredList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
73335519b73191dff7c5c64a95df545f
  eltMachinePredList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "predicates"#) -}
c261062f64b1765279af3642ad32a686
  eltMachinePredList_go :: [Text.XML.Light.Types.Element]
                           -> Data.Maybe.Maybe [Flickr.Types.MachineTagPred]
    {- Arity: 1, Strictness: <S,1*U> -}
6e84a19c783026259bea5723101419d7
  eltMachineTagList :: Text.XML.Light.Types.Element
                       -> Data.Maybe.Maybe
                              (Flickr.Types.ResContext Flickr.Types.MachineTag,
                               [Flickr.Types.MachineTag])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltMachineTagList ww6 ww7 ww8 ww2 ww3 } }) -}
a6cf01ca80430db6a948c53d114a4bd9
  eltMachineTagList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
d5f682a35ce5448e56f29e1b2439bbed
  eltMachineTagList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "values"#) -}
8f6a66fecb17f69437334ea6b2ba0a1c
  eltMachineTagList_go :: [Text.XML.Light.Types.Element]
                          -> Data.Maybe.Maybe [Flickr.Types.MachineTag]
    {- Arity: 1, Strictness: <S,1*U> -}
453089c20544ec75ad2e6112b44468e0
  eltNamespace :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.Namespace
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltNamespace ww6 ww7 ww8 ww2 ww3 } }) -}
cfc0207ddd8ed2e11ad9b2a854ca3558
  eltNamespace1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltMachinePredList2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
bca9d0532f175ee4205375e7304c83c0
  eltNamespaceList :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe
                             (Flickr.Types.NameContext, [Flickr.Types.Namespace])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltNamespaceList ww6 ww7 ww8 ww2 ww3 } }) -}
2dbef03c88ddc8434c6dfd0326bcdad0
  eltNamespaceList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
471d9611c0153766073566eb8dc04372
  eltNamespaceList_go :: [Text.XML.Light.Types.Element]
                         -> Data.Maybe.Maybe [Flickr.Types.Namespace]
    {- Arity: 1, Strictness: <S,1*U> -}
bbe801ee3372193efff29039e9306f81
  eltNote :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.Note
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltNote ww2 ww3 }) -}
4f273def1988bcea3b950c69edc9d6b2
  eltNoteID :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.NoteID
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
       Unfolding: InlineRule (1, True, False)
                  (\ e :: Text.XML.Light.Types.Element ->
                   Flickr.Utils.pAttr Flickr.Types.Import.eltAuthToken2 e) -}
662563fcd4a24af0cfd6e375ae34cba7
  eltPermissions :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.Permissions
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPermissions ww2 }) -}
6b3cc733b10350e171543186506ab111
  eltPermissions1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
f1fd58af9cbf138e4afd922fc944c925
  eltPermissions10 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ispublic"#) -}
88684a5a2babb6602f7fd2847f6ff995
  eltPermissions2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "permaddmeta"#) -}
1732658775991601a63f3808b979f0ff
  eltPermissions3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
19d33db3be13572ffdcd95179dff23d4
  eltPermissions4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "permcomment"#) -}
f44c644aebedbae20ee4210432cfc7de
  eltPermissions5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
beab5b56a6e35df89c40d0f1d1f05a84
  eltPermissions6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "isfriend"#) -}
f495c3c9b6ff794a2ad44ad2667a60ad
  eltPermissions7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions8
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
493841dda46914f943005a3339afe8af
  eltPermissions8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "isfamily"#) -}
4208d32b4f31cdf2a642e94552bb3bb7
  eltPermissions9 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPermissions10
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
e5527468aa1f5bcc9705d645423fd156
  eltPhoto :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Photo
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhoto ww2 ww3 }) -}
cedcf55b1db2652ce582d4720290ca84
  eltPhotoContext :: Text.XML.Light.Types.Element
                     -> Data.Maybe.Maybe Flickr.Types.PhotoContext
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case Flickr.Types.Import.$weltPhotoContext w of ww { (##) ww1 ->
                   Data.Maybe.Just @ Flickr.Types.PhotoContext ww1 }) -}
2bd29c7d5462fcf987d64ca389fbd8e6
  eltPhotoCount :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.PhotoCount
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoCount ww6 ww7 ww8 ww2 } }) -}
6344598b2b0e6dfbf0357c8ff8c54ade
  eltPhotoCount1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoCount2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
01842c2680744e9f52ed20ee3764eb08
  eltPhotoCount2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "todate"#) -}
b0c27b713d32372b6b5957343505d088
  eltPhotoCount3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoCount4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
7502f13daed344b8f3a42e637e64b5b8
  eltPhotoCount4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "fromdate"#) -}
161dfc9cdb929bfa70dbf0c7f091be4f
  eltPhotoCount5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photocount"#) -}
c6a3c4bef61020cd5d88e8e77f0b4642
  eltPhotoCountList :: Text.XML.Light.Types.Element
                       -> Data.Maybe.Maybe [Flickr.Types.PhotoCount]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoCountList ww6 ww7 ww8 ww3 } }) -}
67036d581b469e4199cb7c6335508324
  eltPhotoCountList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photocounts"#) -}
88566f243559378ff751538c06b059e1
  eltPhotoDate :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.PhotoDate
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoDate ww2 }) -}
104e3e55732abf9a2c9055679e3970ce
  eltPhotoDate1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "takengranularity"#) -}
7de52150849eabcb684cfdc7c8a6b790
  eltPhotoDate2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoDate3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
16d7065d4d80c194885a1e09b5810ac4
  eltPhotoDate3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "lastupdate"#) -}
34e545f0c695635577e6a365b3f69002
  eltPhotoDate4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoDate5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c819e683edc862b18083ca4c93e32c03
  eltPhotoDate5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "taken"#) -}
d6bd93e77eaebe45cd95e11146780a15
  eltPhotoDate6 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoDate7
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
6b25b6ff35dca0847d2564cdb404ce93
  eltPhotoDate7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "posted"#) -}
b9fdc8402f005bf735b10ae350b12e24
  eltPhotoDetails :: Text.XML.Light.Types.Element
                     -> Data.Maybe.Maybe Flickr.Types.PhotoDetails
    {- Arity: 1, Strictness: <S(LSLL),U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoDetails ww2 ww3 }) -}
9bc413aa5ca505f0a2c5ae4bd25e30e9
  eltPhotoID :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.PhotoID
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoID ww6 ww7 ww8 ww3 } }) -}
5939476d999329b7a44efee481a5fef3
  eltPhotoID1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photoid"#) -}
15bf538cb8d37e1125cb9deabe89e3a0
  eltPhotoList :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe
                         (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPhotoList ww6 ww7 ww8 ww2 ww3 } }) -}
2ba72f21ae0764223d9a02a884deb743
  eltPhotoList1 :: Data.Maybe.Maybe Text.XML.Light.Types.Line
    {- Strictness: b -}
a0a8602d31205cdd6e97731f424a2eca
  eltPhotoList2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photo"#) -}
30138ab9eee30e586269a8a7a9b854bf
  eltPhotoList3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "photos"#) -}
64ed6e060293ac69df6dd433f129ab3d
  eltPhotoList_go :: [Text.XML.Light.Types.Element]
                     -> Data.Maybe.Maybe [Flickr.Types.Photo]
    {- Arity: 1, Strictness: <S,1*U> -}
aedfbd53c2a2a919dd9a7b21a3c79b91
  eltPhotoPair :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe (Flickr.Types.Photo, Flickr.Types.Photo)
    {- Arity: 1, Strictness: <S(LLSL),1*U(A,A,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoPair ww3 }) -}
73cc12485aecc6343fbfef5425a85cb3
  eltPhotoPair1 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoPair2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
97085d8721a1ed08a4f7e824890f7280
  eltPhotoPair2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "nextphoto"#) -}
75ab4beb2a5be71c54d025328421e2c1
  eltPhotoPair3 :: Text.XML.Light.Types.QName
    {- Strictness: m,
       Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoPair4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
a3ca24debaa8368d526cf6e97e8a1af5
  eltPhotoPair4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "prevphoto"#) -}
86edc4a053359bbe1eb5768deef5d46d
  eltPhotoPool :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.PhotoPool
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoPool ww2 }) -}
3baf1feabe467bf1c4b6ee2baeb219cf
  eltPhotoPool1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoPool2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
e9570de10f43b981298eda11f04c3fb7
  eltPhotoPool2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "title"#) -}
fbaca31d0e8bfcfa4e5f21e1cd9d837c
  eltPhotoset :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe Flickr.Types.Photoset
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotoset ww2 }) -}
8c59aa8419b4d6ec25816bdb8fa4e788
  eltPhotoset1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoset2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
e2df2a26152623649e1de5c572c51bb6
  eltPhotoset2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "description"#) -}
f245dfef48e51d05219b2b6ee960a4b1
  eltPhotoset3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoList3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
436b7d7e99fbb693a9361d3f82c1b6cf
  eltPhotoset4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoset5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c0af3ee2fc47a5d4d5bc965d620d71ee
  eltPhotoset5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "primary"#) -}
d50d7e36b1694b0c6131c8c5232e13c1
  eltPhotoset6 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoset7
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
51bacbc04707de14e4ef1356d9a01586
  eltPhotoset7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "owner"#) -}
1e2594d860d0a67c8aa4afd974ac00d4
  eltPhotosetQuota :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe Flickr.Types.PhotosetQuota
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPhotosetQuota ww2 }) -}
ccd0025a417aad0ff85ef4be74de1164
  eltPhotosetQuota1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "remaining"#) -}
2dd1462ebc7dfbbb36e8977332d5767d
  eltPhotosetQuota2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotosetQuota1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
ae4f28dea023819b5fc92d1b3317e1b7
  eltPhotosetQuota3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotosetQuota4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
84fedf722ca6f284f39563e6bcf17a93
  eltPhotosetQuota4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "created"#) -}
f7e90e60996ebac278372abc7b3a0483
  eltPlace :: Text.XML.Light.Types.Element
              -> Data.Maybe.Maybe Flickr.Types.Place
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlace ww6 ww7 ww8 ww2 ww3 } }) -}
ca16ede521d7c155305e9cb6c424d125
  eltPlace1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
ec228de90f91bae07f8fce4bdd9a4e4b
  eltPlace2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_type"#) -}
eeb96ba457e128593281a28c62bbc1e9
  eltPlace3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
ca995c8b7421713a001d0cb9f529d48a
  eltPlace4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_url"#) -}
5edf8ace940b8f466bdd4f0b06008180
  eltPlace5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
67318945325f18eeba427d04bd7b7861
  eltPlace6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "woeid"#) -}
d5f5cee8bb968e10098bd6895aab3c7a
  eltPlace7 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlace8
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
8b827235598a28b044113bac6219da8f
  eltPlace8 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_id"#) -}
349b294be554bcca6600b5d98d1f6e23
  eltPlace9 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place"#) -}
2505bdacec71ff0fea8020da27017351
  eltPlaceQuery :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.PlaceQuery
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaceQuery ww6 ww7 ww8 ww2 } }) -}
596ec1d4137f471b66b3a33cca5c13f0
  eltPlaceQuery1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltGeoLocation1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
ff8defd3f1ae00f009000d967e7732a0
  eltPlaceQuery2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "query"#) -}
b230e6ae67c960a39e32f4d4687c894f
  eltPlaceQuery3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "places"#) -}
d4512431ee2b08fd5827e3da6de13c2f
  eltPlaceType :: Text.XML.Light.Types.Element
                  -> Data.Maybe.Maybe Flickr.Types.PlaceType
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaceType ww6 ww7 ww8 ww2 ww3 } }) -}
ae43dfcccba0f538ddc2c56e202851df
  eltPlaceType1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPlaceType2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
f88cfea1960a197852c1ecbcda1ec44a
  eltPlaceType2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_type_id"#) -}
0c20d3597d40064097d3cfa46a8b8903
  eltPlaceTypeList :: Text.XML.Light.Types.Element
                      -> Data.Maybe.Maybe [Flickr.Types.PlaceType]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaceTypeList ww6 ww7 ww8 ww3 } }) -}
032a8ad8f16121ac9744d36ced4ddff9
  eltPlaceTypeList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "place_types"#) -}
3366dfd0302e78bb393b1b7cdf16f628
  eltPlaceTypeList_go :: [Text.XML.Light.Types.Element]
                         -> Data.Maybe.Maybe [Flickr.Types.PlaceType]
    {- Arity: 1, Strictness: <S,1*U> -}
dc44f0bf05dccd80ac8d7863cababc31
  eltPlaces :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
    {- Arity: 1, Strictness: <S(S(SLL)LLL),1*U(U(U,U,U),U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlaces ww6 ww7 ww8 ww2 ww3 } }) -}
dfdd32ad955a718365b70c59b1132ead
  eltPlacesList :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltPlacesList ww6 ww7 ww8 ww3 } }) -}
32d1e521b15fa7947947c47b2c3b2012
  eltPlacesList_go :: [Text.XML.Light.Types.Element]
                      -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 1, Strictness: <S,1*U> -}
183d9b727f17aabd75e8335913c7b471
  eltPlaces_go :: [Text.XML.Light.Types.Element]
                  -> Data.Maybe.Maybe [Flickr.Types.Place]
    {- Arity: 1, Strictness: <S,1*U> -}
351810451896b054d197e2838923a8a6
  eltPrivacy :: GHC.Base.String
                -> Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.Privacy
    {- Arity: 2, Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: GHC.Base.String w1 :: Text.XML.Light.Types.Element ->
                   case w1 of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltPrivacy w ww2 }) -}
0f737209d9d0ab4cbb0e9100dc0d119f
  eltPrivacy1 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy2) -}
cdb50bde887e9ec558bba7bc1403bcd3
  eltPrivacy2 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private GHC.Types.False GHC.Types.True) -}
a536cb674f2cbf36fdde4ff108366fe4
  eltPrivacy3 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy4) -}
8fba3cc876ff51134f9e2c83f307cd18
  eltPrivacy4 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private GHC.Types.True GHC.Types.False) -}
790aa769f5e305095be5b2706615f79a
  eltPrivacy5 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy6) -}
163d551d141b567e3c0e769e5550d489
  eltPrivacy6 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private GHC.Types.True GHC.Types.True) -}
518a69accd8a91cd872dbb97f04ee6cd
  eltPrivacy7 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Import.eltPrivacy8) -}
e720e44397ddb808fdf4b3082ca1341f
  eltPrivacy8 :: Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Flickr.Types.Private
                     GHC.Types.False
                     GHC.Types.False) -}
da74b06465719902bb4904944fcf5bdd
  eltPrivacy9 :: Data.Maybe.Maybe Flickr.Types.Privacy
    {- HasNoCafRefs,
       Unfolding: (Data.Maybe.Just
                     @ Flickr.Types.Privacy
                     Flickr.Types.Public) -}
fe3a33e341be9bba7225ac1d8baf6b4c
  eltResContext :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe (Flickr.Types.ResContext a)
    {- Arity: 1, Strictness: <L,U(A,U,A,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ @ a1 w :: Text.XML.Light.Types.Element ->
                   case Flickr.Types.Import.$weltResContext @ a1 w of ww { (##) ww1 ->
                   Data.Maybe.Just @ (Flickr.Types.ResContext a1) ww1 }) -}
ddf7bb6e7c03e6dd07af6f6f498b8c76
  eltSize :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.SizeDetails
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltSize ww6 ww7 ww8 ww2 } }) -}
8c6117e71df1124d6c74461eaa808e9c
  eltSize1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltSize2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
544f747ee4ba01d20a258e108517d5b3
  eltSize2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "source"#) -}
7be9edf0977c8a0675a8ea4ab7a2d5a4
  eltSize3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltSize4
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c898c1dd3df6a8f9292df707940f0785
  eltSize4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "height"#) -}
ff5a1def8409832cad277bd125f39f27
  eltSize5 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltSize6
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
6ac7f1133431d2ef5b3e78d7cf77ad18
  eltSize6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "width"#) -}
ef675e39f4746ac27e82552fcac4b588
  eltSize7 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "size"#) -}
fd589572bba884b599b9b5c893f1fa5e
  eltSizeList :: Text.XML.Light.Types.Element
                 -> Data.Maybe.Maybe [Flickr.Types.SizeDetails]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.SizeDetails]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.SizeDetails
                        Flickr.Types.Import.eltSize
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltSize7
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
e709bd42df1a0d6a2202b3e3a5fb983a
  eltStringAttr :: GHC.Base.String
                   -> Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe GHC.Base.String
    {- Arity: 2, HasNoCafRefs,
       Strictness: <L,U><S(LSLL),1*U(A,1*U,A,A)>,
       Unfolding: InlineRule (0, True, True) Flickr.Utils.pAttr -}
adcb839c9e4ab9a7475ff2fe3d3c3f4a
  eltSubCategory :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe Flickr.Types.SubCategory
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,A,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltSubCategory ww2 }) -}
b537ffec8bebfb23d4eec488896bfcb0
  eltTagDetails :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.TagDetails
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltTagDetails ww2 ww3 }) -}
d541e75c05a3f826bde8c9bf8b852804
  eltTagDetails1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "score"#) -}
4cee3f7dacd171cae174c06c1734d869
  eltTagDetails2 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltTagDetails3
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
d03f75cfc0fd041bb4f3cd57445f7e91
  eltTagDetails3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "author"#) -}
719ceaa02cc636c8b2dcdd4f09694b99
  eltTagDetailsList :: Text.XML.Light.Types.Element
                       -> Data.Maybe.Maybe [Flickr.Types.TagDetails]
    {- Arity: 1, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltTagDetailsList ww3 }) -}
6717da4fa627d9ede66acb23aeb717c5
  eltTagDetailsList1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "tags"#) -}
5709492ff2a3f4494abfc387daf69239
  eltTagInfo :: Text.XML.Light.Types.Element
                -> Data.Maybe.Maybe Flickr.Types.TagInfo
    {- Arity: 1, Strictness: <L,U(A,1*U,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case Flickr.Types.Import.$weltTagInfo w of ww { (##) ww1 ->
                   Data.Maybe.Just @ Flickr.Types.TagInfo ww1 }) -}
1106f276a926a53d5083633189f2f105
  eltTagInfoList :: Text.XML.Light.Types.Element
                    -> Data.Maybe.Maybe [Flickr.Types.TagInfo]
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),A,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltTagInfoList ww6 ww7 ww8 ww3 } }) -}
d9260da8f9cb1e141d3fdd05dbce11d3
  eltTagInfoList_go :: [Text.XML.Light.Types.Element]
                       -> Data.Maybe.Maybe [Flickr.Types.TagInfo]
    {- Arity: 1, Strictness: <S,1*U> -}
0bf719c20e514744ba28a9eafa215ba8
  eltTicket :: Text.XML.Light.Types.Element
               -> Data.Maybe.Maybe Flickr.Types.Ticket
    {- Arity: 1,
       Strictness: <S(S(SLL)LLL),1*U(1*U(1*U,1*U,1*U),U,A,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   case ww1 of ww5 { Text.XML.Light.Types.QName ww6 ww7 ww8 ->
                   Flickr.Types.Import.$weltTicket ww6 ww7 ww8 ww2 } }) -}
07e54f9a33cb52e2804f594c7ece030f
  eltTicket1 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltTicket2
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
c3bdf6c551310660bd2a15b564983d10
  eltTicket2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "invalid"#) -}
aa8111be3ab8ddee734b5b2b1bb65f7d
  eltTicket3 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltPhotoID1
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
426c36151a12cb41ca8fb708c303a4c3
  eltTicket4 :: Text.XML.Light.Types.QName
    {- Unfolding: (Text.XML.Light.Types.QName
                     Flickr.Types.Import.eltTicket5
                     (Data.Maybe.Nothing @ GHC.Base.String)
                     (Data.Maybe.Nothing @ GHC.Base.String)) -}
b0f1e7500feb143126d4513b4160e785
  eltTicket5 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "complete"#) -}
803266f225bc08e7d57ceab330a67462
  eltTicket6 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "ticket"#) -}
5205170a908a46737b25266b91fcbf83
  eltTicketList :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe [Flickr.Types.Ticket]
    {- Arity: 1, Strictness: <L,1*U(A,A,1*U,A)>m2, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   Data.Maybe.Just
                     @ [Flickr.Types.Ticket]
                     (case w of wild { Text.XML.Light.Types.Element ds1 ds2 ds3 ds4 ->
                      Data.Maybe.mapMaybe
                        @ Text.XML.Light.Types.Element
                        @ Flickr.Types.Ticket
                        Flickr.Types.Import.eltTicket
                        (Flickr.Utils.pNodes
                           Flickr.Types.Import.eltTicket6
                           (Text.XML.Light.Proc.onlyElems_go ds3)) })) -}
cca88cf9b1aebcc1becc6cd5c5fe9dc4
  eltURLDetails :: Text.XML.Light.Types.Element
                   -> Data.Maybe.Maybe Flickr.Types.URLDetails
    {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,1*U,A)>,
       Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltURLDetails ww2 ww3 }) -}
4838dec1321cbedcdf4ca799f0b19cf6
  eltUser :: Text.XML.Light.Types.Element
             -> Data.Maybe.Maybe Flickr.Types.User
    {- Arity: 1, Strictness: <S(LSLL),U(A,U,U,A)>, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: Text.XML.Light.Types.Element ->
                   case w of ww { Text.XML.Light.Types.Element ww1 ww2 ww3 ww4 ->
                   Flickr.Types.Import.$weltUser ww2 ww3 }) -}
99975d33bf00ee28a7f6a843a064d95f
  toAuthFrob :: GHC.Base.String
                -> Flickr.Monad.ErrM Flickr.Types.AuthFrob
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.AuthFrob
                     Flickr.Types.Import.eltAuthFrob
                     s) -}
34139952d5e3196983e30023f31c0991
  toAuthToken :: GHC.Base.String
                 -> Flickr.Monad.ErrM Flickr.Types.AuthToken
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.AuthToken
                     Flickr.Types.Import.eltAuthToken
                     s) -}
3f7cc56bd3171aae997b74bd5459d807
  toBlogs :: GHC.Base.String -> Flickr.Monad.ErrM [Flickr.Types.Blog]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Blog]
                     Flickr.Types.Import.eltBlogsList
                     s) -}
016968f68c66b370d27af892a3122663
  toBool :: GHC.Base.String
            -> GHC.Base.String
            -> Flickr.Monad.ErrM GHC.Types.Bool
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ GHC.Types.Bool
                     (Flickr.Types.Import.eltBool x)
                     s) -}
ee44e336f41c291311dfe21564352f70
  toCategory :: GHC.Base.String
                -> Flickr.Monad.ErrM Flickr.Types.Category
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Category
                     Flickr.Types.Import.eltCategory
                     s) -}
95844a53a720185318353dc94e3cb35d
  toClusterList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.Cluster]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Cluster]
                     Flickr.Types.Import.eltClusterList
                     s) -}
51a03205a16574bcb998957f96b8ffb1
  toCommentID :: GHC.Base.String
                 -> Flickr.Monad.ErrM Flickr.Types.CommentID
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (Flickr.Types.Import.toNoteID) -}
5ad704e5a0a8b504d45c80517b741260
  toCommentList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.Comment]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Comment]
                     Flickr.Types.Import.eltCommentList
                     s) -}
3fc98b3fd6ac9461fc52238c45898214
  toContactList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.Contact]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Contact]
                     Flickr.Types.Import.eltContactList
                     s) -}
7dc6599cc726b98cee0d9a047800acc7
  toContentType :: GHC.Base.String
                   -> Flickr.Monad.ErrM Flickr.Types.ContentType
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.ContentType
                     Flickr.Types.Import.eltContentType
                     s) -}
de32e4d83a7d8959f53fef069662de6f
  toEXIFList :: GHC.Base.String
                -> Flickr.Monad.ErrM [Flickr.Types.EXIF]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.EXIF]
                     Flickr.Types.Import.eltEXIFList
                     s) -}
e1b8498cdf9c1aa4252ea25cc5478fd7
  toGeoLocation :: GHC.Base.String
                   -> Flickr.Monad.ErrM Flickr.Types.GeoLocation
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.GeoLocation
                     Flickr.Types.Import.eltGeoLocation
                     s) -}
7e5dd7cd78f1e24ed33dc09eb5e2edcb
  toGroup :: GHC.Base.String -> Flickr.Monad.ErrM Flickr.Types.Group
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Group
                     Flickr.Types.Import.eltGroup
                     s) -}
c9d55685f20411def0b85d4661aecbc3
  toGroupList :: GHC.Base.String
                 -> Flickr.Monad.ErrM [Flickr.Types.Group]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Group]
                     Flickr.Types.Import.eltGroupList
                     s) -}
d33b53163a4f0355311fa0471179e443
  toItems :: GHC.Base.String -> Flickr.Monad.ErrM [Flickr.Types.Item]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Item]
                     Flickr.Types.Import.eltItems
                     s) -}
3d7bee1351afce4062bd62989d8723d0
  toLicenseList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.License]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.License]
                     Flickr.Types.Import.eltLicenseList
                     s) -}
ebe2eac9df205b64b12c9c42e548ae2c
  toLocationPlace :: GHC.Base.String
                     -> Flickr.Monad.ErrM Flickr.Types.LocationPlace
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.LocationPlace
                     Flickr.Types.Import.eltLocationPlace
                     s) -}
16919bf19d264a5c1cd11aa7fd44f9ba
  toMachineTagList :: GHC.Base.String
                      -> Flickr.Monad.ErrM
                             (Flickr.Types.ResContext Flickr.Types.MachineTag,
                              [Flickr.Types.MachineTag])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.ResContext Flickr.Types.MachineTag,
                        [Flickr.Types.MachineTag])
                     Flickr.Types.Import.eltMachineTagList
                     s) -}
c586d2fbe52bd58928352caf190da393
  toNamespaceList :: GHC.Base.String
                     -> Flickr.Monad.ErrM
                            (Flickr.Types.NameContext, [Flickr.Types.Namespace])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.NameContext, [Flickr.Types.Namespace])
                     Flickr.Types.Import.eltNamespaceList
                     s) -}
0e77c135741b818048d387899fe54b74
  toNoteID :: GHC.Base.String
              -> Flickr.Monad.ErrM Flickr.Types.NoteID
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.NoteID
                     Flickr.Types.Import.eltNoteID
                     s) -}
2f43ab15cd1adcbf7e05f0be3cd8eda1
  toPairList :: GHC.Base.String
                -> Flickr.Monad.ErrM
                       (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                        [Flickr.Types.MachineTagPair])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.ResContext Flickr.Types.MachineTagPair,
                        [Flickr.Types.MachineTagPair])
                     Flickr.Types.Import.eltMachinePairList
                     s) -}
96b283455d82d6cd6f32a3cdcf22f09c
  toPermissions :: GHC.Base.String
                   -> Flickr.Monad.ErrM Flickr.Types.Permissions
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Permissions
                     Flickr.Types.Import.eltPermissions
                     s) -}
381301870f0c38ae9d9fb696d9228f3a
  toPhotoCountList :: GHC.Base.String
                      -> Flickr.Monad.ErrM [Flickr.Types.PhotoCount]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.PhotoCount]
                     Flickr.Types.Import.eltPhotoCountList
                     s) -}
6a98ed26cdf63109eaf4b163f34e8e16
  toPhotoDetails :: GHC.Base.String
                    -> Flickr.Monad.ErrM Flickr.Types.PhotoDetails
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.PhotoDetails
                     Flickr.Types.Import.eltPhotoDetails
                     s) -}
a00c84aa6a2debcdbebe1803f5fb434a
  toPhotoID :: GHC.Base.String
               -> Flickr.Monad.ErrM Flickr.Types.PhotoID
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.PhotoID
                     Flickr.Types.Import.eltPhotoID
                     s) -}
1d742cbe83061d87a71f51268d60155c
  toPhotoList :: GHC.Base.String
                 -> Flickr.Monad.ErrM
                        (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.PhotoContext, [Flickr.Types.Photo])
                     Flickr.Types.Import.eltPhotoList
                     s) -}
b59bdac5b2c2f4311a33a86cd5f95e26
  toPhotoPair :: GHC.Base.String
                 -> Flickr.Monad.ErrM (Flickr.Types.Photo, Flickr.Types.Photo)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.Photo, Flickr.Types.Photo)
                     Flickr.Types.Import.eltPhotoPair
                     s) -}
b18c799fa86d7fc4f2423a82b761365b
  toPhotoPool :: GHC.Base.String
                 -> Flickr.Monad.ErrM Flickr.Types.PhotoPool
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.PhotoPool
                     Flickr.Types.Import.eltPhotoPool
                     s) -}
dd5974030dc51f667c60f0945a2e38bc
  toPhotoset :: GHC.Base.String
                -> Flickr.Monad.ErrM Flickr.Types.Photoset
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Photoset
                     Flickr.Types.Import.eltPhotoset
                     s) -}
e292c36365815764939cc302daa12751
  toPlaceTypes :: GHC.Base.String
                  -> Flickr.Monad.ErrM [Flickr.Types.PlaceType]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.PlaceType]
                     Flickr.Types.Import.eltPlaceTypeList
                     s) -}
331feaac28e917114552808abc624b69
  toPlaces :: GHC.Base.String
              -> Flickr.Monad.ErrM
                     (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.PlaceQuery, [Flickr.Types.Place])
                     Flickr.Types.Import.eltPlaces
                     s) -}
6e795f53c0da7b2826881722539d47b6
  toPlacesList :: GHC.Base.String
                  -> Flickr.Monad.ErrM [Flickr.Types.Place]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Place]
                     Flickr.Types.Import.eltPlacesList
                     s) -}
a732513d913242aa63ed317685d3cabd
  toPredList :: GHC.Base.String
                -> Flickr.Monad.ErrM
                       (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                        [Flickr.Types.MachineTagPred])
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ (Flickr.Types.ResContext Flickr.Types.MachineTagPred,
                        [Flickr.Types.MachineTagPred])
                     Flickr.Types.Import.eltMachinePredList
                     s) -}
22b6a6dcb0d4bd58c300609a99122fc7
  toPrivacy :: GHC.Base.String
               -> GHC.Base.String
               -> Flickr.Monad.ErrM Flickr.Types.Privacy
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.Privacy
                     (Flickr.Types.Import.eltPrivacy x)
                     s) -}
f7005dd8da80a0a2b671d39b22db6b45
  toSafetyLevel :: GHC.Base.String
                   -> GHC.Base.String
                   -> Flickr.Monad.ErrM GHC.Types.Int
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ GHC.Types.Int
                     (Flickr.Types.Import.eltIntAttr x)
                     s) -}
cda0f651a55676ced7e0de179061e753
  toSizeList :: GHC.Base.String
                -> Flickr.Monad.ErrM [Flickr.Types.SizeDetails]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.SizeDetails]
                     Flickr.Types.Import.eltSizeList
                     s) -}
0a78966e4359fdc10938dc356b82e7fb
  toString :: GHC.Base.String
              -> GHC.Base.String
              -> Flickr.Monad.ErrM GHC.Base.String
    {- Arity: 2, Strictness: <L,U><L,U>,
       Unfolding: (\ x :: GHC.Base.String s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ GHC.Base.String
                     (Flickr.Utils.pAttr x)
                     s) -}
e76dc34f7b973778d789959d4bba2420
  toTagDetailsList :: GHC.Base.String
                      -> Flickr.Monad.ErrM [Flickr.Types.TagDetails]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.TagDetails]
                     Flickr.Types.Import.eltTagDetailsList
                     s) -}
4428622ef050525a8118ec639592bd22
  toTagInfoList :: GHC.Base.String
                   -> Flickr.Monad.ErrM [Flickr.Types.TagInfo]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.TagInfo]
                     Flickr.Types.Import.eltTagInfoList
                     s) -}
fe46182cff5c09957c03cb3276b523b8
  toTicketList :: GHC.Base.String
                  -> Flickr.Monad.ErrM [Flickr.Types.Ticket]
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ [Flickr.Types.Ticket]
                     Flickr.Types.Import.eltTicketList
                     s) -}
883b7b16f3fab69cd9d48936690fb540
  toUser :: GHC.Base.String -> Flickr.Monad.ErrM Flickr.Types.User
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ s :: GHC.Base.String ->
                   Flickr.Monad.parseDoc
                     @ Flickr.Types.User
                     Flickr.Types.Import.eltUser
                     s) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

