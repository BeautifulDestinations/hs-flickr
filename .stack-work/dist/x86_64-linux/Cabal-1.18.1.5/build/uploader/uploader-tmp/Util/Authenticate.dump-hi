
==================== FINAL INTERFACE ====================
2016-03-01 11:43:34.196679 UTC

interface main:Util.Authenticate 7084
  interface hash: e7b16f6c2375043f4338a97e8fb05ce9
  ABI hash: 2de23a96046349b971da636b3f60829f
  export-list hash: 0b185ffe67067e83f94de3927b649868
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a787a056874179517b93926a7715e811
  used TH splices: False
  where
exports:
  Util.Authenticate.authenticateForMobile
  Util.Authenticate.authenticateForWeb
module dependencies: Codec.Percent Codec.URLEncoder Flickr.Auth
                     Flickr.Monad Flickr.Types Flickr.Types.Import Flickr.Utils
                     Util.Fetch Util.Keys Util.MD5 Util.MIME Util.Post
package dependencies: HTTP-4000.2.20 array-0.5.0.0 base
                      bytestring-0.10.4.0 deepseq-1.3.0.2 filepath-1.3.0.2 ghc-prim
                      integer-gmp mime-0.3.4 mtl-2.1.3.1 network-2.6.2.1
                      network-uri-2.6.0.3 old-locale-1.0.0.6 old-time-1.1.0.2
                      parsec-3.1.9 random-1.1 text-1.2.0.6 time-1.4.2
                      transformers-0.3.0.0 utf8-string-1 xml-1.3.14
orphans: base:GHC.Base base:GHC.Float base:GHC.Real
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
family instance modules: base:Control.Applicative base:Data.Either
                         base:Data.Monoid base:Data.Type.Equality base:GHC.Exts
                         base:GHC.Generics network-uri-2.6.0.3:Network.URI
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
import  -/  base:Data.Maybe 5034d40e23c3a7110309f188001df4ca
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  base:System.IO cadd0efb01c47ddd8f52d750739fdbdf
import  -/  Flickr.Auth 5535e53d51c13c6e025bf0af593b215a
  exports: 66843c5cbd7b32bacb8a0c150a90a3c6
  getFrob b62f6be5bca28d7882e2455268f46bb3
  getFullToken 094ec05f77762cfdd7431f1a075b8552
  getToken 06bf74c058a087e972a89928c368f66a
import  -/  Flickr.Monad 04dcf41add9dda483c4e1216c1e4d955
  exports: a48c768163b3524ddb6a3c7780b5d55c
  FM 91641286fd5a4035d1caa1713877af9c
  getAPIKey 67f7ea30ca8573914904badf2621acae
  getMobileAuthURL 30607e5bc92e95c78739db756fe5ecac
  liftIO 6c79d95117e60a0ceac992fb5e49334d
  mkLoginURL 862296f954d1f00c46ddb8d9e9224aba
import  -/  Flickr.Types 653ba19fff32ac001f790083a5a45199
  exports: 16c0f78ccd56a3138dea1b355b10ed13
  AuthToken 6b85d7739d578fa12461079abcac3b8a
  URLString fb5221ff5748803b8672d77ed2871a7d
  aFrob f4dde08fd4d6ed66fa61293397f26e15
import  -/  Util.Keys fdd2df5c60ac0d1bfb99b30649a78a7f
  exports: 8d589c26582bfacee3a7fce0824169be
  apiKind 46eae77bce407104b4558a963d44a6be
ad2720a59fe34eef19debbf57ba42ed0
  $wa :: GHC.Base.String
         -> Data.Maybe.Maybe GHC.Base.String
         -> GHC.Prim.State# GHC.Prim.RealWorld
         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
               Data.Maybe.Maybe
                   (Flickr.Types.URLString,
                    GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken) #)
    {- Arity: 3, Strictness: <S,1*U><L,1*U><L,U>,
       Unfolding: (\ ww :: GHC.Base.String
                     ww1 :: Data.Maybe.Maybe GHC.Base.String
                     w :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case GHC.Base.eqString
                          ww
                          Util.Authenticate.authenticateForMobile4 of wild {
                     GHC.Types.False
                     -> case GHC.IO.Handle.Text.hPutStr2
                               GHC.IO.Handle.FD.stdout
                               (GHC.CString.unpackAppendCString#
                                  "Unexpected API key 'kind': "#
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     ww
                                     Util.Authenticate.authenticateForMobile3))
                               GHC.Types.True
                               w of ds1 { (#,#) ipv ipv1 ->
                        (# ipv,
                           Data.Maybe.Nothing
                             @ (Flickr.Types.URLString,
                                GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken) #) }
                     GHC.Types.True
                     -> (# w,
                           Data.Maybe.Just
                             @ (Flickr.Types.URLString,
                                GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken)
                             (case ww1 of wild1 {
                                Data.Maybe.Nothing -> GHC.Types.[] @ GHC.Types.Char
                                Data.Maybe.Just v -> v },
                              Flickr.Auth.getFullToken) #) }) -}
2d646d6bf3205be2cea86eae46997a75
  $wauthenticateForWeb :: GHC.Base.String
                          -> (# Flickr.Monad.FMEnv
                                -> GHC.Types.IO
                                       (Data.Maybe.Maybe
                                            (Flickr.Types.URLString,
                                             Flickr.Monad.FM Flickr.Types.AuthToken)) #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ w :: GHC.Base.String ->
                   let {
                     lvl :: Flickr.Monad.FM
                                (Data.Maybe.Maybe
                                     (Flickr.Types.URLString,
                                      Flickr.Monad.FM Flickr.Types.AuthToken))
                     = case Flickr.Auth.getFrob of ww { Flickr.Monad.FM ww1 ->
                       Flickr.Monad.FM
                         @ (Data.Maybe.Maybe
                                (Flickr.Types.URLString, Flickr.Monad.FM Flickr.Types.AuthToken))
                         (\ env :: Flickr.Monad.FMEnv
                            s :: GHC.Prim.State# GHC.Prim.RealWorld ->
                          case (ww1 env)
                                 `cast`
                               (GHC.Types.NTCo:IO[0] <Flickr.Types.AuthFrob>_R)
                                 s of ds1 { (#,#) ipv ipv1 ->
                          (# ipv,
                             Data.Maybe.Just
                               @ (Flickr.Types.URLString, Flickr.Monad.FM Flickr.Types.AuthToken)
                               (Flickr.Monad.genLoginURL
                                  (case env of wild { Flickr.Monad.FMEnv ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                                   case ds of wild1 { Util.Keys.APIKey ds12 ds13 ds14 ds15 ->
                                   ds13 } })
                                  (case env of wild { Flickr.Monad.FMEnv ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                                   case ds of wild1 { Util.Keys.APIKey ds12 ds13 ds14 ds15 ->
                                   ds14 } })
                                  (case ipv1 of wild { Flickr.Types.AuthFrob ds2 -> ds2 })
                                  w,
                                case Flickr.Auth.$wgetToken ipv1 of ww2 { (##) ww3 ->
                                Flickr.Monad.FM @ Flickr.Types.AuthToken ww3 }) #) })
                           `cast`
                         (<Flickr.Monad.FMEnv>_R
                          ->_R Sym (GHC.Types.NTCo:IO[0]
                                        <Data.Maybe.Maybe
                                             (Flickr.Types.URLString,
                                              Flickr.Monad.FM Flickr.Types.AuthToken)>_R)) }
                   } in
                   (# (\ env :: Flickr.Monad.FMEnv
                         s :: GHC.Prim.State# GHC.Prim.RealWorld ->
                       case env of wild { Flickr.Monad.FMEnv ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                       case ds of wild1 { Util.Keys.APIKey ds11 ds12 ds13 ds14 ->
                       case GHC.Base.eqString
                              ds11
                              Util.Authenticate.authenticateForWeb2 of wild2 {
                         GHC.Types.False
                         -> case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout
                                   (GHC.CString.unpackAppendCString#
                                      "Unexpected API key 'kind': "#
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         ds11
                                         Util.Authenticate.authenticateForWeb1))
                                   GHC.Types.True
                                   s of ds15 { (#,#) ipv ipv1 ->
                            (# ipv,
                               Data.Maybe.Nothing
                                 @ (Flickr.Types.URLString,
                                    Flickr.Monad.FM Flickr.Types.AuthToken) #) }
                         GHC.Types.True
                         -> case lvl of wild3 { Flickr.Monad.FM b1 ->
                            (b1 wild)
                              `cast`
                            (GHC.Types.NTCo:IO[0]
                                 <Data.Maybe.Maybe
                                      (Flickr.Types.URLString,
                                       Flickr.Monad.FM Flickr.Types.AuthToken)>_R)
                              s } } } })
                        `cast`
                      (<Flickr.Monad.FMEnv>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Data.Maybe.Maybe
                                          (Flickr.Types.URLString,
                                           Flickr.Monad.FM Flickr.Types.AuthToken)>_R)) #)) -}
0a3b667c81a9aaeda220fd28620785d7
  authenticateForMobile :: GHC.Base.String
                           -> Flickr.Monad.FM
                                  (Data.Maybe.Maybe
                                       (Flickr.Types.URLString,
                                        GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken))
    {- Arity: 1, Strictness: <L,A>m,
       Unfolding: InlineRule (1, True, True)
                  (\ _perm :: GHC.Base.String ->
                   Util.Authenticate.authenticateForMobile1) -}
3a4513ca85cb65f7057f054d8d70f2f5
  authenticateForMobile1 :: Flickr.Monad.FM
                                (Data.Maybe.Maybe
                                     (Flickr.Types.URLString,
                                      GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken))
    {- Strictness: m,
       Unfolding: (Flickr.Monad.FM
                     @ (Data.Maybe.Maybe
                            (Flickr.Types.URLString,
                             GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken))
                     Util.Authenticate.authenticateForMobile2
                       `cast`
                     (<Flickr.Monad.FMEnv>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <Data.Maybe.Maybe
                                         (Flickr.Types.URLString,
                                          GHC.Base.String
                                          -> Flickr.Monad.FM Flickr.Types.AuthToken)>_R))) -}
073de88cc7265ed2464b26383e35f7bf
  authenticateForMobile2 :: Flickr.Monad.FMEnv
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  Data.Maybe.Maybe
                                      (Flickr.Types.URLString,
                                       GHC.Base.String -> Flickr.Monad.FM Flickr.Types.AuthToken) #)
    {- Arity: 2,
       Strictness: <S(S(SLLL)LLLLLLLLLL),U(1*U(1*U,A,A,A),A,A,A,A,A,A,A,A,A,1*U)><L,U>,
       Inline: INLINE[0],
       Unfolding: InlineRule (2, True, False)
                  (\ w :: Flickr.Monad.FMEnv
                     w1 :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   case w of ww { Flickr.Monad.FMEnv ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ->
                   case ww1 of ww12 { Util.Keys.APIKey ww13 ww14 ww15 ww16 ->
                   Util.Authenticate.$wa ww13 ww11 w1 } }) -}
3e0405ff60bdf87e69950ce759227fad
  authenticateForMobile3 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString#
                     ", expected 'mobile'."#) -}
3eab722195c725696a33f3341bbb4b8f
  authenticateForMobile4 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "mobile"#) -}
6882b28f0c57d8304e6b9e744ee1f9be
  authenticateForWeb :: GHC.Base.String
                        -> Flickr.Monad.FM
                               (Data.Maybe.Maybe
                                    (Flickr.Types.URLString,
                                     Flickr.Monad.FM Flickr.Types.AuthToken))
    {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
       Unfolding: InlineRule (1, True, False)
                  (\ w :: GHC.Base.String ->
                   case Util.Authenticate.$wauthenticateForWeb w of ww { (##) ww1 ->
                   Flickr.Monad.FM
                     @ (Data.Maybe.Maybe
                            (Flickr.Types.URLString, Flickr.Monad.FM Flickr.Types.AuthToken))
                     ww1 }) -}
98ffc3ffd98be5fd937bf677b9695fbf
  authenticateForWeb1 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# ", expected 'web'."#) -}
7e8d9b221e3b8d2430f2788329f30696
  authenticateForWeb2 :: [GHC.Types.Char]
    {- Unfolding: (GHC.CString.unpackCString# "web"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

