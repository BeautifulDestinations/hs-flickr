
==================== FINAL INTERFACE ====================
2016-03-01 11:43:29.916577 UTC

interface main:Main 7084
  interface hash: 62b1abd955327b1a268355723ccf29de
  ABI hash: d6ef29975757fcad49b08cf35d3f0cbe
  export-list hash: 30e40afdc7fb9d6177c93a3b45a87592
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 1179aa7e790afc993aa301a0e68d7a51
  used TH splices: False
  where
exports:
  Main.main
module dependencies: Codec.Percent Codec.URLEncoder Flickr.API
                     Flickr.Auth Flickr.Monad Flickr.People Flickr.Photos Flickr.Types
                     Flickr.Types.Import Flickr.Utils Util.Fetch Util.Keys Util.MD5
                     Util.MIME Util.Post
package dependencies: HTTP-4000.2.20 array-0.5.0.0 base
                      bytestring-0.10.4.0 deepseq-1.3.0.2 filepath-1.3.0.2 ghc-prim
                      integer-gmp mime-0.3.4 mtl-2.1.3.1 network-2.6.2.1
                      network-uri-2.6.0.3 old-locale-1.0.0.6 old-time-1.1.0.2
                      parsec-3.1.9 random-1.1 text-1.2.0.6 time-1.4.2
                      transformers-0.3.0.0 utf8-string-1 xml-1.3.14
orphans: base:GHC.Base base:GHC.Float base:GHC.Real
         network-2.6.2.1:Network.Socket network-2.6.2.1:Network.Socket.Types
         random-1.1:System.Random text-1.2.0.6:Data.Text
         text-1.2.0.6:Data.Text.Lazy time-1.4.2:Data.Time.Calendar.Gregorian
         time-1.4.2:Data.Time.Format.Parse
         time-1.4.2:Data.Time.LocalTime.LocalTime
         transformers-0.3.0.0:Control.Monad.Trans.Error
family instance modules: base:Control.Applicative base:Data.Either
                         base:Data.Monoid base:Data.Type.Equality base:GHC.Exts
                         base:GHC.Generics network-uri-2.6.0.3:Network.URI
                         text-1.2.0.6:Data.Text text-1.2.0.6:Data.Text.Lazy
import  -/  base:Control.Monad 483e787e07c2e49f1fb1c1b88665cb92
import  -/  base:Data.Either d1c890129a7c6a9ec02a642c6c2f4ed3
import  -/  base:Data.Maybe 5034d40e23c3a7110309f188001df4ca
import  -/  base:GHC.Base 5d7c5f596f9a4c8a8abd8517c8bcd5dd
import  -/  base:GHC.List 4cff382327e59a5787355ca0a4174450
import  -/  base:GHC.Show cf1a7ff9edb0f41528085aad04d33753
import  -/  base:Prelude 74043f272d60acec1777d3461cfe5ef4
import  -/  base:System.Environment 0f0ffdcc2262b84e2b5f1b81d9f7fe9b
import  -/  base:System.IO cadd0efb01c47ddd8f52d750739fdbdf
import  -/  ghc-prim:GHC.Classes 3e6cbe1e7e80480408cfa8d5450726a0
import  -/  ghc-prim:GHC.Types dcba736fa3dfba12d307ab18354845d2
import  -/  Flickr.API cf047e72c7d58b05d5c7ca6ff6f44370
  exports: 522d47eb3baf3120707f67fc117efe02
import  -/  Flickr.Monad 04dcf41add9dda483c4e1216c1e4d955
  FM 91641286fd5a4035d1caa1713877af9c
  flickAPI fbbb243522aedb0d2c279bdc3658e84b
  flickErrorCode 771a93d5e02adb9bf952a46b73270600
  liftIO 6c79d95117e60a0ceac992fb5e49334d
  throwFlickErr 0c15d6150b1ed8f8e1b65848f6c902ce
  tryFlick b79261d9bc5d65a3da323e92ff943733
  withPageSize 8f285bfde770d5fd719eac5800c2e052
import  -/  Flickr.People ca2d1677ec8eb73532db12ccde79f511
  exports: 3dc10605d5adb9de8d1e8edad7f0d226
  findByUsername 9c5ff67b06f59cd87a2cfa42768e5bb4
  getPublicPhotos f8783e734454b2ecdde4cfcc62833c6c
import  -/  Flickr.Photos 93f1fcbb1cee42c600add2ba8148ec74
  exports: 48860187e67d0fe40b87f9672a2894e2
  getInfo 8e45436e9bb4bc9232c3c2d520dfdca7
  getPhotoURL 55e166ff0b7455a9331b359c463edcb2
import  -/  Flickr.Types 653ba19fff32ac001f790083a5a45199
  PhotoDetails afa8e7966b786b9f1577afd375bd6d0e
  User 55da6a4521f5104a0ed92f1cfebb3575
  photoDetailsPhoto f01056a1cc5eda99b4f586059c6c6da0
  photoId 2029adeffba43b6eecf965987a03a43a
  photoTitle efbc334cc316edd18512237d49a92405
  userId 33053105e771e5797ec5e4d2aa72f067
import  -/  Util.Keys fdd2df5c60ac0d1bfb99b30649a78a7f
  exports: 8d589c26582bfacee3a7fce0824169be
  hsflickrAPIKey ef807000aa7a6a28f25f186e26b0ca55
a91a63b2c7f06d314e8b872a1018f905
  main :: GHC.Types.IO ()
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (Main.main1
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
101744289cd6f172388215b4d7df9f5d
  main1 :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 1, Strictness: <L,U> -}
fa2e930aa1749158fe26aca59e2e77e9
  main2 :: GHC.Prim.State# GHC.Prim.RealWorld
           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
    {- Arity: 1, Strictness: <L,U>,
       Unfolding: (\ eta :: GHC.Prim.State# GHC.Prim.RealWorld ->
                   GHC.TopHandler.runMainIO1
                     @ ()
                     Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                     eta) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

